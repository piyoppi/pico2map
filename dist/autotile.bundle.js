/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./autotile/src/autotile.ts":
/*!**********************************!*\
  !*** ./autotile/src/autotile.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _piyoppi_pico2map_ui_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @piyoppi/pico2map-ui-components */ \"../map-editor-components/dist/main.js\");\n/* harmony import */ var _piyoppi_pico2map_ui_components__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_piyoppi_pico2map_ui_components__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @piyoppi/pico2map-tiled */ \"../tiled-map/dist/main.js\");\n/* harmony import */ var _piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_1__);\n\n\n// Define some custom elements\n(0,_piyoppi_pico2map_ui_components__WEBPACK_IMPORTED_MODULE_0__.defineComponent)();\n// Map size is 30 x 30, MapChip size is 32 x 32px\nconst tiledMap = new _piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_1__.TiledMap(30, 30, 32, 32);\n// MapChip image (using 'auto-tile-sample.png' and chipId = 1)\nconst mapChipImage = new _piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_1__.MapChipImage(\"images/auto-tile-sample.png\", 1);\nconst init = async () => {\n    await mapChipImage.waitWhileLoading();\n    // Attach mapChipImage to tiledMap\n    tiledMap.mapChipsCollection.push(mapChipImage);\n    // Import autoTile (MapChip size is 32 x 32px)\n    tiledMap.autoTiles.import(new _piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_1__.DefaultAutoTileImportStrategy(mapChipImage, 32, 32));\n    // Attach tiledMap to project(projectId: 1)\n    _piyoppi_pico2map_ui_components__WEBPACK_IMPORTED_MODULE_0__.Projects.add(tiledMap, 1);\n};\ninit();\n\n\n//# sourceURL=webpack://@piyoppi/pico2map-samples/./autotile/src/autotile.ts?");

/***/ }),

/***/ "../map-editor-components/dist/main.js":
/*!*********************************************!*\
  !*** ../map-editor-components/dist/main.js ***!
  \*********************************************/
/***/ ((module) => {

eval("(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse {}\n})(self, function() {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ([\n/* 0 */,\n/* 1 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_519__) => {\n\n\"use strict\";\n__nested_webpack_require_519__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_519__.d(__webpack_exports__, {\n/* harmony export */   \"MapChipSelectorComponent\": () => (/* binding */ MapChipSelectorComponent)\n/* harmony export */ });\n/* harmony import */ var lit_element__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_519__(2);\n/* harmony import */ var _piyoppi_pico2map_editor__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_519__(19);\n/* harmony import */ var _piyoppi_pico2map_editor__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_519__.n(_piyoppi_pico2map_editor__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Helpers_CursorPositionCalculator__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_519__(20);\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\nclass MapChipSelectorComponent extends lit_element__WEBPACK_IMPORTED_MODULE_0__.LitElement {\n    constructor() {\n        super(...arguments);\n        this._gridImageSrc = '';\n        this.gridImageGenerator = new _piyoppi_pico2map_editor__WEBPACK_IMPORTED_MODULE_1__.GridImageGenerator();\n        this.cursorPositionCalculator = new _Helpers_CursorPositionCalculator__WEBPACK_IMPORTED_MODULE_2__.CursorPositionCalculator();\n        this._project = null;\n        this._chipImage = null;\n        this._mapChipSelector = null;\n        this._projectId = -1;\n        this._chipId = -1;\n        this.cursorChipX = 0;\n        this.cursorChipY = 0;\n        this.selectedChipY = 0;\n        this.selectedChipX = 0;\n    }\n    get projectId() {\n        return this._projectId;\n    }\n    set projectId(value) {\n        const oldValue = this._projectId;\n        this._projectId = value;\n        this._project = _piyoppi_pico2map_editor__WEBPACK_IMPORTED_MODULE_1__.Projects.fromProjectId(value);\n        this.setupMapChipSelector();\n        this.requestUpdate('projectId', oldValue);\n    }\n    get chipId() {\n        return this._chipId;\n    }\n    set chipId(value) {\n        const oldValue = this._chipId;\n        this._chipId = value;\n        this.setupMapChipSelector();\n        this.requestUpdate('chipId', oldValue);\n    }\n    get mapChipSelector() {\n        if (!this._mapChipSelector)\n            throw new Error('The project is not set');\n        return this._mapChipSelector;\n    }\n    get gridWidth() {\n        var _a;\n        return ((_a = this._project) === null || _a === void 0 ? void 0 : _a.tiledMap.chipWidth) || 0;\n    }\n    get gridHeight() {\n        var _a;\n        return ((_a = this._project) === null || _a === void 0 ? void 0 : _a.tiledMap.chipHeight) || 0;\n    }\n    get cursorPosition() {\n        return {\n            x: this.cursorChipX * this.gridWidth,\n            y: this.cursorChipY * this.gridHeight\n        };\n    }\n    get selectedPosition() {\n        return {\n            x: this.selectedChipX * this.gridWidth,\n            y: this.selectedChipY * this.gridHeight\n        };\n    }\n    setupMapChipSelector() {\n        if (!this._project || this._chipId < 0)\n            return;\n        this._chipImage = this._project.tiledMap.mapChipsCollection.findById(this._chipId);\n        this._mapChipSelector = new _piyoppi_pico2map_editor__WEBPACK_IMPORTED_MODULE_1__.MapChipSelector(this._project.tiledMap);\n    }\n    mouseMove(e) {\n        if (!this._chipImage)\n            return;\n        const mouseCursorPosition = this.cursorPositionCalculator.getMouseCursorPosition(e.pageX, e.pageY);\n        const chip = this.mapChipSelector.convertFromImagePositionToChipPosition(this._chipImage, mouseCursorPosition.x, mouseCursorPosition.y);\n        this.cursorChipX = chip.x;\n        this.cursorChipY = chip.y;\n    }\n    mouseDown(e) {\n        if (!this._chipImage)\n            return;\n        const mouseCursorPosition = this.cursorPositionCalculator.getMouseCursorPosition(e.pageX, e.pageY);\n        this.mapChipSelector.selectAtMouseCursor(this._chipImage, mouseCursorPosition.x, mouseCursorPosition.y);\n        const selectedChip = this.mapChipSelector.selectedChips[0];\n        if (!selectedChip)\n            return;\n        this.selectedChipX = selectedChip.x;\n        this.selectedChipY = selectedChip.y;\n        this.dispatchEvent(new CustomEvent('mapchip-selected', {\n            detail: { selectedMapChipProperties: selectedChip.toObject() },\n            bubbles: true,\n            composed: true\n        }));\n    }\n    firstUpdated() {\n        var _a;\n        const element = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.getElementById('boundary');\n        if (element)\n            this.cursorPositionCalculator.setElement(element);\n    }\n    render() {\n        var _a, _b, _c;\n        this.gridImageGenerator.setGridSize(this.gridWidth, this.gridHeight);\n        if (this.gridImageGenerator.changed) {\n            this._gridImageSrc = this.gridImageGenerator.generateLinePart().toDataURL();\n        }\n        return lit_element__WEBPACK_IMPORTED_MODULE_0__.html `\n      <style>\n        .grid {\n          background-image: url(\"${this._gridImageSrc}\");\n          width: ${((_a = this._chipImage) === null || _a === void 0 ? void 0 : _a.image.width) || 0}px;\n          height: ${((_b = this._chipImage) === null || _b === void 0 ? void 0 : _b.image.height) || 0}px;\n        }\n\n        .cursor {\n          width: ${this.gridWidth}px;\n          height: ${this.gridHeight}px;\n          left: ${this.cursorPosition.x}px;\n          top: ${this.cursorPosition.y}px;\n        }\n\n        .selected {\n          width: ${this.gridWidth}px;\n          height: ${this.gridHeight}px;\n          left: ${this.selectedPosition.x}px;\n          top: ${this.selectedPosition.y}px;\n        }\n      </style>\n\n      <div id=\"boundary\">\n        <img id=\"chip-image\" src=\"${(_c = this._chipImage) === null || _c === void 0 ? void 0 : _c.src}\">\n        <div\n          class=\"grid-image grid\"\n          @mousemove=\"${(e) => this.mouseMove(e)}\"\n          @mousedown=\"${(e) => this.mouseDown(e)}\"\n        ></div>\n        <div class=\"cursor\"></div>\n        <div class=\"selected\"></div>\n      </div>\n    `;\n    }\n    static get styles() {\n        return lit_element__WEBPACK_IMPORTED_MODULE_0__.css `\n      .grid-image {\n        position: absolute;\n        top: 0;\n        left: 0;\n        background-repeat: repeat;\n      }\n\n      .cursor, .selected {\n        position: absolute;\n        border-style: solid;\n        box-sizing: border-box;\n      }\n\n      .cursor {\n        border-color: red;\n        pointer-events: none;\n      }\n\n      .selected {\n        border-color: blue;\n        pointer-events: none;\n      }\n\n      #boundary {\n        position: relative;\n      }\n\n      #chip-image {\n        display: block;\n      }\n    `;\n    }\n}\n__decorate([\n    (0,lit_element__WEBPACK_IMPORTED_MODULE_0__.property)({ type: Number })\n], MapChipSelectorComponent.prototype, \"projectId\", null);\n__decorate([\n    (0,lit_element__WEBPACK_IMPORTED_MODULE_0__.property)({ type: Number })\n], MapChipSelectorComponent.prototype, \"chipId\", null);\n__decorate([\n    (0,lit_element__WEBPACK_IMPORTED_MODULE_0__.property)({ type: Number })\n], MapChipSelectorComponent.prototype, \"cursorChipX\", void 0);\n__decorate([\n    (0,lit_element__WEBPACK_IMPORTED_MODULE_0__.property)({ type: Number })\n], MapChipSelectorComponent.prototype, \"cursorChipY\", void 0);\n__decorate([\n    (0,lit_element__WEBPACK_IMPORTED_MODULE_0__.property)({ type: Number })\n], MapChipSelectorComponent.prototype, \"selectedChipY\", void 0);\n__decorate([\n    (0,lit_element__WEBPACK_IMPORTED_MODULE_0__.property)({ type: Number })\n], MapChipSelectorComponent.prototype, \"selectedChipX\", void 0);\n\n\n/***/ }),\n/* 2 */\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nested_webpack_require_8706__) => {\n\n\"use strict\";\n__nested_webpack_require_8706__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_8706__.d(__webpack_exports__, {\n/* harmony export */   \"UpdatingElement\": () => (/* reexport safe */ _lib_updating_element_js__WEBPACK_IMPORTED_MODULE_1__.UpdatingElement),\n/* harmony export */   \"defaultConverter\": () => (/* reexport safe */ _lib_updating_element_js__WEBPACK_IMPORTED_MODULE_1__.defaultConverter),\n/* harmony export */   \"notEqual\": () => (/* reexport safe */ _lib_updating_element_js__WEBPACK_IMPORTED_MODULE_1__.notEqual),\n/* harmony export */   \"customElement\": () => (/* reexport safe */ _lib_decorators_js__WEBPACK_IMPORTED_MODULE_2__.customElement),\n/* harmony export */   \"eventOptions\": () => (/* reexport safe */ _lib_decorators_js__WEBPACK_IMPORTED_MODULE_2__.eventOptions),\n/* harmony export */   \"internalProperty\": () => (/* reexport safe */ _lib_decorators_js__WEBPACK_IMPORTED_MODULE_2__.internalProperty),\n/* harmony export */   \"property\": () => (/* reexport safe */ _lib_decorators_js__WEBPACK_IMPORTED_MODULE_2__.property),\n/* harmony export */   \"query\": () => (/* reexport safe */ _lib_decorators_js__WEBPACK_IMPORTED_MODULE_2__.query),\n/* harmony export */   \"queryAll\": () => (/* reexport safe */ _lib_decorators_js__WEBPACK_IMPORTED_MODULE_2__.queryAll),\n/* harmony export */   \"queryAssignedNodes\": () => (/* reexport safe */ _lib_decorators_js__WEBPACK_IMPORTED_MODULE_2__.queryAssignedNodes),\n/* harmony export */   \"queryAsync\": () => (/* reexport safe */ _lib_decorators_js__WEBPACK_IMPORTED_MODULE_2__.queryAsync),\n/* harmony export */   \"html\": () => (/* reexport safe */ lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_3__.html),\n/* harmony export */   \"svg\": () => (/* reexport safe */ lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_3__.svg),\n/* harmony export */   \"TemplateResult\": () => (/* reexport safe */ lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_3__.TemplateResult),\n/* harmony export */   \"SVGTemplateResult\": () => (/* reexport safe */ lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_3__.SVGTemplateResult),\n/* harmony export */   \"CSSResult\": () => (/* reexport safe */ _lib_css_tag_js__WEBPACK_IMPORTED_MODULE_4__.CSSResult),\n/* harmony export */   \"css\": () => (/* reexport safe */ _lib_css_tag_js__WEBPACK_IMPORTED_MODULE_4__.css),\n/* harmony export */   \"supportsAdoptingStyleSheets\": () => (/* reexport safe */ _lib_css_tag_js__WEBPACK_IMPORTED_MODULE_4__.supportsAdoptingStyleSheets),\n/* harmony export */   \"unsafeCSS\": () => (/* reexport safe */ _lib_css_tag_js__WEBPACK_IMPORTED_MODULE_4__.unsafeCSS),\n/* harmony export */   \"LitElement\": () => (/* binding */ LitElement)\n/* harmony export */ });\n/* harmony import */ var lit_html_lib_shady_render_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_8706__(3);\n/* harmony import */ var _lib_updating_element_js__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_8706__(16);\n/* harmony import */ var _lib_decorators_js__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_8706__(17);\n/* harmony import */ var lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_8706__(14);\n/* harmony import */ var _lib_css_tag_js__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_8706__(18);\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * The main LitElement module, which defines the [[`LitElement`]] base class and\n * related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import [[`LitElement`]] and [[`html`]] from this module to create a\n * component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends [[`UpdatingElement`]] and adds lit-html templating.\n * The `UpdatingElement` class is provided for users that want to build\n * their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\n\n\n\n\n\n\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.4.0');\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the [[`properties`]] property or the [[`property`]] decorator.\n */\nclass LitElement extends _lib_updating_element_js__WEBPACK_IMPORTED_MODULE_1__.UpdatingElement {\n    /**\n     * Return the array of styles to apply to the element.\n     * Override this method to integrate into a style management system.\n     *\n     * @nocollapse\n     */\n    static getStyles() {\n        return this.styles;\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Only gather styles once per class\n        if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n            return;\n        }\n        // Take care not to call `this.getStyles()` multiple times since this\n        // generates new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.getStyles();\n        if (Array.isArray(userStyles)) {\n            // De-duplicate styles preserving the _last_ instance in the set.\n            // This is a performance optimization to avoid duplicated styles that can\n            // occur especially when composing via subclassing.\n            // The last item is kept to try to preserve the cascade order with the\n            // assumption that it's most important that last added styles override\n            // previous styles.\n            const addStyles = (styles, set) => styles.reduceRight((set, s) => \n            // Note: On IE set.add() does not return the set\n            Array.isArray(s) ? addStyles(s, set) : (set.add(s), set), set);\n            // Array.from does not work on Set in IE, otherwise return\n            // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n            const set = addStyles(userStyles, new Set());\n            const styles = [];\n            set.forEach((v) => styles.unshift(v));\n            this._styles = styles;\n        }\n        else {\n            this._styles = userStyles === undefined ? [] : [userStyles];\n        }\n        // Ensure that there are no invalid CSSStyleSheet instances here. They are\n        // invalid in two conditions.\n        // (1) the sheet is non-constructible (`sheet` of a HTMLStyleElement), but\n        //     this is impossible to check except via .replaceSync or use\n        // (2) the ShadyCSS polyfill is enabled (:. supportsAdoptingStyleSheets is\n        //     false)\n        this._styles = this._styles.map((s) => {\n            if (s instanceof CSSStyleSheet && !_lib_css_tag_js__WEBPACK_IMPORTED_MODULE_4__.supportsAdoptingStyleSheets) {\n                // Flatten the cssText from the passed constructible stylesheet (or\n                // undetectable non-constructible stylesheet). The user might have\n                // expected to update their stylesheets over time, but the alternative\n                // is a crash.\n                const cssText = Array.prototype.slice.call(s.cssRules)\n                    .reduce((css, rule) => css + rule.cssText, '');\n                return (0,_lib_css_tag_js__WEBPACK_IMPORTED_MODULE_4__.unsafeCSS)(cssText);\n            }\n            return s;\n        });\n    }\n    /**\n     * Performs element initialization. By default this calls\n     * [[`createRenderRoot`]] to create the element [[`renderRoot`]] node and\n     * captures any pre-set values for registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.constructor._getUniqueStyles();\n        this.renderRoot = this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the [[`styles`]]\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (_lib_css_tag_js__WEBPACK_IMPORTED_MODULE_4__.supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s instanceof CSSStyleSheet ? s : s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        // Setting properties in `render` should not trigger an update. Since\n        // updates are allowed after super.update, it's important to call `render`\n        // before that.\n        const templateResult = this.render();\n        super.update(changedProperties);\n        // If render is not implemented by the component, don't call lit-html render\n        if (templateResult !== renderNotImplemented) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method may return\n     * any value renderable by lit-html's `NodePart` - typically a\n     * `TemplateResult`. Setting properties inside this method will *not* trigger\n     * the element to update.\n     */\n    render() {\n        return renderNotImplemented;\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Reference to the underlying library method used to render the element's\n * DOM. By default, points to the `render` method from lit-html's shady-render\n * module.\n *\n * **Most users will never need to touch this property.**\n *\n * This  property should not be confused with the `render` instance method,\n * which should be overridden to define a template for the element.\n *\n * Advanced users creating a new base class based on LitElement can override\n * this property to point to a custom render method with a signature that\n * matches [shady-render's `render`\n * method](https://lit-html.polymer-project.org/api/modules/shady_render.html#render).\n *\n * @nocollapse\n */\nLitElement.render = lit_html_lib_shady_render_js__WEBPACK_IMPORTED_MODULE_0__.render;\n//# sourceMappingURL=lit-element.js.map\n\n/***/ }),\n/* 3 */\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nested_webpack_require_23569__) => {\n\n\"use strict\";\n__nested_webpack_require_23569__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_23569__.d(__webpack_exports__, {\n/* harmony export */   \"html\": () => (/* reexport safe */ _lit_html_js__WEBPACK_IMPORTED_MODULE_6__.html),\n/* harmony export */   \"svg\": () => (/* reexport safe */ _lit_html_js__WEBPACK_IMPORTED_MODULE_6__.svg),\n/* harmony export */   \"TemplateResult\": () => (/* reexport safe */ _lit_html_js__WEBPACK_IMPORTED_MODULE_6__.TemplateResult),\n/* harmony export */   \"shadyTemplateFactory\": () => (/* binding */ shadyTemplateFactory),\n/* harmony export */   \"render\": () => (/* binding */ render)\n/* harmony export */ });\n/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_23569__(4);\n/* harmony import */ var _modify_template_js__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_23569__(5);\n/* harmony import */ var _render_js__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_23569__(7);\n/* harmony import */ var _template_factory_js__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_23569__(13);\n/* harmony import */ var _template_instance_js__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_23569__(11);\n/* harmony import */ var _template_js__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_23569__(6);\n/* harmony import */ var _lit_html_js__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_23569__(14);\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\n\n\n\n\n\n\n\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = _template_factory_js__WEBPACK_IMPORTED_MODULE_3__.templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        _template_factory_js__WEBPACK_IMPORTED_MODULE_3__.templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(_template_js__WEBPACK_IMPORTED_MODULE_5__.marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new _template_js__WEBPACK_IMPORTED_MODULE_5__.Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = _template_factory_js__WEBPACK_IMPORTED_MODULE_3__.templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                (0,_modify_template_js__WEBPACK_IMPORTED_MODULE_1__.removeNodesFromTemplate)(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        (0,_modify_template_js__WEBPACK_IMPORTED_MODULE_1__.insertNodeIntoTemplate)(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        (0,_modify_template_js__WEBPACK_IMPORTED_MODULE_1__.removeNodesFromTemplate)(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nconst render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = _render_js__WEBPACK_IMPORTED_MODULE_2__.parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    (0,_render_js__WEBPACK_IMPORTED_MODULE_2__.render)(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = _render_js__WEBPACK_IMPORTED_MODULE_2__.parts.get(renderContainer);\n        _render_js__WEBPACK_IMPORTED_MODULE_2__.parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof _template_instance_js__WEBPACK_IMPORTED_MODULE_4__.TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        (0,_dom_js__WEBPACK_IMPORTED_MODULE_0__.removeNodes)(container, container.firstChild);\n        container.appendChild(renderContainer);\n        _render_js__WEBPACK_IMPORTED_MODULE_2__.parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map\n\n/***/ }),\n/* 4 */\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nested_webpack_require_39227__) => {\n\n\"use strict\";\n__nested_webpack_require_39227__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_39227__.d(__webpack_exports__, {\n/* harmony export */   \"isCEPolyfill\": () => (/* binding */ isCEPolyfill),\n/* harmony export */   \"reparentNodes\": () => (/* binding */ reparentNodes),\n/* harmony export */   \"removeNodes\": () => (/* binding */ removeNodes)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nconst isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nconst reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nconst removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map\n\n/***/ }),\n/* 5 */\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nested_webpack_require_41238__) => {\n\n\"use strict\";\n__nested_webpack_require_41238__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_41238__.d(__webpack_exports__, {\n/* harmony export */   \"removeNodesFromTemplate\": () => (/* binding */ removeNodesFromTemplate),\n/* harmony export */   \"insertNodeIntoTemplate\": () => (/* binding */ insertNodeIntoTemplate)\n/* harmony export */ });\n/* harmony import */ var _template_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_41238__(6);\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nfunction removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if ((0,_template_js__WEBPACK_IMPORTED_MODULE_0__.isTemplatePartActive)(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nfunction insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map\n\n/***/ }),\n/* 6 */\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nested_webpack_require_46801__) => {\n\n\"use strict\";\n__nested_webpack_require_46801__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_46801__.d(__webpack_exports__, {\n/* harmony export */   \"marker\": () => (/* binding */ marker),\n/* harmony export */   \"nodeMarker\": () => (/* binding */ nodeMarker),\n/* harmony export */   \"markerRegex\": () => (/* binding */ markerRegex),\n/* harmony export */   \"boundAttributeSuffix\": () => (/* binding */ boundAttributeSuffix),\n/* harmony export */   \"Template\": () => (/* binding */ Template),\n/* harmony export */   \"isTemplatePartActive\": () => (/* binding */ isTemplatePartActive),\n/* harmony export */   \"createMarker\": () => (/* binding */ createMarker),\n/* harmony export */   \"lastAttributeNameRegex\": () => (/* binding */ lastAttributeNameRegex)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nconst marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nconst nodeMarker = `<!--${marker}-->`;\nconst markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nconst boundAttributeSuffix = '$lit$';\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nclass Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nconst isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nconst createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nconst lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map\n\n/***/ }),\n/* 7 */\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nested_webpack_require_57936__) => {\n\n\"use strict\";\n__nested_webpack_require_57936__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_57936__.d(__webpack_exports__, {\n/* harmony export */   \"parts\": () => (/* binding */ parts),\n/* harmony export */   \"render\": () => (/* binding */ render)\n/* harmony export */ });\n/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_57936__(4);\n/* harmony import */ var _parts_js__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_57936__(8);\n/* harmony import */ var _template_factory_js__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_57936__(13);\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n\n\nconst parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nconst render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        (0,_dom_js__WEBPACK_IMPORTED_MODULE_0__.removeNodes)(container, container.firstChild);\n        parts.set(container, part = new _parts_js__WEBPACK_IMPORTED_MODULE_1__.NodePart(Object.assign({ templateFactory: _template_factory_js__WEBPACK_IMPORTED_MODULE_2__.templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map\n\n/***/ }),\n/* 8 */\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nested_webpack_require_60460__) => {\n\n\"use strict\";\n__nested_webpack_require_60460__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_60460__.d(__webpack_exports__, {\n/* harmony export */   \"isPrimitive\": () => (/* binding */ isPrimitive),\n/* harmony export */   \"isIterable\": () => (/* binding */ isIterable),\n/* harmony export */   \"AttributeCommitter\": () => (/* binding */ AttributeCommitter),\n/* harmony export */   \"AttributePart\": () => (/* binding */ AttributePart),\n/* harmony export */   \"NodePart\": () => (/* binding */ NodePart),\n/* harmony export */   \"BooleanAttributePart\": () => (/* binding */ BooleanAttributePart),\n/* harmony export */   \"PropertyCommitter\": () => (/* binding */ PropertyCommitter),\n/* harmony export */   \"PropertyPart\": () => (/* binding */ PropertyPart),\n/* harmony export */   \"EventPart\": () => (/* binding */ EventPart)\n/* harmony export */ });\n/* harmony import */ var _directive_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_60460__(9);\n/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_60460__(4);\n/* harmony import */ var _part_js__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_60460__(10);\n/* harmony import */ var _template_instance_js__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_60460__(11);\n/* harmony import */ var _template_result_js__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_60460__(12);\n/* harmony import */ var _template_js__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_60460__(6);\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n\n\n\n\n\nconst isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nconst isIterable = (value) => {\n    return Array.isArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nclass AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        const parts = this.parts;\n        // If we're assigning an attribute via syntax like:\n        //    attr=\"${foo}\"  or  attr=${foo}\n        // but not\n        //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n        // then we don't want to coerce the attribute value into one long\n        // string. Instead we want to just return the value itself directly,\n        // so that sanitizeDOMValue can get the actual value rather than\n        // String(value)\n        // The exception is if v is an array, in which case we do want to smash\n        // it together into a string without calling String() on the array.\n        //\n        // This also allows trusted values (when using TrustedTypes) being\n        // assigned to DOM sinks without being stringified in the process.\n        if (l === 1 && strings[0] === '' && strings[1] === '') {\n            const v = parts[0].value;\n            if (typeof v === 'symbol') {\n                return String(v);\n            }\n            if (typeof v === 'string' || !isIterable(v)) {\n                return v;\n            }\n        }\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nclass AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== _part_js__WEBPACK_IMPORTED_MODULE_2__.noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!(0,_directive_js__WEBPACK_IMPORTED_MODULE_0__.isDirective)(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while ((0,_directive_js__WEBPACK_IMPORTED_MODULE_0__.isDirective)(this.value)) {\n            const directive = this.value;\n            this.value = _part_js__WEBPACK_IMPORTED_MODULE_2__.noChange;\n            directive(this);\n        }\n        if (this.value === _part_js__WEBPACK_IMPORTED_MODULE_2__.noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nclass NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild((0,_template_js__WEBPACK_IMPORTED_MODULE_5__.createMarker)());\n        this.endNode = container.appendChild((0,_template_js__WEBPACK_IMPORTED_MODULE_5__.createMarker)());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = (0,_template_js__WEBPACK_IMPORTED_MODULE_5__.createMarker)());\n        part.__insert(this.endNode = (0,_template_js__WEBPACK_IMPORTED_MODULE_5__.createMarker)());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = (0,_template_js__WEBPACK_IMPORTED_MODULE_5__.createMarker)());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while ((0,_directive_js__WEBPACK_IMPORTED_MODULE_0__.isDirective)(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = _part_js__WEBPACK_IMPORTED_MODULE_2__.noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === _part_js__WEBPACK_IMPORTED_MODULE_2__.noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof _template_result_js__WEBPACK_IMPORTED_MODULE_4__.TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === _part_js__WEBPACK_IMPORTED_MODULE_2__.nothing) {\n            this.value = _part_js__WEBPACK_IMPORTED_MODULE_2__.nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof _template_instance_js__WEBPACK_IMPORTED_MODULE_3__.TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new _template_instance_js__WEBPACK_IMPORTED_MODULE_3__.TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        (0,_dom_js__WEBPACK_IMPORTED_MODULE_1__.removeNodes)(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nclass BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while ((0,_directive_js__WEBPACK_IMPORTED_MODULE_0__.isDirective)(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = _part_js__WEBPACK_IMPORTED_MODULE_2__.noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === _part_js__WEBPACK_IMPORTED_MODULE_2__.noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = _part_js__WEBPACK_IMPORTED_MODULE_2__.noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nclass PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nclass PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n    try {\n        const options = {\n            get capture() {\n                eventOptionsSupported = true;\n                return false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.addEventListener('test', options, options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.removeEventListener('test', options, options);\n    }\n    catch (_e) {\n        // event options not supported\n    }\n})();\nclass EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while ((0,_directive_js__WEBPACK_IMPORTED_MODULE_0__.isDirective)(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = _part_js__WEBPACK_IMPORTED_MODULE_2__.noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === _part_js__WEBPACK_IMPORTED_MODULE_2__.noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = _part_js__WEBPACK_IMPORTED_MODULE_2__.noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map\n\n/***/ }),\n/* 9 */\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nested_webpack_require_80088__) => {\n\n\"use strict\";\n__nested_webpack_require_80088__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_80088__.d(__webpack_exports__, {\n/* harmony export */   \"directive\": () => (/* binding */ directive),\n/* harmony export */   \"isDirective\": () => (/* binding */ isDirective)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nconst directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nconst isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map\n\n/***/ }),\n/* 10 */\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nested_webpack_require_82874__) => {\n\n\"use strict\";\n__nested_webpack_require_82874__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_82874__.d(__webpack_exports__, {\n/* harmony export */   \"noChange\": () => (/* binding */ noChange),\n/* harmony export */   \"nothing\": () => (/* binding */ nothing)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nconst noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nconst nothing = {};\n//# sourceMappingURL=part.js.map\n\n/***/ }),\n/* 11 */\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nested_webpack_require_84088__) => {\n\n\"use strict\";\n__nested_webpack_require_84088__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_84088__.d(__webpack_exports__, {\n/* harmony export */   \"TemplateInstance\": () => (/* binding */ TemplateInstance)\n/* harmony export */ });\n/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_84088__(4);\n/* harmony import */ var _template_js__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_84088__(6);\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nclass TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari does not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = _dom_js__WEBPACK_IMPORTED_MODULE_0__.isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!(0,_template_js__WEBPACK_IMPORTED_MODULE_1__.isTemplatePartActive)(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (_dom_js__WEBPACK_IMPORTED_MODULE_0__.isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map\n\n/***/ }),\n/* 12 */\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nested_webpack_require_90640__) => {\n\n\"use strict\";\n__nested_webpack_require_90640__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_90640__.d(__webpack_exports__, {\n/* harmony export */   \"TemplateResult\": () => (/* binding */ TemplateResult),\n/* harmony export */   \"SVGTemplateResult\": () => (/* binding */ SVGTemplateResult)\n/* harmony export */ });\n/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_90640__(4);\n/* harmony import */ var _template_js__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_90640__(6);\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\n\n\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = window.trustedTypes &&\n    trustedTypes.createPolicy('lit-html', { createHTML: (s) => s });\nconst commentMarker = ` ${_template_js__WEBPACK_IMPORTED_MODULE_1__.marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nclass TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = _template_js__WEBPACK_IMPORTED_MODULE_1__.lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : _template_js__WEBPACK_IMPORTED_MODULE_1__.nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + _template_js__WEBPACK_IMPORTED_MODULE_1__.boundAttributeSuffix + attributeMatch[3] +\n                    _template_js__WEBPACK_IMPORTED_MODULE_1__.marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        let value = this.getHTML();\n        if (policy !== undefined) {\n            // this is secure because `this.strings` is a TemplateStringsArray.\n            // TODO: validate this when\n            // https://github.com/tc39/proposal-array-is-template-object is\n            // implemented.\n            value = policy.createHTML(value);\n        }\n        template.innerHTML = value;\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nclass SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        (0,_dom_js__WEBPACK_IMPORTED_MODULE_0__.reparentNodes)(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map\n\n/***/ }),\n/* 13 */\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nested_webpack_require_97247__) => {\n\n\"use strict\";\n__nested_webpack_require_97247__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_97247__.d(__webpack_exports__, {\n/* harmony export */   \"templateFactory\": () => (/* binding */ templateFactory),\n/* harmony export */   \"templateCaches\": () => (/* binding */ templateCaches)\n/* harmony export */ });\n/* harmony import */ var _template_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_97247__(6);\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nfunction templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(_template_js__WEBPACK_IMPORTED_MODULE_0__.marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new _template_js__WEBPACK_IMPORTED_MODULE_0__.Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nconst templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map\n\n/***/ }),\n/* 14 */\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nested_webpack_require_99730__) => {\n\n\"use strict\";\n__nested_webpack_require_99730__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_99730__.d(__webpack_exports__, {\n/* harmony export */   \"DefaultTemplateProcessor\": () => (/* reexport safe */ _lib_default_template_processor_js__WEBPACK_IMPORTED_MODULE_0__.DefaultTemplateProcessor),\n/* harmony export */   \"defaultTemplateProcessor\": () => (/* reexport safe */ _lib_default_template_processor_js__WEBPACK_IMPORTED_MODULE_0__.defaultTemplateProcessor),\n/* harmony export */   \"directive\": () => (/* reexport safe */ _lib_directive_js__WEBPACK_IMPORTED_MODULE_2__.directive),\n/* harmony export */   \"isDirective\": () => (/* reexport safe */ _lib_directive_js__WEBPACK_IMPORTED_MODULE_2__.isDirective),\n/* harmony export */   \"removeNodes\": () => (/* reexport safe */ _lib_dom_js__WEBPACK_IMPORTED_MODULE_3__.removeNodes),\n/* harmony export */   \"reparentNodes\": () => (/* reexport safe */ _lib_dom_js__WEBPACK_IMPORTED_MODULE_3__.reparentNodes),\n/* harmony export */   \"noChange\": () => (/* reexport safe */ _lib_part_js__WEBPACK_IMPORTED_MODULE_4__.noChange),\n/* harmony export */   \"nothing\": () => (/* reexport safe */ _lib_part_js__WEBPACK_IMPORTED_MODULE_4__.nothing),\n/* harmony export */   \"AttributeCommitter\": () => (/* reexport safe */ _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__.AttributeCommitter),\n/* harmony export */   \"AttributePart\": () => (/* reexport safe */ _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__.AttributePart),\n/* harmony export */   \"BooleanAttributePart\": () => (/* reexport safe */ _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__.BooleanAttributePart),\n/* harmony export */   \"EventPart\": () => (/* reexport safe */ _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__.EventPart),\n/* harmony export */   \"isIterable\": () => (/* reexport safe */ _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__.isIterable),\n/* harmony export */   \"isPrimitive\": () => (/* reexport safe */ _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__.isPrimitive),\n/* harmony export */   \"NodePart\": () => (/* reexport safe */ _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__.NodePart),\n/* harmony export */   \"PropertyCommitter\": () => (/* reexport safe */ _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__.PropertyCommitter),\n/* harmony export */   \"PropertyPart\": () => (/* reexport safe */ _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__.PropertyPart),\n/* harmony export */   \"parts\": () => (/* reexport safe */ _lib_render_js__WEBPACK_IMPORTED_MODULE_6__.parts),\n/* harmony export */   \"render\": () => (/* reexport safe */ _lib_render_js__WEBPACK_IMPORTED_MODULE_6__.render),\n/* harmony export */   \"templateCaches\": () => (/* reexport safe */ _lib_template_factory_js__WEBPACK_IMPORTED_MODULE_7__.templateCaches),\n/* harmony export */   \"templateFactory\": () => (/* reexport safe */ _lib_template_factory_js__WEBPACK_IMPORTED_MODULE_7__.templateFactory),\n/* harmony export */   \"TemplateInstance\": () => (/* reexport safe */ _lib_template_instance_js__WEBPACK_IMPORTED_MODULE_8__.TemplateInstance),\n/* harmony export */   \"SVGTemplateResult\": () => (/* reexport safe */ _lib_template_result_js__WEBPACK_IMPORTED_MODULE_1__.SVGTemplateResult),\n/* harmony export */   \"TemplateResult\": () => (/* reexport safe */ _lib_template_result_js__WEBPACK_IMPORTED_MODULE_1__.TemplateResult),\n/* harmony export */   \"createMarker\": () => (/* reexport safe */ _lib_template_js__WEBPACK_IMPORTED_MODULE_9__.createMarker),\n/* harmony export */   \"isTemplatePartActive\": () => (/* reexport safe */ _lib_template_js__WEBPACK_IMPORTED_MODULE_9__.isTemplatePartActive),\n/* harmony export */   \"Template\": () => (/* reexport safe */ _lib_template_js__WEBPACK_IMPORTED_MODULE_9__.Template),\n/* harmony export */   \"html\": () => (/* binding */ html),\n/* harmony export */   \"svg\": () => (/* binding */ svg)\n/* harmony export */ });\n/* harmony import */ var _lib_default_template_processor_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_99730__(15);\n/* harmony import */ var _lib_template_result_js__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_99730__(12);\n/* harmony import */ var _lib_directive_js__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_99730__(9);\n/* harmony import */ var _lib_dom_js__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_99730__(4);\n/* harmony import */ var _lib_part_js__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_99730__(10);\n/* harmony import */ var _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_99730__(8);\n/* harmony import */ var _lib_render_js__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_99730__(7);\n/* harmony import */ var _lib_template_factory_js__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_99730__(13);\n/* harmony import */ var _lib_template_instance_js__WEBPACK_IMPORTED_MODULE_8__ = __nested_webpack_require_99730__(11);\n/* harmony import */ var _lib_template_js__WEBPACK_IMPORTED_MODULE_9__ = __nested_webpack_require_99730__(6);\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\n\n\n\n\n// TODO(justinfagnani): remove line when we get NodePart moving methods\n\n\n\n\n\n\n\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.3.0');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nconst html = (strings, ...values) => new _lib_template_result_js__WEBPACK_IMPORTED_MODULE_1__.TemplateResult(strings, values, 'html', _lib_default_template_processor_js__WEBPACK_IMPORTED_MODULE_0__.defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nconst svg = (strings, ...values) => new _lib_template_result_js__WEBPACK_IMPORTED_MODULE_1__.SVGTemplateResult(strings, values, 'svg', _lib_default_template_processor_js__WEBPACK_IMPORTED_MODULE_0__.defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map\n\n/***/ }),\n/* 15 */\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nested_webpack_require_106528__) => {\n\n\"use strict\";\n__nested_webpack_require_106528__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_106528__.d(__webpack_exports__, {\n/* harmony export */   \"DefaultTemplateProcessor\": () => (/* binding */ DefaultTemplateProcessor),\n/* harmony export */   \"defaultTemplateProcessor\": () => (/* binding */ defaultTemplateProcessor)\n/* harmony export */ });\n/* harmony import */ var _parts_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_106528__(8);\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Creates Parts when a template is instantiated.\n */\nclass DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new _parts_js__WEBPACK_IMPORTED_MODULE_0__.PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new _parts_js__WEBPACK_IMPORTED_MODULE_0__.EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new _parts_js__WEBPACK_IMPORTED_MODULE_0__.BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new _parts_js__WEBPACK_IMPORTED_MODULE_0__.AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new _parts_js__WEBPACK_IMPORTED_MODULE_0__.NodePart(options);\n    }\n}\nconst defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map\n\n/***/ }),\n/* 16 */\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nested_webpack_require_109208__) => {\n\n\"use strict\";\n__nested_webpack_require_109208__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_109208__.d(__webpack_exports__, {\n/* harmony export */   \"defaultConverter\": () => (/* binding */ defaultConverter),\n/* harmony export */   \"notEqual\": () => (/* binding */ notEqual),\n/* harmony export */   \"UpdatingElement\": () => (/* binding */ UpdatingElement)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * Use this module if you want to create your own base class extending\n * [[UpdatingElement]].\n * @packageDocumentation\n */\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nconst defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nconst notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nclass UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist\n     * and stores a PropertyDeclaration for the property with the given options.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     *\n     * This method may be overridden to customize properties; however,\n     * when doing so, it's important to call `super.createProperty` to ensure\n     * the property is setup correctly. This method calls\n     * `getPropertyDescriptor` internally to get a descriptor to install.\n     * To customize what properties do when they are get or set, override\n     * `getPropertyDescriptor`. To customize the options for a property,\n     * implement `createProperty` like this:\n     *\n     * static createProperty(name, options) {\n     *   options = Object.assign(options, {myOption: true});\n     *   super.createProperty(name, options);\n     * }\n     *\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        const descriptor = this.getPropertyDescriptor(name, key, options);\n        if (descriptor !== undefined) {\n            Object.defineProperty(this.prototype, name, descriptor);\n        }\n    }\n    /**\n     * Returns a property descriptor to be defined on the given named property.\n     * If no descriptor is returned, the property will not become an accessor.\n     * For example,\n     *\n     *   class MyElement extends LitElement {\n     *     static getPropertyDescriptor(name, key, options) {\n     *       const defaultDescriptor =\n     *           super.getPropertyDescriptor(name, key, options);\n     *       const setter = defaultDescriptor.set;\n     *       return {\n     *         get: defaultDescriptor.get,\n     *         set(value) {\n     *           setter.call(this, value);\n     *           // custom action.\n     *         },\n     *         configurable: true,\n     *         enumerable: true\n     *       }\n     *     }\n     *   }\n     *\n     * @nocollapse\n     */\n    static getPropertyDescriptor(name, key, options) {\n        return {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this\n                    .requestUpdateInternal(name, oldValue, options);\n            },\n            configurable: true,\n            enumerable: true\n        };\n    }\n    /**\n     * Returns the property options associated with the given property.\n     * These options are defined with a PropertyDeclaration via the `properties`\n     * object or the `@property` decorator and are registered in\n     * `createProperty(...)`.\n     *\n     * Note, this method should be considered \"final\" and not overridden. To\n     * customize the options for a given property, override `createProperty`.\n     *\n     * @nocollapse\n     * @final\n     */\n    static getPropertyOptions(name) {\n        return this._classProperties && this._classProperties.get(name) ||\n            defaultPropertyDeclaration;\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._updateState = 0;\n        this._updatePromise =\n            new Promise((res) => this._enableUpdatingResolver = res);\n        this._changedProperties = new Map();\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this.requestUpdateInternal();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection.\n        this.enableUpdating();\n    }\n    enableUpdating() {\n        if (this._enableUpdatingResolver !== undefined) {\n            this._enableUpdatingResolver();\n            this._enableUpdatingResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        // Note, hint this as an `AttributeMap` so closure clearly understands\n        // the type; it has issues with tracking types through statics\n        // tslint:disable-next-line:no-unnecessary-type-assertion\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor.getPropertyOptions(propName);\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This protected version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    requestUpdateInternal(name, oldValue, options) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            options = options || ctor.getPropertyOptions(name);\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._updatePromise = this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this.requestUpdateInternal(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await this._updatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        const result = this.performUpdate();\n        // If `performUpdate` returns a Promise, we await it. This is done to\n        // enable coordinating updates with a scheduler. Note, the result is\n        // checked to avoid delaying an additional microtask unless we need to.\n        if (result != null) {\n            await result;\n        }\n        return !this._hasRequestedUpdate;\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Abort any update if one is not pending when this is called.\n        // This can happen if `performUpdate` is called early to \"flush\"\n        // the update.\n        if (!this._hasRequestedUpdate) {\n            return;\n        }\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n            else {\n                this._markUpdated();\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n            throw e;\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    _getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n        this._markUpdated();\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map\n\n/***/ }),\n/* 17 */\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nested_webpack_require_137128__) => {\n\n\"use strict\";\n__nested_webpack_require_137128__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_137128__.d(__webpack_exports__, {\n/* harmony export */   \"customElement\": () => (/* binding */ customElement),\n/* harmony export */   \"property\": () => (/* binding */ property),\n/* harmony export */   \"internalProperty\": () => (/* binding */ internalProperty),\n/* harmony export */   \"query\": () => (/* binding */ query),\n/* harmony export */   \"queryAsync\": () => (/* binding */ queryAsync),\n/* harmony export */   \"queryAll\": () => (/* binding */ queryAll),\n/* harmony export */   \"eventOptions\": () => (/* binding */ eventOptions),\n/* harmony export */   \"queryAssignedNodes\": () => (/* binding */ queryAssignedNodes)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst legacyCustomElement = (tagName, clazz) => {\n    window.customElements.define(tagName, clazz);\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<HTMLElement>` for some reason.\n    // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz);\n        }\n    };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```\n * @customElement('my-element')\n * class MyElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The name of the custom element to define.\n */\nconst customElement = (tagName) => (classOrDescriptor) => (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\nconst standardProperty = (options, element) => {\n    // When decorating an accessor, pass it through and add property metadata.\n    // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n    // stomp over the user's accessor.\n    if (element.kind === 'method' && element.descriptor &&\n        !('value' in element.descriptor)) {\n        return Object.assign(Object.assign({}, element), { finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            } });\n    }\n    else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n            kind: 'field',\n            key: Symbol(),\n            placement: 'own',\n            descriptor: {},\n            // When @babel/plugin-proposal-decorators implements initializers,\n            // do this instead of the initializer below. See:\n            // https://github.com/babel/babel/issues/9260 extras: [\n            //   {\n            //     kind: 'initializer',\n            //     placement: 'own',\n            //     initializer: descriptor.initializer,\n            //   }\n            // ],\n            initializer() {\n                if (typeof element.initializer === 'function') {\n                    this[element.key] = element.initializer.call(this);\n                }\n            },\n            finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            }\n        };\n    }\n};\nconst legacyProperty = (options, proto, name) => {\n    proto.constructor\n        .createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A [[`PropertyDeclaration`]] may optionally be\n * supplied to configure property features.\n *\n * This decorator should only be used for public fields. Private or protected\n * fields should use the [[`internalProperty`]] decorator.\n *\n * @example\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nfunction property(options) {\n    // tslint:disable-next-line:no-any decorator\n    return (protoOrDescriptor, name) => (name !== undefined) ?\n        legacyProperty(options, protoOrDescriptor, name) :\n        standardProperty(options, protoOrDescriptor);\n}\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n */\nfunction internalProperty(options) {\n    return property({ attribute: false, hasChanged: options === null || options === void 0 ? void 0 : options.hasChanged });\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n * once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nfunction query(selector, cache) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        if (cache) {\n            const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n            descriptor.get = function () {\n                if (this[key] === undefined) {\n                    (this[key] =\n                        this.renderRoot.querySelector(selector));\n                }\n                return this[key];\n            };\n        }\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAsync('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n *\n * // external usage\n * async doSomethingWithFirst() {\n *  (await aMyElement.first).doSomething();\n * }\n * ```\n * @category Decorator\n */\nfunction queryAsync(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            async get() {\n                await this.updateComplete;\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAll('div')\n *   divs;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nfunction queryAll(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelectorAll(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\nconst legacyQuery = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardQuery = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\nconst standardEventOptions = (options, element) => {\n    return Object.assign(Object.assign({}, element), { finisher(clazz) {\n            Object.assign(clazz.prototype[element.key], options);\n        } });\n};\nconst legacyEventOptions = \n// tslint:disable-next-line:no-any legacy decorator\n(options, proto, name) => {\n    Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n * ```ts\n * class MyElement {\n *   clicked = false;\n *\n *   render() {\n *     return html`\n *       <div @click=${this._onClick}`>\n *         <button></button>\n *       </div>\n *     `;\n *   }\n *\n *   @eventOptions({capture: true})\n *   _onClick(e) {\n *     this.clicked = true;\n *   }\n * }\n * ```\n * @category Decorator\n */\nfunction eventOptions(options) {\n    // Return value typed as any to prevent TypeScript from complaining that\n    // standard decorator function signature does not match TypeScript decorator\n    // signature\n    // TODO(kschaaf): unclear why it was only failing on this decorator and not\n    // the others\n    return ((protoOrDescriptor, name) => (name !== undefined) ?\n        legacyEventOptions(options, protoOrDescriptor, name) :\n        standardEventOptions(options, protoOrDescriptor));\n}\n// x-browser support for matches\n// tslint:disable-next-line:no-any\nconst ElementProto = Element.prototype;\nconst legacyMatches = ElementProto.msMatchesSelector || ElementProto.webkitMatchesSelector;\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given named `slot`. Note, the type of\n * this property should be annotated as `NodeListOf<HTMLElement>`.\n *\n * @param slotName A string name of the slot.\n * @param flatten A boolean which when true flattens the assigned nodes,\n * meaning any assigned nodes that are slot elements are replaced with their\n * assigned nodes.\n * @param selector A string which filters the results to elements that match\n * the given css selector.\n *\n * * @example\n * ```ts\n * class MyElement {\n *   @queryAssignedNodes('list', true, '.item')\n *   listItems;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nfunction queryAssignedNodes(slotName = '', flatten = false, selector = '') {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                const slotSelector = `slot${slotName ? `[name=${slotName}]` : ':not([name])'}`;\n                const slot = this.renderRoot.querySelector(slotSelector);\n                let nodes = slot && slot.assignedNodes({ flatten });\n                if (nodes && selector) {\n                    nodes = nodes.filter((node) => node.nodeType === Node.ELEMENT_NODE &&\n                        node.matches ?\n                        node.matches(selector) :\n                        legacyMatches.call(node, selector));\n                }\n                return nodes;\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n//# sourceMappingURL=decorators.js.map\n\n/***/ }),\n/* 18 */\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nested_webpack_require_151120__) => {\n\n\"use strict\";\n__nested_webpack_require_151120__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_151120__.d(__webpack_exports__, {\n/* harmony export */   \"supportsAdoptingStyleSheets\": () => (/* binding */ supportsAdoptingStyleSheets),\n/* harmony export */   \"CSSResult\": () => (/* binding */ CSSResult),\n/* harmony export */   \"unsafeCSS\": () => (/* binding */ unsafeCSS),\n/* harmony export */   \"css\": () => (/* binding */ css)\n/* harmony export */ });\n/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nconst supportsAdoptingStyleSheets = (window.ShadowRoot) &&\n    (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) &&\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nclass CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `supportsAdoptingStyleSheets` is true then we assume\n            // CSSStyleSheet is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a [[`css`]] tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nconst unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's [[LitElement.styles |\n * `styles`]] property to set element styles. For security reasons, only literal\n * string values may be used. To incorporate non-literal values [[`unsafeCSS`]]\n * may be used inside a template string part.\n */\nconst css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map\n\n/***/ }),\n/* 19 */\n/***/ ((module) => {\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse {}\n})(self, function() {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ([\n/* 0 */,\n/* 1 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_519__) => {\n\n\"use strict\";\n__nested_webpack_require_519__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_519__.d(__webpack_exports__, {\n/* harmony export */   \"GridImageGenerator\": () => (/* binding */ GridImageGenerator)\n/* harmony export */ });\nclass GridImageGenerator {\n    constructor() {\n        this.width = 0;\n        this.height = 0;\n        this._changed = false;\n    }\n    get changed() {\n        return this._changed;\n    }\n    setGridSize(width, height) {\n        this._changed = (this.width !== width) || (this.height !== height);\n        this.width = width;\n        this.height = height;\n    }\n    generateDottedPart() {\n        const { canvas, context } = this.createCanvas();\n        context.fillRect(this.width - 1, this.height - 1, 1, 1);\n        return canvas;\n    }\n    generateLinePart() {\n        const { canvas, context } = this.createCanvas();\n        context.fillRect(0, this.height - 1, this.width, 1);\n        context.fillRect(this.width - 1, 0, 1, this.height);\n        return canvas;\n    }\n    createCanvas() {\n        const canvas = document.createElement('canvas');\n        const context = canvas.getContext('2d');\n        if (!context) {\n            throw new Error();\n        }\n        canvas.width = this.width;\n        canvas.height = this.height;\n        return {\n            canvas,\n            context\n        };\n    }\n}\n\n\n/***/ }),\n/* 2 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_1968__) => {\n\n\"use strict\";\n__nested_webpack_require_1968__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_1968__.d(__webpack_exports__, {\n/* harmony export */   \"MapCanvas\": () => (/* binding */ MapCanvas)\n/* harmony export */ });\n/* harmony import */ var _piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1968__(3);\n/* harmony import */ var _piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_1968__.n(_piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Brushes_Pen__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1968__(4);\n/* harmony import */ var _Brushes_Brushes__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_1968__(5);\n/* harmony import */ var _Brushes_Arrangements_Arrangements__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_1968__(7);\n/* harmony import */ var _Brushes_Arrangements_Arrangement__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_1968__(13);\n/* harmony import */ var _Brushes_Arrangements_DefaultArrangement__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_1968__(8);\n\n\n\n\n\n\nclass MapCanvas {\n    constructor() {\n        this._secondaryCanvasCtx = null;\n        this._isMouseDown = false;\n        this._brush = new _Brushes_Pen__WEBPACK_IMPORTED_MODULE_1__.Pen();\n        this._arrangement = new _Brushes_Arrangements_DefaultArrangement__WEBPACK_IMPORTED_MODULE_5__.DefaultArrangement();\n        this._lastMapChipPosition = { x: -1, y: -1 };\n        this._renderer = null;\n        this._canvases = [];\n        this._canvasContexts = [];\n        this.secondaryCanvas = null;\n        this._project = null;\n        this._selectedAutoTile = null;\n        this._selectedMapChipFragment = null;\n        this._activeLayerIndex = 0;\n    }\n    get selectedAutoTile() {\n        return this._selectedAutoTile;\n    }\n    get selectedMapChipFragment() {\n        return this._selectedMapChipFragment;\n    }\n    get project() {\n        if (!this._project)\n            throw new Error('Project is not set');\n        return this._project;\n    }\n    get renderer() {\n        if (!this._renderer)\n            throw new Error('Project is not set');\n        return this._renderer;\n    }\n    get activeLayer() {\n        return this._activeLayerIndex;\n    }\n    hasActiveAutoTile() {\n        return !!this._selectedAutoTile;\n    }\n    setProject(project) {\n        this._project = project;\n        this._renderer = new _piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_0__.MapRenderer(this._project.tiledMap);\n        this._project.registerRenderAllCallback(() => {\n            if (!this._renderer)\n                return;\n            const renderer = this.renderer;\n            this._canvasContexts.forEach((ctx, index) => renderer.renderLayer(index, ctx));\n        });\n    }\n    setCanvases(canvases, secondaryCanvas) {\n        this._canvases = canvases;\n        this._canvasContexts = this._canvases.map(canvas => canvas.getContext('2d'));\n        this.secondaryCanvas = secondaryCanvas;\n        this._secondaryCanvasCtx = this.secondaryCanvas.getContext('2d');\n    }\n    addCanvas(canvas) {\n        this._canvases.push(canvas);\n        this._canvasContexts.push(canvas.getContext('2d'));\n    }\n    setAutoTile(value) {\n        this._selectedAutoTile = value;\n    }\n    setMapChipFragment(value) {\n        this._selectedMapChipFragment = value;\n    }\n    setBrushFromName(brushName) {\n        const registeredBrush = _Brushes_Brushes__WEBPACK_IMPORTED_MODULE_2__.Brushes.find(registeredBrush => registeredBrush.name === brushName);\n        if (!registeredBrush) {\n            this.setBrush(new _Brushes_Pen__WEBPACK_IMPORTED_MODULE_1__.Pen());\n        }\n        else {\n            this.setBrush(registeredBrush.create());\n        }\n    }\n    setArrangementFromName(arrangementName) {\n        const registeredArrangement = _Brushes_Arrangements_Arrangements__WEBPACK_IMPORTED_MODULE_3__.Arrangements.find(registered => registered.name === arrangementName);\n        if (!registeredArrangement) {\n            this.setArrangement(new _Brushes_Arrangements_DefaultArrangement__WEBPACK_IMPORTED_MODULE_5__.DefaultArrangement());\n        }\n        else {\n            this.setArrangement(registeredArrangement.create());\n        }\n    }\n    setActiveLayer(index) {\n        if (!this._project)\n            return;\n        if (index < 0 || index >= this._project.tiledMap.datas.length) {\n            throw new Error('The layer index is out of range.');\n        }\n        this._activeLayerIndex = index;\n    }\n    _setupBrush() {\n        if (!this._project || !this._arrangement)\n            return;\n        this._brush.setArrangement(this._arrangement);\n        if ((0,_Brushes_Arrangements_Arrangement__WEBPACK_IMPORTED_MODULE_4__.isTiledMapDataRequired)(this._arrangement)) {\n            this._arrangement.setTiledMapData(this._project.tiledMap.datas[this._activeLayerIndex]);\n        }\n    }\n    setArrangement(arrangement) {\n        this._arrangement = arrangement;\n        this._setupBrush();\n    }\n    setBrush(brush) {\n        this._brush = brush;\n        this._setupBrush();\n    }\n    mouseDown(x, y) {\n        this._isMouseDown = true;\n        if ((0,_Brushes_Arrangements_Arrangement__WEBPACK_IMPORTED_MODULE_4__.isMapChipFragmentRequired)(this._arrangement) && this._selectedMapChipFragment) {\n            this._arrangement.setMapChips([this._selectedMapChipFragment]);\n        }\n        if ((0,_Brushes_Arrangements_Arrangement__WEBPACK_IMPORTED_MODULE_4__.isAutoTileRequired)(this._arrangement) && this._selectedAutoTile) {\n            this._arrangement.setAutoTile(this._selectedAutoTile);\n        }\n        if ((0,_Brushes_Arrangements_Arrangement__WEBPACK_IMPORTED_MODULE_4__.isAutoTilesRequired)(this._arrangement)) {\n            this._arrangement.setAutoTiles(this.project.tiledMap.autoTiles);\n        }\n        const chipPosition = this.convertFromCursorPositionToChipPosition(x, y);\n        this._brush.mouseDown(chipPosition.x, chipPosition.y);\n        this._lastMapChipPosition = chipPosition;\n        this._paint(chipPosition);\n    }\n    mouseMove(x, y) {\n        const chipPosition = this.convertFromCursorPositionToChipPosition(x, y);\n        if (!this._isMouseDown)\n            return chipPosition;\n        if (chipPosition.x === this._lastMapChipPosition.x && chipPosition.y === this._lastMapChipPosition.y)\n            return chipPosition;\n        this._paint(chipPosition);\n        this._lastMapChipPosition = chipPosition;\n        return chipPosition;\n    }\n    mouseUp(x, y) {\n        this._isMouseDown = false;\n        const chipPosition = this.convertFromCursorPositionToChipPosition(x, y);\n        this._brush.mouseUp(chipPosition.x, chipPosition.y).forEach(paint => {\n            const chip = paint.item;\n            this.putChip(chip, paint.x, paint.y);\n        });\n        this.clearSecondaryCanvas();\n        this._brush.cleanUp();\n        this._lastMapChipPosition = { x: -1, y: -1 };\n    }\n    putChip(mapChip, chipX, chipY) {\n        this.project.tiledMap.put(mapChip, chipX, chipY, this._activeLayerIndex);\n        this.renderer.putOrClearChipToCanvas(this._canvasContexts[this._activeLayerIndex], mapChip, chipX, chipY);\n    }\n    _paint(chipPosition) {\n        this.clearSecondaryCanvas();\n        this._brush.mouseMove(chipPosition.x, chipPosition.y).forEach(paint => {\n            if (!this._secondaryCanvasCtx)\n                return;\n            const chip = paint.item;\n            this.renderer.putOrClearChipToCanvas(this._secondaryCanvasCtx, chip, paint.x, paint.y, true);\n        });\n    }\n    clearSecondaryCanvas() {\n        if (!this.secondaryCanvas || !this._secondaryCanvasCtx)\n            return;\n        this._secondaryCanvasCtx.clearRect(0, 0, this.secondaryCanvas.width, this.secondaryCanvas.height);\n    }\n    convertFromCursorPositionToChipPosition(x, y) {\n        return {\n            x: Math.max(0, Math.min(Math.floor(x / this.project.tiledMap.chipWidth), this.project.tiledMap.chipCountX - 1)),\n            y: Math.max(0, Math.min(Math.floor(y / this.project.tiledMap.chipHeight), this.project.tiledMap.chipCountY - 1))\n        };\n    }\n}\n\n\n/***/ }),\n/* 3 */\n/***/ ((module) => {\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse {}\n})(self, function() {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ([\n/* 0 */,\n/* 1 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_541__) => {\n\n__nested_webpack_require_541__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_541__.d(__webpack_exports__, {\n/* harmony export */   \"TiledMap\": () => (/* binding */ TiledMap)\n/* harmony export */ });\n/* harmony import */ var _MapChips__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_541__(2);\n/* harmony import */ var _AutoTile_AutoTiles__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_541__(3);\n/* harmony import */ var _MapData_TiledMapData__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_541__(5);\n/* harmony import */ var _MapData_ColiderMap__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_541__(7);\n\n\n\n\nclass TiledMap {\n    constructor(_chipCountX, _chipCountY, _chipWidth, _chipHeight) {\n        this._chipCountX = _chipCountX;\n        this._chipCountY = _chipCountY;\n        this._chipWidth = _chipWidth;\n        this._chipHeight = _chipHeight;\n        this._mapChipImages = new _MapChips__WEBPACK_IMPORTED_MODULE_0__.MapChipsCollection();\n        this._autoTiles = new _AutoTile_AutoTiles__WEBPACK_IMPORTED_MODULE_1__.AutoTiles();\n        this._datas = [];\n        this._coliders = new _MapData_ColiderMap__WEBPACK_IMPORTED_MODULE_3__.ColiderMap(this._chipCountX, this._chipCountY);\n        this.addLayer();\n    }\n    get chipWidth() {\n        return this._chipWidth;\n    }\n    get chipHeight() {\n        return this._chipHeight;\n    }\n    get chipCountX() {\n        return this._chipCountX;\n    }\n    get chipCountY() {\n        return this._chipCountY;\n    }\n    get mapChipsCollection() {\n        return this._mapChipImages;\n    }\n    get autoTiles() {\n        return this._autoTiles;\n    }\n    get datas() {\n        return this._datas;\n    }\n    get coliders() {\n        return this._coliders;\n    }\n    convertChipPositionToPixel(chipX, chipY) {\n        return {\n            x: chipX * this.chipWidth,\n            y: chipY * this.chipHeight\n        };\n    }\n    put(mapChip, chipX, chipY, index) {\n        this._datas[index].put(mapChip, chipX, chipY);\n    }\n    toObject() {\n        return {\n            chipCountX: this._chipCountX,\n            chipCountY: this._chipCountY,\n            chipWidth: this._chipWidth,\n            chipHeight: this._chipHeight,\n            mapChipImages: this._mapChipImages.toObject(),\n            autoTiles: this._autoTiles.toObject(),\n            tiledMapDatas: this._datas.map(data => data.toObject()),\n            coliders: this._coliders.toObject()\n        };\n    }\n    addLayer() {\n        this._datas.push(new _MapData_TiledMapData__WEBPACK_IMPORTED_MODULE_2__.TiledMapData(this._chipCountX, this._chipCountY));\n    }\n    convertMapNumberToPosition(num) {\n        return {\n            x: num % this._chipCountX,\n            y: Math.floor(num / this._chipCountX)\n        };\n    }\n    setSerializedProperties(val) {\n        this._mapChipImages.fromObject(val.mapChipImages);\n        this._autoTiles.fromObject(val.autoTiles);\n        this._datas = val.tiledMapDatas.map(tiledMapData => _MapData_TiledMapData__WEBPACK_IMPORTED_MODULE_2__.TiledMapData.fromObject(tiledMapData));\n        this._coliders = _MapData_ColiderMap__WEBPACK_IMPORTED_MODULE_3__.ColiderMap.fromObject(val.coliders);\n    }\n    static fromObject(val) {\n        const tiledMap = new TiledMap(val.chipCountX, val.chipCountY, val.chipWidth, val.chipHeight);\n        tiledMap.setSerializedProperties({ mapChipImages: val.mapChipImages, autoTiles: val.autoTiles, tiledMapDatas: val.tiledMapDatas, coliders: val.coliders });\n        return tiledMap;\n    }\n}\n\n\n/***/ }),\n/* 2 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_4102__) => {\n\n__nested_webpack_require_4102__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_4102__.d(__webpack_exports__, {\n/* harmony export */   \"MapChipImage\": () => (/* binding */ MapChipImage),\n/* harmony export */   \"MapChipsCollection\": () => (/* binding */ MapChipsCollection)\n/* harmony export */ });\nclass MapChipImage {\n    constructor(_src, _id) {\n        this._src = _src;\n        this._id = _id;\n        this._image = new Image();\n        this._hasImage = false;\n        this.loadImage();\n    }\n    get id() {\n        return this._id;\n    }\n    get src() {\n        return this._src;\n    }\n    get hasImage() {\n        return this._hasImage;\n    }\n    get image() {\n        return this._image;\n    }\n    getChipCount(chipWidth, chipHeight) {\n        if (!this._image)\n            throw new Error('Image loading is not complete.');\n        return {\n            width: Math.floor(this._image.width / chipWidth),\n            height: Math.floor(this._image.height / chipHeight)\n        };\n    }\n    _loadImageHandler() {\n        this._hasImage = true;\n    }\n    loadImage() {\n        this._image.onload = () => this._loadImageHandler();\n        this._image.src = this._src;\n    }\n    waitWhileLoading() {\n        const loadingPromise = new Promise(resolve => {\n            this._image.onload = () => {\n                this._loadImageHandler();\n                resolve();\n            };\n        });\n        if (this._hasImage)\n            return Promise.resolve();\n        return loadingPromise;\n    }\n    toObject() {\n        return {\n            id: this._id,\n            src: this._src\n        };\n    }\n    static fromObject(val) {\n        return new MapChipImage(val.src, val.id);\n    }\n}\nclass MapChipsCollection {\n    constructor() {\n        this._items = new Map();\n    }\n    push(item) {\n        this._items.set(item.id, item);\n    }\n    findById(chipId) {\n        return this._items.get(chipId) || null;\n    }\n    async waitWhileLoading() {\n        await Promise.all(Array.from(this._items.values()).map(item => item.waitWhileLoading()));\n    }\n    toObject() {\n        const objectedMapChipImage = [];\n        const valuesItr = this._items.values();\n        for (const val of valuesItr) {\n            objectedMapChipImage.push(val.toObject());\n        }\n        return {\n            items: objectedMapChipImage\n        };\n    }\n    fromObject(val) {\n        this._items.clear();\n        val.items.forEach(objectedVal => {\n            this.push(MapChipImage.fromObject(objectedVal));\n        });\n    }\n}\n\n\n/***/ }),\n/* 3 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_6710__) => {\n\n__nested_webpack_require_6710__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_6710__.d(__webpack_exports__, {\n/* harmony export */   \"AutoTile\": () => (/* binding */ AutoTile),\n/* harmony export */   \"AutoTiles\": () => (/* binding */ AutoTiles)\n/* harmony export */ });\n/* harmony import */ var _MapChip__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_6710__(4);\n\nclass AutoTile {\n    constructor(_mapChipFragments, _id) {\n        this._mapChipFragments = _mapChipFragments;\n        this._id = _id;\n    }\n    get id() {\n        return this._id;\n    }\n    get mapChipFragments() {\n        return this._mapChipFragments;\n    }\n    toObject() {\n        return {\n            id: this._id,\n            mapChipFragments: this._mapChipFragments.map(fragment => fragment.toObject())\n        };\n    }\n    static fromObject(val) {\n        return new AutoTile(val.mapChipFragments.map(fragment => _MapChip__WEBPACK_IMPORTED_MODULE_0__.MapChipFragment.fromObject(fragment)), val.id);\n    }\n}\nclass AutoTiles {\n    constructor() {\n        this._autoTiles = new Map();\n        this._maxId = 0;\n    }\n    get length() {\n        return this._autoTiles.size;\n    }\n    push(item) {\n        this._autoTiles.set(item.id, item);\n    }\n    fromId(id) {\n        return this._autoTiles.get(id) || null;\n    }\n    values() {\n        return this._autoTiles.values();\n    }\n    import(strategy) {\n        const mapChipFragmentGroups = strategy.getMapChipFragments();\n        mapChipFragmentGroups.forEach(group => {\n            const autoTile = new AutoTile(group, ++this._maxId);\n            this.push(autoTile);\n        });\n    }\n    toObject() {\n        const objectedAutoTiles = [];\n        const valuesItr = this._autoTiles.values();\n        for (const val of valuesItr) {\n            objectedAutoTiles.push(val.toObject());\n        }\n        return {\n            autoTiles: objectedAutoTiles\n        };\n    }\n    fromObject(val) {\n        this._autoTiles.clear();\n        val.autoTiles.forEach(objectedAutoTile => {\n            this.push(AutoTile.fromObject(objectedAutoTile));\n        });\n    }\n}\n\n\n/***/ }),\n/* 4 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_8885__) => {\n\n__nested_webpack_require_8885__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_8885__.d(__webpack_exports__, {\n/* harmony export */   \"MapChipFragment\": () => (/* binding */ MapChipFragment),\n/* harmony export */   \"MapChip\": () => (/* binding */ MapChip),\n/* harmony export */   \"isAutoTileMapChipProperties\": () => (/* binding */ isAutoTileMapChipProperties),\n/* harmony export */   \"AutoTileMapChip\": () => (/* binding */ AutoTileMapChip),\n/* harmony export */   \"isAutoTileMapChip\": () => (/* binding */ isAutoTileMapChip)\n/* harmony export */ });\nclass MapChipFragment {\n    constructor(_x, _y, _chipId, \n    /**\n     *  _renderingArea indicates the area where this map-chip is to be drawn.\n     *  It is represented by a OR of the following area-numbers.\n     *\n     * |<- 1chip ->|\n     * *-----*-----* ---\n     * |  1  |  2  |  ↑\n     * *-----*-----* 1chip\n     * |  4  |  8  |  ↓\n     * *-----*-----* ---\n     */\n    _renderingArea = 15) {\n        this._x = _x;\n        this._y = _y;\n        this._chipId = _chipId;\n        this._renderingArea = _renderingArea;\n        this._identifyKey = '';\n        this._identifyKey = `${_x},${_y},${_chipId}`;\n    }\n    get x() {\n        return this._x;\n    }\n    get y() {\n        return this._y;\n    }\n    get chipId() {\n        return this._chipId;\n    }\n    get identifyKey() {\n        return this._identifyKey;\n    }\n    get renderingArea() {\n        return this._renderingArea;\n    }\n    withParameter(parameters) {\n        if (parameters.x)\n            this._x = parameters.x;\n        if (parameters.y)\n            this._y = parameters.y;\n        if (parameters.renderingArea)\n            this._renderingArea = parameters.renderingArea;\n        return this;\n    }\n    clone() {\n        return new MapChipFragment(this._x, this._y, this._chipId);\n    }\n    compare(others) {\n        return this.identifyKey === others.identifyKey;\n    }\n    toObject() {\n        return {\n            x: this._x,\n            y: this._y,\n            chipId: this._chipId,\n            renderingArea: this._renderingArea\n        };\n    }\n    static fromObject(val) {\n        return new MapChipFragment(val.x, val.y, val.chipId, val.renderingArea);\n    }\n}\nclass MapChip {\n    constructor(_items = [], _arrangementName = '') {\n        this._items = _items;\n        this._arrangementName = _arrangementName;\n        this._identifyKey = '';\n        this._buildIdentifyKey();\n    }\n    get items() {\n        return this._items;\n    }\n    get identifyKey() {\n        return this._identifyKey;\n    }\n    get length() {\n        return this._items.length;\n    }\n    get arrangementName() {\n        return this._arrangementName;\n    }\n    _buildIdentifyKey() {\n        this._identifyKey = this._items.map(item => item.identifyKey).join('|');\n    }\n    setArrangementName(name) {\n        this._arrangementName = name;\n    }\n    push(mapChip) {\n        this._items.push(mapChip);\n        this._buildIdentifyKey();\n    }\n    clear() {\n        this._items.length = 0;\n        this._buildIdentifyKey();\n    }\n    clone() {\n        const cloned = new MapChip();\n        cloned._items = this._items.map(mapChip => mapChip.clone());\n        return cloned;\n    }\n    compare(others) {\n        return this.identifyKey === others.identifyKey;\n    }\n    toObject() {\n        return {\n            items: this._items.map(item => item.toObject()),\n            arrangementName: this._arrangementName\n        };\n    }\n    static fromObject(val) {\n        return new MapChip(val.items.map(item => MapChipFragment.fromObject(item)), val.arrangementName);\n    }\n}\nfunction isAutoTileMapChipProperties(obj) {\n    return obj &&\n        typeof obj.autoTileId === 'number' &&\n        obj.boundary !== undefined &&\n        obj.cross !== undefined;\n}\nclass AutoTileMapChip extends MapChip {\n    constructor(_autoTileId, items = [], _arrangementName = '', _boundary = {\n        top: false,\n        bottom: false,\n        left: false,\n        right: false\n    }, _cross = {\n        topLeft: false,\n        topRight: false,\n        bottomLeft: false,\n        bottomRight: false\n    }) {\n        super(items, _arrangementName);\n        this._autoTileId = _autoTileId;\n        this._boundary = _boundary;\n        this._cross = _cross;\n    }\n    get boundary() {\n        return this._boundary;\n    }\n    get cross() {\n        return this._cross;\n    }\n    get autoTileId() {\n        return this._autoTileId;\n    }\n    setBoundary(boundary) {\n        this._boundary = boundary;\n    }\n    setCross(cross) {\n        this._cross = cross;\n    }\n    toObject() {\n        return {\n            ...super.toObject(),\n            boundary: this._boundary,\n            cross: this._cross,\n            autoTileId: this._autoTileId\n        };\n    }\n    static fromObject(val) {\n        return new AutoTileMapChip(val.autoTileId, val.items.map(item => MapChipFragment.fromObject(item)), val.arrangementName, val.boundary, val.cross);\n    }\n}\nfunction isAutoTileMapChip(obj) {\n    return obj &&\n        typeof obj.boundary === 'object' &&\n        typeof obj.cross === 'object';\n}\n\n\n/***/ }),\n/* 5 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_14040__) => {\n\n__nested_webpack_require_14040__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_14040__.d(__webpack_exports__, {\n/* harmony export */   \"TiledMapData\": () => (/* binding */ TiledMapData)\n/* harmony export */ });\n/* harmony import */ var _MapChip__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_14040__(4);\n/* harmony import */ var _MapMatrix__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_14040__(6);\n\n\nclass TiledMapData extends _MapMatrix__WEBPACK_IMPORTED_MODULE_1__.MapMatrix {\n    filter(needles) {\n        const filtered = this._items.map(chip => needles.some(needle => !!chip && needle.compare(chip)) ? chip : null);\n        return new TiledMapData(this.width, this.height, filtered);\n    }\n    toObject() {\n        return {\n            chipCountX: this._chipCountX,\n            chipCountY: this._chipCountY,\n            mapData: this._items.map(data => (data === null || data === void 0 ? void 0 : data.toObject()) || null)\n        };\n    }\n    static fromObject(val) {\n        const mapData = val.mapData.map(data => {\n            if (!data)\n                return null;\n            if ((0,_MapChip__WEBPACK_IMPORTED_MODULE_0__.isAutoTileMapChipProperties)(data)) {\n                return _MapChip__WEBPACK_IMPORTED_MODULE_0__.AutoTileMapChip.fromObject(data);\n            }\n            return _MapChip__WEBPACK_IMPORTED_MODULE_0__.MapChip.fromObject(data);\n        });\n        return new TiledMapData(val.chipCountX, val.chipCountY, mapData);\n    }\n}\n\n\n/***/ }),\n/* 6 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_15590__) => {\n\n__nested_webpack_require_15590__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_15590__.d(__webpack_exports__, {\n/* harmony export */   \"MapMatrix\": () => (/* binding */ MapMatrix)\n/* harmony export */ });\nclass MapMatrix {\n    constructor(_chipCountX, _chipCountY, _items = []) {\n        this._chipCountX = _chipCountX;\n        this._chipCountY = _chipCountY;\n        this._items = _items;\n        if (this._items.length > 0 && this.size !== this._items.length) {\n            throw new Error();\n        }\n        if (this._items.length === 0)\n            this.allocate();\n    }\n    get size() {\n        return this._chipCountX * this._chipCountY;\n    }\n    get width() {\n        return this._chipCountX;\n    }\n    get height() {\n        return this._chipCountY;\n    }\n    get items() {\n        return this._items;\n    }\n    set(items) {\n        if (items.length !== this._items.length)\n            throw new Error();\n        this._items = items;\n    }\n    transferFromTiledMapData(src, srcX, srcY, width, height, destX, destY) {\n        for (let x = 0; x < width; x++) {\n            const putX = destX + x;\n            const pickupX = srcX + x;\n            if (putX < 0 || putX >= this.width)\n                continue;\n            if (pickupX < 0 || pickupX >= src.width)\n                continue;\n            for (let y = 0; y < height; y++) {\n                const putY = destY + y;\n                const pickupY = srcY + y;\n                if (putY < 0 || putY >= this.height)\n                    continue;\n                if (pickupY < 0 || pickupY >= src.height)\n                    continue;\n                const item = src.getFromChipPosition(pickupX, pickupY);\n                this.put(item, putX, putY);\n            }\n        }\n    }\n    getFromChipPosition(x, y) {\n        if ((x < 0) || (y < 0) || (x >= this._chipCountX) || (y >= this._chipCountY))\n            throw new Error('The position is out of range.');\n        const mapNumber = this.convertPositionToMapNumber(x, y);\n        return this._items[mapNumber];\n    }\n    put(item, x, y) {\n        const mapNumber = this.convertPositionToMapNumber(x, y);\n        this._items[mapNumber] = item;\n    }\n    convertPositionToMapNumber(x, y) {\n        return y * this._chipCountX + x;\n    }\n    allocate(defaultValue = null) {\n        this._items = new Array(this._chipCountY * this._chipCountX).fill(null);\n    }\n}\n\n\n/***/ }),\n/* 7 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_18066__) => {\n\n__nested_webpack_require_18066__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_18066__.d(__webpack_exports__, {\n/* harmony export */   \"ColiderMap\": () => (/* binding */ ColiderMap)\n/* harmony export */ });\n/* harmony import */ var _MapMatrix__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_18066__(6);\n\nclass ColiderMap extends _MapMatrix__WEBPACK_IMPORTED_MODULE_0__.MapMatrix {\n    toObject() {\n        return {\n            chipCountX: this._chipCountX,\n            chipCountY: this._chipCountY,\n            coliders: this._items\n        };\n    }\n    static fromObject(val) {\n        return new ColiderMap(val.chipCountX, val.chipCountY, val.coliders);\n    }\n    allocate() {\n        super.allocate('none');\n    }\n}\n\n\n/***/ }),\n/* 8 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_18879__) => {\n\n__nested_webpack_require_18879__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_18879__.d(__webpack_exports__, {\n/* harmony export */   \"DefaultAutoTileImportStrategy\": () => (/* binding */ DefaultAutoTileImportStrategy)\n/* harmony export */ });\n/* harmony import */ var _MapChip__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_18879__(4);\n\nclass DefaultAutoTileImportStrategy {\n    constructor(_mapChipImage, _chipWidth, _chipHeight) {\n        this._mapChipImage = _mapChipImage;\n        this._chipWidth = _chipWidth;\n        this._chipHeight = _chipHeight;\n    }\n    getMapChipFragments() {\n        const countX = Math.floor(this._mapChipImage.image.width / this._chipWidth);\n        const countY = Math.floor(this._mapChipImage.image.height / this._chipHeight);\n        const mapChipFragmentGroups = [];\n        for (let y = 0; y < countY; y += 5) {\n            for (let x = 0; x < countX; x++) {\n                const mapChipFragments = [];\n                mapChipFragments.push(new _MapChip__WEBPACK_IMPORTED_MODULE_0__.MapChipFragment(x, y, this._mapChipImage.id));\n                mapChipFragments.push(new _MapChip__WEBPACK_IMPORTED_MODULE_0__.MapChipFragment(x, y + 1, this._mapChipImage.id));\n                mapChipFragments.push(new _MapChip__WEBPACK_IMPORTED_MODULE_0__.MapChipFragment(x, y + 2, this._mapChipImage.id));\n                mapChipFragments.push(new _MapChip__WEBPACK_IMPORTED_MODULE_0__.MapChipFragment(x, y + 3, this._mapChipImage.id));\n                mapChipFragments.push(new _MapChip__WEBPACK_IMPORTED_MODULE_0__.MapChipFragment(x, y + 4, this._mapChipImage.id));\n                mapChipFragmentGroups.push(mapChipFragments);\n            }\n        }\n        return mapChipFragmentGroups;\n    }\n}\n\n\n/***/ }),\n/* 9 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_20700__) => {\n\n__nested_webpack_require_20700__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_20700__.d(__webpack_exports__, {\n/* harmony export */   \"MapRenderer\": () => (/* binding */ MapRenderer)\n/* harmony export */ });\nclass MapRenderer {\n    constructor(_tiledMap) {\n        this._tiledMap = _tiledMap;\n        this._backgroundRgba = { r: 255, g: 255, b: 255, a: 1.0 };\n    }\n    setTiledMap(tiledMap) {\n        this._tiledMap = tiledMap;\n    }\n    renderAll(ctx) {\n        this._tiledMap.datas.forEach(data => this.render(data, ctx));\n    }\n    renderLayer(index, ctx) {\n        this.render(this._tiledMap.datas[index], ctx);\n    }\n    render(data, ctx) {\n        data.items.forEach((value, index) => {\n            const position = this._tiledMap.convertMapNumberToPosition(index);\n            this.putOrClearChipToCanvas(ctx, value, position.x, position.y);\n        });\n    }\n    putOrClearChipToCanvas(ctx, mapChip, chipX, chipY, isTemporaryRendering = false) {\n        if (!mapChip) {\n            this._clearChipToCanvas(ctx, chipX, chipY, isTemporaryRendering);\n        }\n        else {\n            mapChip.items.forEach(item => {\n                this._putChipToCanvas(ctx, item, chipX, chipY);\n            });\n        }\n    }\n    _clearChipToCanvas(ctx, chipX, chipY, isTemporaryRendering) {\n        const position = this._tiledMap.convertChipPositionToPixel(chipX, chipY);\n        ctx.clearRect(position.x, position.y, this._tiledMap.chipWidth, this._tiledMap.chipHeight);\n        if (isTemporaryRendering) {\n            ctx.fillStyle = `rgba(${this._backgroundRgba.r},${this._backgroundRgba.g},${this._backgroundRgba.b},${this._backgroundRgba.a})`;\n            ctx.fillRect(position.x, position.y, this._tiledMap.chipWidth, this._tiledMap.chipHeight);\n        }\n    }\n    _putChipToCanvas(ctx, mapChip, chipX, chipY) {\n        const mapChips = this._tiledMap.mapChipsCollection.findById(mapChip.chipId);\n        const image = mapChips === null || mapChips === void 0 ? void 0 : mapChips.image;\n        if (!image)\n            return;\n        const renderingArea = this._getRenderingArea(mapChip);\n        const position = this._tiledMap.convertChipPositionToPixel(chipX, chipY);\n        position.x += renderingArea.destOffsetX;\n        position.y += renderingArea.destOffsetY;\n        ctx.clearRect(position.x, position.y, renderingArea.width, renderingArea.height);\n        ctx.drawImage(image, renderingArea.x, renderingArea.y, renderingArea.width, renderingArea.height, position.x, position.y, renderingArea.width, renderingArea.height);\n    }\n    _getRenderingArea(mapChip) {\n        const width = this._tiledMap.chipWidth;\n        const height = this._tiledMap.chipHeight;\n        const x = mapChip.x * width;\n        const y = mapChip.y * height;\n        if (mapChip.renderingArea === 15) {\n            return { x, y, width, height, destOffsetX: 0, destOffsetY: 0 };\n        }\n        const halfWidth = Math.round(width / 2);\n        const halfHeight = Math.round(height / 2);\n        switch (mapChip.renderingArea) {\n            case 1:\n                return { x, y, width: halfWidth, height: halfHeight, destOffsetX: 0, destOffsetY: 0 };\n            case 2:\n                return { x: x + halfWidth, y, width: halfWidth, height: halfHeight, destOffsetX: halfWidth, destOffsetY: 0 };\n            case 3:\n                return { x, y, width, height: halfHeight, destOffsetX: 0, destOffsetY: 0 };\n            case 4:\n                return { x, y: y + halfHeight, width: halfWidth, height: halfHeight, destOffsetX: 0, destOffsetY: halfHeight };\n            case 5:\n                return { x, y, width: halfWidth, height, destOffsetX: 0, destOffsetY: 0 };\n            case 8:\n                return { x: x + halfWidth, y: y + halfHeight, width: halfWidth, height: halfHeight, destOffsetX: halfWidth, destOffsetY: halfHeight };\n            case 10:\n                return { x: x + halfWidth, y, width: halfWidth, height, destOffsetX: halfWidth, destOffsetY: 0 };\n            case 12:\n                return { x, y: y + halfHeight, width, height: halfHeight, destOffsetX: 0, destOffsetY: halfHeight };\n        }\n    }\n}\n\n\n/***/ })\n/******/ \t]);\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_25080__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __nested_webpack_require_25080__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__nested_webpack_require_25080__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__nested_webpack_require_25080__.o(definition, key) && !__nested_webpack_require_25080__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__nested_webpack_require_25080__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__nested_webpack_require_25080__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n(() => {\n__nested_webpack_require_25080__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_25080__.d(__webpack_exports__, {\n/* harmony export */   \"TiledMap\": () => (/* reexport safe */ _TiledMap__WEBPACK_IMPORTED_MODULE_0__.TiledMap),\n/* harmony export */   \"TiledMapData\": () => (/* reexport safe */ _MapData_TiledMapData__WEBPACK_IMPORTED_MODULE_1__.TiledMapData),\n/* harmony export */   \"MapChipImage\": () => (/* reexport safe */ _MapChips__WEBPACK_IMPORTED_MODULE_2__.MapChipImage),\n/* harmony export */   \"MapChipsCollection\": () => (/* reexport safe */ _MapChips__WEBPACK_IMPORTED_MODULE_2__.MapChipsCollection),\n/* harmony export */   \"MapChipFragment\": () => (/* reexport safe */ _MapChip__WEBPACK_IMPORTED_MODULE_3__.MapChipFragment),\n/* harmony export */   \"MapChip\": () => (/* reexport safe */ _MapChip__WEBPACK_IMPORTED_MODULE_3__.MapChip),\n/* harmony export */   \"AutoTileMapChip\": () => (/* reexport safe */ _MapChip__WEBPACK_IMPORTED_MODULE_3__.AutoTileMapChip),\n/* harmony export */   \"isAutoTileMapChip\": () => (/* reexport safe */ _MapChip__WEBPACK_IMPORTED_MODULE_3__.isAutoTileMapChip),\n/* harmony export */   \"AutoTiles\": () => (/* reexport safe */ _AutoTile_AutoTiles__WEBPACK_IMPORTED_MODULE_4__.AutoTiles),\n/* harmony export */   \"AutoTile\": () => (/* reexport safe */ _AutoTile_AutoTiles__WEBPACK_IMPORTED_MODULE_4__.AutoTile),\n/* harmony export */   \"DefaultAutoTileImportStrategy\": () => (/* reexport safe */ _AutoTile_DefaultAutoTileImportStrategy__WEBPACK_IMPORTED_MODULE_5__.DefaultAutoTileImportStrategy),\n/* harmony export */   \"ColiderMap\": () => (/* reexport safe */ _MapData_ColiderMap__WEBPACK_IMPORTED_MODULE_6__.ColiderMap),\n/* harmony export */   \"MapRenderer\": () => (/* reexport safe */ _MapRenderer__WEBPACK_IMPORTED_MODULE_7__.MapRenderer)\n/* harmony export */ });\n/* harmony import */ var _TiledMap__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_25080__(1);\n/* harmony import */ var _MapData_TiledMapData__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_25080__(5);\n/* harmony import */ var _MapChips__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_25080__(2);\n/* harmony import */ var _MapChip__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_25080__(4);\n/* harmony import */ var _AutoTile_AutoTiles__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_25080__(3);\n/* harmony import */ var _AutoTile_DefaultAutoTileImportStrategy__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_25080__(8);\n/* harmony import */ var _MapData_ColiderMap__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_25080__(7);\n/* harmony import */ var _MapRenderer__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_25080__(9);\n\n\n\n\n\n\n\n\n\n})();\n\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});\n//# sourceMappingURL=main.js.map\n\n/***/ }),\n/* 4 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_40551__) => {\n\n\"use strict\";\n__nested_webpack_require_40551__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_40551__.d(__webpack_exports__, {\n/* harmony export */   \"PenDescription\": () => (/* binding */ PenDescription),\n/* harmony export */   \"Pen\": () => (/* binding */ Pen)\n/* harmony export */ });\nconst PenDescription = {\n    name: 'Pen',\n    create: () => new Pen()\n};\nclass Pen {\n    constructor() {\n        this._isMouseDown = false;\n        this.painting = [];\n        this._beforeCursorPosition = { x: -1, y: -1 };\n        this._arrangement = null;\n    }\n    setArrangement(arrangement) {\n        this._arrangement = arrangement;\n    }\n    mouseDown(chipX, chipY) {\n        this._isMouseDown = true;\n        this.painting = [];\n    }\n    mouseMove(chipX, chipY) {\n        if (!this._arrangement)\n            throw new Error('Arrangement is not set.');\n        if (!this._isMouseDown)\n            return [];\n        const paint = {\n            x: chipX,\n            y: chipY,\n            item: null\n        };\n        if (paint.x !== this._beforeCursorPosition.x || paint.y !== this._beforeCursorPosition.y) {\n            this.painting.push(paint);\n            this._beforeCursorPosition = paint;\n        }\n        return this._arrangement.apply(this.painting);\n    }\n    mouseUp(chipX, chipY) {\n        if (!this._arrangement)\n            throw new Error('Arrangement is not set.');\n        this._isMouseDown = false;\n        return this._arrangement.apply(this.painting);\n    }\n    cleanUp() {\n        this.painting.length = 0;\n        this._beforeCursorPosition = { x: -1, y: -1 };\n    }\n}\n\n\n/***/ }),\n/* 5 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_42236__) => {\n\n\"use strict\";\n__nested_webpack_require_42236__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_42236__.d(__webpack_exports__, {\n/* harmony export */   \"Brushes\": () => (/* binding */ Brushes)\n/* harmony export */ });\n/* harmony import */ var _Pen__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_42236__(4);\n/* harmony import */ var _RectangleBrush__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_42236__(6);\n\n\nconst registeredBrushDescriptions = [\n    _Pen__WEBPACK_IMPORTED_MODULE_0__.PenDescription,\n    _RectangleBrush__WEBPACK_IMPORTED_MODULE_1__.RectangleBrushDescription\n];\nconst Brushes = registeredBrushDescriptions.map(description => ({\n    name: description.name,\n    create: () => description.create()\n}));\n\n\n/***/ }),\n/* 6 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_43041__) => {\n\n\"use strict\";\n__nested_webpack_require_43041__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_43041__.d(__webpack_exports__, {\n/* harmony export */   \"RectangleBrushDescription\": () => (/* binding */ RectangleBrushDescription),\n/* harmony export */   \"RectangleBrush\": () => (/* binding */ RectangleBrush)\n/* harmony export */ });\nconst RectangleBrushDescription = {\n    name: 'RectangleBrush',\n    create: () => new RectangleBrush()\n};\nclass RectangleBrush {\n    constructor() {\n        this._isMouseDown = false;\n        this._startPosition = { x: 0, y: 0 };\n        this._arrangement = null;\n    }\n    setArrangement(arrangement) {\n        this._arrangement = arrangement;\n    }\n    mouseDown(chipX, chipY) {\n        this._isMouseDown = true;\n        this._startPosition = { x: chipX, y: chipY };\n    }\n    mouseMove(chipX, chipY) {\n        if (!this._isMouseDown)\n            return [];\n        return this._build(chipX, chipY);\n    }\n    mouseUp(chipX, chipY) {\n        this._isMouseDown = false;\n        return this._build(chipX, chipY);\n    }\n    _build(chipX, chipY) {\n        if (!this._arrangement)\n            throw new Error('Arrangement is not set.');\n        const paints = [];\n        const startX = Math.min(this._startPosition.x, chipX);\n        const startY = Math.min(this._startPosition.y, chipY);\n        const endX = Math.max(this._startPosition.x, chipX);\n        const endY = Math.max(this._startPosition.y, chipY);\n        for (let x = startX; x <= endX; x++) {\n            for (let y = startY; y <= endY; y++) {\n                paints.push({ x, y });\n            }\n        }\n        return this._arrangement.apply(paints);\n    }\n    cleanUp() {\n    }\n}\n\n\n/***/ }),\n/* 7 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_44818__) => {\n\n\"use strict\";\n__nested_webpack_require_44818__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_44818__.d(__webpack_exports__, {\n/* harmony export */   \"Arrangements\": () => (/* binding */ Arrangements)\n/* harmony export */ });\n/* harmony import */ var _DefaultArrangement__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_44818__(8);\n/* harmony import */ var _AutoTileArrangement__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_44818__(9);\n/* harmony import */ var _DefaultEraseArrangement__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_44818__(10);\n\n\n\nconst registeredArrangementDescriptions = [\n    _DefaultArrangement__WEBPACK_IMPORTED_MODULE_0__.DefaultArrangementDescription,\n    _AutoTileArrangement__WEBPACK_IMPORTED_MODULE_1__.AutoTileArrangementDescription,\n    _DefaultEraseArrangement__WEBPACK_IMPORTED_MODULE_2__.DefaultEraseArrangementDescription\n];\nconst Arrangements = registeredArrangementDescriptions.map(description => ({\n    name: description.name,\n    create: () => description.create()\n}));\n\n\n/***/ }),\n/* 8 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_45911__) => {\n\n\"use strict\";\n__nested_webpack_require_45911__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_45911__.d(__webpack_exports__, {\n/* harmony export */   \"DefaultArrangementDescription\": () => (/* binding */ DefaultArrangementDescription),\n/* harmony export */   \"DefaultArrangement\": () => (/* binding */ DefaultArrangement)\n/* harmony export */ });\n/* harmony import */ var _piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_45911__(3);\n/* harmony import */ var _piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_45911__.n(_piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_0__);\n\nconst DefaultArrangementDescription = {\n    name: 'DefaultArrangement',\n    create: () => new DefaultArrangement()\n};\nclass DefaultArrangement {\n    constructor() {\n        this._mapChips = [];\n    }\n    setMapChips(mapChips) {\n        if (mapChips.length !== 1)\n            throw new Error('Invalid count of map chips. DefaultArrangement requires a map chip.');\n        this._mapChips = mapChips;\n    }\n    apply(paints) {\n        if (this._mapChips.length !== 1)\n            throw new Error('Invalid count of map chips. DefaultArrangement requires a map chip.');\n        return paints.map(paint => ({ ...paint, item: new _piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_0__.MapChip([this._mapChips[0]]) }));\n    }\n}\n\n\n/***/ }),\n/* 9 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_47357__) => {\n\n\"use strict\";\n__nested_webpack_require_47357__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_47357__.d(__webpack_exports__, {\n/* harmony export */   \"AutoTileArrangementDescription\": () => (/* binding */ AutoTileArrangementDescription),\n/* harmony export */   \"AutoTileArrangement\": () => (/* binding */ AutoTileArrangement)\n/* harmony export */ });\n/* harmony import */ var _piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_47357__(3);\n/* harmony import */ var _piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_47357__.n(_piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_0__);\n\nconst AutoTileArrangementDescription = {\n    name: 'AutoTileArrangement',\n    create: () => new AutoTileArrangement()\n};\n/**\n * AutoTileArrangement\n *\n * Supported auto tile format is shown below.\n *\n * |<---------- 1chip ----------->|\n * ┏━┿┿┿┿┿┿┿┿┓---\n * ┠isolated                   ┠↑\n * ┣┿┿┿┿┿┿┿┿┿┫ |\n * ┠straight road (lengthwise) ┠ |\n * ┣┿┿┿┿┿┿┿┿┿┫ |\n * ┠straight road (sideways)   ┠5chips\n * ┣┿┿┿┿┿┿┿┿┿┫ |\n * ┠cross road                 ┠ |\n * ┣┿┿┿┿┿┿┿┿┿┫ |\n * ┠square                     ┠↓\n * ┗┷┿┿┿┿┿┿┿┿┛---\n */\nclass AutoTileArrangement {\n    constructor() {\n        this._autoTile = null;\n        this._tiledMapData = null;\n        this.temporaryChip = new _piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_0__.AutoTileMapChip(-1, [new _piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_0__.MapChipFragment(-1, -1, -1)]);\n    }\n    get tiledMapData() {\n        return this._tiledMapData;\n    }\n    setMapChips(mapChips) {\n    }\n    setAutoTile(autoTile) {\n        if (autoTile.mapChipFragments.length !== 5)\n            throw new Error('Too few map chips. AutoTileArrangement requires 5 map chips.');\n        this._autoTile = autoTile;\n    }\n    setTiledMapData(tiledMapData) {\n        this._tiledMapData = tiledMapData;\n    }\n    apply(paints) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;\n        if (!this._tiledMapData)\n            throw new Error('MapData is not set.');\n        const result = [];\n        const x1 = paints.reduce((acc, val) => Math.min(acc, val.x), this._tiledMapData.width);\n        const y1 = paints.reduce((acc, val) => Math.min(acc, val.y), this._tiledMapData.height);\n        const x2 = paints.reduce((acc, val) => Math.max(acc, val.x), 0);\n        const y2 = paints.reduce((acc, val) => Math.max(acc, val.y), 0);\n        const size = {\n            width: x2 - x1 + 1,\n            height: y2 - y1 + 1\n        };\n        const sizeWithPatch = {\n            width: size.width + 2,\n            height: size.height + 2\n        };\n        const tiledBuffer = new _piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_0__.TiledMapData(sizeWithPatch.width, sizeWithPatch.height);\n        const offsetX1 = 1;\n        const offsetY1 = 1;\n        const offsetX2 = 1;\n        const offsetY2 = 1;\n        tiledBuffer.transferFromTiledMapData(this._tiledMapData, x1 - offsetX1, y1 - offsetY1, sizeWithPatch.width + offsetX2, sizeWithPatch.height + offsetY2, 0, 0);\n        paints.forEach(paint => {\n            const x = paint.x - x1 + offsetX1;\n            const y = paint.y - y1 + offsetY1;\n            tiledBuffer.put(this.temporaryChip, x, y);\n        });\n        for (let y = offsetY1; y < size.height + offsetY2; y++) {\n            for (let x = offsetX1; x < size.width + offsetX2; x++) {\n                const cursor = tiledBuffer.getFromChipPosition(x, y);\n                const targetChip = tiledBuffer.getFromChipPosition(x, y);\n                const isTemporaryChip = targetChip ? this.temporaryChip.compare(targetChip) : false;\n                if (!cursor)\n                    continue;\n                if (!isTemporaryChip)\n                    continue;\n                /**\n                 * adjacent\n                 *\n                 *  x      : processing point\n                 *  others : patch number\n                 * *-----*-----*-----*\n                 * | 16  |  1  | 32  |\n                 * *-----*-----*-----*\n                 * |  2  |  x  |  4  |\n                 * *-----*-----*-----*\n                 * | 64  |  8  | 128 |\n                 * *-----*-----*-----*\n                 */\n                let adjacent = 0;\n                const aroundChips = [\n                    tiledBuffer.getFromChipPosition(x, y - 1),\n                    tiledBuffer.getFromChipPosition(x - 1, y),\n                    tiledBuffer.getFromChipPosition(x + 1, y),\n                    tiledBuffer.getFromChipPosition(x, y + 1),\n                    tiledBuffer.getFromChipPosition(x - 1, y - 1),\n                    tiledBuffer.getFromChipPosition(x + 1, y - 1),\n                    tiledBuffer.getFromChipPosition(x - 1, y + 1),\n                    tiledBuffer.getFromChipPosition(x + 1, y + 1)\n                ].map(mapChip => (0,_piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_0__.isAutoTileMapChip)(mapChip) ? mapChip : null);\n                if (!((_a = aroundChips[0]) === null || _a === void 0 ? void 0 : _a.boundary.bottom))\n                    adjacent += this._isAdjacent(aroundChips[0]) ? 1 : 0;\n                if (!((_b = aroundChips[1]) === null || _b === void 0 ? void 0 : _b.boundary.right))\n                    adjacent += this._isAdjacent(aroundChips[1]) ? 2 : 0;\n                if (!((_c = aroundChips[2]) === null || _c === void 0 ? void 0 : _c.boundary.left))\n                    adjacent += this._isAdjacent(aroundChips[2]) ? 4 : 0;\n                if (!((_d = aroundChips[3]) === null || _d === void 0 ? void 0 : _d.boundary.top))\n                    adjacent += this._isAdjacent(aroundChips[3]) ? 8 : 0;\n                if (!((_e = aroundChips[4]) === null || _e === void 0 ? void 0 : _e.boundary.bottom) && !((_f = aroundChips[4]) === null || _f === void 0 ? void 0 : _f.boundary.right) && !((_g = aroundChips[4]) === null || _g === void 0 ? void 0 : _g.cross.bottomRight))\n                    adjacent += this._isAdjacent(aroundChips[4]) ? 16 : 0;\n                if (!((_h = aroundChips[5]) === null || _h === void 0 ? void 0 : _h.boundary.bottom) && !((_j = aroundChips[5]) === null || _j === void 0 ? void 0 : _j.boundary.left) && !((_k = aroundChips[5]) === null || _k === void 0 ? void 0 : _k.cross.bottomLeft))\n                    adjacent += this._isAdjacent(aroundChips[5]) ? 32 : 0;\n                if (!((_l = aroundChips[6]) === null || _l === void 0 ? void 0 : _l.boundary.top) && !((_m = aroundChips[6]) === null || _m === void 0 ? void 0 : _m.boundary.right) && !((_o = aroundChips[6]) === null || _o === void 0 ? void 0 : _o.cross.topRight))\n                    adjacent += this._isAdjacent(aroundChips[6]) ? 64 : 0;\n                if (!((_p = aroundChips[7]) === null || _p === void 0 ? void 0 : _p.boundary.top) && !((_q = aroundChips[7]) === null || _q === void 0 ? void 0 : _q.boundary.left) && !((_r = aroundChips[7]) === null || _r === void 0 ? void 0 : _r.cross.topLeft))\n                    adjacent += this._isAdjacent(aroundChips[7]) ? 128 : 0;\n                const item = this.getTiledPattern(adjacent, aroundChips);\n                if (item) {\n                    tiledBuffer.put(item, x, y);\n                    result.push({ x: x + x1 - offsetX1, y: y + y1 - offsetY1, item });\n                }\n            }\n        }\n        return result;\n    }\n    getTiledPattern(adjacent, aroundChips) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        if (!this._autoTile)\n            return null;\n        const mapChip = new _piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_0__.AutoTileMapChip(this._autoTile.id, [], 'AutoTileArrangement');\n        const mapChips = this._autoTile.mapChipFragments;\n        const boundary = {\n            top: false,\n            bottom: false,\n            left: false,\n            right: false\n        };\n        const cross = {\n            topLeft: false,\n            topRight: false,\n            bottomLeft: false,\n            bottomRight: false\n        };\n        if ((adjacent & 19) === 19 && !((_a = aroundChips[0]) === null || _a === void 0 ? void 0 : _a.cross.bottomLeft) && !((_b = aroundChips[1]) === null || _b === void 0 ? void 0 : _b.cross.topRight)) {\n            /* Square */\n            mapChip.push(mapChips[4].clone().withParameter({ renderingArea: 1 }));\n            boundary.top = false;\n            boundary.left = false;\n        }\n        else if ((adjacent & 3) === 2) {\n            /* Straight(sideways) */\n            mapChip.push(mapChips[2].clone().withParameter({ renderingArea: 1 }));\n            boundary.top = true;\n            boundary.left = false;\n        }\n        else if ((adjacent & 3) === 1) {\n            /* Straight(lengthwise) */\n            mapChip.push(mapChips[1].clone().withParameter({ renderingArea: 1 }));\n            boundary.top = false;\n            boundary.left = true;\n        }\n        else if ((adjacent & 3) === 0) {\n            /* Corner */\n            mapChip.push(mapChips[0].clone().withParameter({ renderingArea: 1 }));\n            boundary.top = true;\n            boundary.left = true;\n        }\n        else if ((adjacent & 19) === 3) {\n            /* Cross */\n            mapChip.push(mapChips[3].clone().withParameter({ renderingArea: 1 }));\n            boundary.top = false;\n            boundary.left = false;\n            cross.topLeft = true;\n        }\n        if ((adjacent & 37) === 37 && !((_c = aroundChips[0]) === null || _c === void 0 ? void 0 : _c.cross.bottomRight) && !((_d = aroundChips[2]) === null || _d === void 0 ? void 0 : _d.cross.topLeft)) {\n            mapChip.push(mapChips[4].clone().withParameter({ renderingArea: 2 }));\n        }\n        else if ((adjacent & 5) === 4) {\n            mapChip.push(mapChips[2].clone().withParameter({ renderingArea: 2 }));\n        }\n        else if ((adjacent & 5) === 1) {\n            mapChip.push(mapChips[1].clone().withParameter({ renderingArea: 2 }));\n        }\n        else if ((adjacent & 5) === 0) {\n            mapChip.push(mapChips[0].clone().withParameter({ renderingArea: 2 }));\n        }\n        else if ((adjacent & 37) === 5) {\n            mapChip.push(mapChips[3].clone().withParameter({ renderingArea: 2 }));\n            cross.topRight = true;\n        }\n        if ((adjacent & 74) === 74 && !((_e = aroundChips[1]) === null || _e === void 0 ? void 0 : _e.cross.bottomRight) && !((_f = aroundChips[3]) === null || _f === void 0 ? void 0 : _f.cross.topRight)) {\n            mapChip.push(mapChips[4].clone().withParameter({ renderingArea: 4 }));\n        }\n        else if ((adjacent & 10) === 2) {\n            mapChip.push(mapChips[2].clone().withParameter({ renderingArea: 4 }));\n        }\n        else if ((adjacent & 10) === 8) {\n            mapChip.push(mapChips[1].clone().withParameter({ renderingArea: 4 }));\n        }\n        else if ((adjacent & 10) === 0) {\n            mapChip.push(mapChips[0].clone().withParameter({ renderingArea: 4 }));\n        }\n        else if ((adjacent & 74) === 10) {\n            mapChip.push(mapChips[3].clone().withParameter({ renderingArea: 4 }));\n            cross.bottomLeft = true;\n        }\n        if ((adjacent & 140) === 140 && !((_g = aroundChips[2]) === null || _g === void 0 ? void 0 : _g.cross.bottomLeft) && !((_h = aroundChips[3]) === null || _h === void 0 ? void 0 : _h.cross.topRight)) {\n            mapChip.push(mapChips[4].clone().withParameter({ renderingArea: 8 }));\n            boundary.bottom = false;\n            boundary.right = false;\n        }\n        else if ((adjacent & 12) === 4) {\n            mapChip.push(mapChips[2].clone().withParameter({ renderingArea: 8 }));\n            boundary.bottom = true;\n            boundary.right = false;\n        }\n        else if ((adjacent & 12) === 8) {\n            mapChip.push(mapChips[1].clone().withParameter({ renderingArea: 8 }));\n            boundary.bottom = false;\n            boundary.right = true;\n        }\n        else if ((adjacent & 12) === 0) {\n            mapChip.push(mapChips[0].clone().withParameter({ renderingArea: 8 }));\n            boundary.bottom = true;\n            boundary.right = true;\n        }\n        else if ((adjacent & 140) === 12) {\n            mapChip.push(mapChips[3].clone().withParameter({ renderingArea: 8 }));\n            boundary.bottom = false;\n            boundary.right = false;\n            cross.bottomRight = true;\n        }\n        if (mapChip.length !== 4)\n            return null;\n        mapChip.setBoundary(boundary);\n        mapChip.setCross(cross);\n        return mapChip;\n    }\n    _isAdjacent(chip) {\n        if (chip === null)\n            return false;\n        const isTemporaryChip = this.temporaryChip.compare(chip);\n        const isAutoTileChip = this._isAutoTileChip(chip);\n        return isAutoTileChip || isTemporaryChip;\n    }\n    _isAutoTileChip(chip) {\n        if (!this._autoTile)\n            return false;\n        if (!chip)\n            return false;\n        return this._autoTile.id === chip.autoTileId;\n    }\n}\n\n\n/***/ }),\n/* 10 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_60357__) => {\n\n\"use strict\";\n__nested_webpack_require_60357__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_60357__.d(__webpack_exports__, {\n/* harmony export */   \"DefaultEraseArrangementDescription\": () => (/* binding */ DefaultEraseArrangementDescription),\n/* harmony export */   \"DefaultEraseArrangement\": () => (/* binding */ DefaultEraseArrangement)\n/* harmony export */ });\n/* harmony import */ var _EraseArrangement__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_60357__(11);\n/* harmony import */ var _AutoTileEraseArrangement__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_60357__(12);\n\n\nconst DefaultEraseArrangementDescription = {\n    name: 'DefaultEraseArrangement',\n    create: () => new DefaultEraseArrangement()\n};\nclass DefaultEraseArrangement {\n    constructor() {\n        this.defaultEraser = new _EraseArrangement__WEBPACK_IMPORTED_MODULE_0__.EraseArrangement();\n        this.autoTileEraser = new _AutoTileEraseArrangement__WEBPACK_IMPORTED_MODULE_1__.AutoTileEraseArrangement();\n        this._tiledMapData = null;\n    }\n    setTiledMapData(tiledMapData) {\n        this._tiledMapData = tiledMapData;\n        this.autoTileEraser.setTiledMapData(tiledMapData);\n    }\n    setAutoTiles(autoTiles) {\n        this.autoTileEraser.setAutoTiles(autoTiles);\n    }\n    apply(paints) {\n        const autoTilePaints = [];\n        const otherPaints = [];\n        paints.forEach(paint => {\n            if (!this._tiledMapData)\n                throw new Error('MapData is not set.');\n            const chip = this._tiledMapData.getFromChipPosition(paint.x, paint.y);\n            if ((chip === null || chip === void 0 ? void 0 : chip.arrangementName) === 'AutoTileArrangement') {\n                autoTilePaints.push(paint);\n            }\n            else {\n                otherPaints.push(paint);\n            }\n        });\n        return [...this.autoTileEraser.apply(autoTilePaints), ...this.defaultEraser.apply(otherPaints)];\n    }\n}\n\n\n/***/ }),\n/* 11 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_62373__) => {\n\n\"use strict\";\n__nested_webpack_require_62373__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_62373__.d(__webpack_exports__, {\n/* harmony export */   \"EraseArrangementDescription\": () => (/* binding */ EraseArrangementDescription),\n/* harmony export */   \"EraseArrangement\": () => (/* binding */ EraseArrangement)\n/* harmony export */ });\nconst EraseArrangementDescription = {\n    name: 'EraseArrangement',\n    create: () => new EraseArrangement()\n};\nclass EraseArrangement {\n    apply(paints) {\n        return paints.map(paint => ({ ...paint, item: null }));\n    }\n}\n\n\n/***/ }),\n/* 12 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_63040__) => {\n\n\"use strict\";\n__nested_webpack_require_63040__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_63040__.d(__webpack_exports__, {\n/* harmony export */   \"AutoTileEraseArrangementDescription\": () => (/* binding */ AutoTileEraseArrangementDescription),\n/* harmony export */   \"AutoTileEraseArrangement\": () => (/* binding */ AutoTileEraseArrangement)\n/* harmony export */ });\n/* harmony import */ var _AutoTileArrangement__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_63040__(9);\n/* harmony import */ var _piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_63040__(3);\n/* harmony import */ var _piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_63040__.n(_piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst AutoTileEraseArrangementDescription = {\n    name: 'AutoTileEraseArrangement',\n    create: () => new AutoTileEraseArrangement()\n};\nclass AutoTileEraseArrangement {\n    constructor() {\n        this._autoTileArrangement = new _AutoTileArrangement__WEBPACK_IMPORTED_MODULE_0__.AutoTileArrangement();\n        this._tiledMapData = null;\n        this._autoTiles = null;\n    }\n    setTiledMapData(tiledMapData) {\n        this._tiledMapData = tiledMapData;\n    }\n    setAutoTiles(autoTiles) {\n        this._autoTiles = autoTiles;\n    }\n    apply(paints) {\n        if (paints.length === 0)\n            return [];\n        return this.erase(paints);\n    }\n    erase(paints) {\n        if (!this._tiledMapData)\n            throw new Error('MapData is not set.');\n        if (!this._autoTiles)\n            throw new Error('AutoTiles is not set');\n        const resultPaints = [];\n        const paintX1 = paints.reduce((acc, val) => Math.min(acc, val.x), this._tiledMapData.width);\n        const paintY1 = paints.reduce((acc, val) => Math.min(acc, val.y), this._tiledMapData.height);\n        const paintX2 = paints.reduce((acc, val) => Math.max(acc, val.x), 0);\n        const paintY2 = paints.reduce((acc, val) => Math.max(acc, val.y), 0);\n        const x1 = Math.max(paintX1 - 1, 0);\n        const y1 = Math.max(paintY1 - 1, 0);\n        const x2 = Math.min(paintX2 + 1, this._tiledMapData.width);\n        const y2 = Math.min(paintY2 + 1, this._tiledMapData.height);\n        const bufferWidth = x2 - x1 + 1;\n        const bufferHeight = y2 - y1 + 1;\n        const tiledBuffer = new _piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_1__.TiledMapData(bufferWidth + 2, bufferHeight + 2);\n        const bufferOffsetX = x1 - 1;\n        const bufferOffsetY = y1 - 1;\n        tiledBuffer.transferFromTiledMapData(this._tiledMapData, bufferOffsetX, bufferOffsetY, tiledBuffer.width, tiledBuffer.height, 0, 0);\n        paints.forEach(paint => {\n            var _a;\n            const paintPositionAtBuffer = { x: paint.x - bufferOffsetX, y: paint.y - bufferOffsetY };\n            tiledBuffer.put(null, paintPositionAtBuffer.x, paintPositionAtBuffer.y);\n            resultPaints.push({ x: paint.x, y: paint.y, item: null });\n            this._autoTileArrangement.setTiledMapData(tiledBuffer);\n            for (let y = paintPositionAtBuffer.y - 1; y <= paintPositionAtBuffer.y + 1; y++) {\n                for (let x = paintPositionAtBuffer.x - 1; x <= paintPositionAtBuffer.x + 1; x++) {\n                    if (x === paintPositionAtBuffer.x && y === paintPositionAtBuffer.y)\n                        continue;\n                    const item = tiledBuffer.getFromChipPosition(x, y);\n                    if (item && (0,_piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_1__.isAutoTileMapChip)(item)) {\n                        const autoTile = (_a = this._autoTiles) === null || _a === void 0 ? void 0 : _a.fromId(item.autoTileId);\n                        if (!autoTile)\n                            continue;\n                        this._autoTileArrangement.setAutoTile(autoTile);\n                        const appliedPaints = this._autoTileArrangement.apply([{ x, y }]);\n                        if (appliedPaints.length === 0)\n                            continue;\n                        resultPaints.push({ x: appliedPaints[0].x + bufferOffsetX, y: appliedPaints[0].y + bufferOffsetY, item: appliedPaints[0].item });\n                    }\n                }\n            }\n        });\n        return resultPaints;\n    }\n}\n\n\n/***/ }),\n/* 13 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_67391__) => {\n\n\"use strict\";\n__nested_webpack_require_67391__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_67391__.d(__webpack_exports__, {\n/* harmony export */   \"isMapChipFragmentRequired\": () => (/* binding */ isMapChipFragmentRequired),\n/* harmony export */   \"isTiledMapDataRequired\": () => (/* binding */ isTiledMapDataRequired),\n/* harmony export */   \"isAutoTileRequired\": () => (/* binding */ isAutoTileRequired),\n/* harmony export */   \"isAutoTilesRequired\": () => (/* binding */ isAutoTilesRequired),\n/* harmony export */   \"isColiderTypesRequired\": () => (/* binding */ isColiderTypesRequired)\n/* harmony export */ });\nfunction isMapChipFragmentRequired(obj) {\n    return typeof obj.setMapChips === 'function';\n}\nfunction isTiledMapDataRequired(obj) {\n    return typeof obj.setTiledMapData === 'function';\n}\nfunction isAutoTileRequired(obj) {\n    return typeof obj.setAutoTile === 'function';\n}\nfunction isAutoTilesRequired(obj) {\n    return typeof obj.setAutoTiles === 'function';\n}\nfunction isColiderTypesRequired(obj) {\n    return typeof obj.setColiderTypes === 'function';\n}\n\n\n/***/ }),\n/* 14 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_68568__) => {\n\n\"use strict\";\n__nested_webpack_require_68568__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_68568__.d(__webpack_exports__, {\n/* harmony export */   \"Project\": () => (/* binding */ Project),\n/* harmony export */   \"Projects\": () => (/* binding */ Projects)\n/* harmony export */ });\n/* harmony import */ var _Callbacks__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_68568__(15);\n/* harmony import */ var _Injector__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_68568__(16);\n\n\nclass Project {\n    constructor(_tiledMap, _projectId) {\n        this._tiledMap = _tiledMap;\n        this._projectId = _projectId;\n        this._renderAllFunction = [];\n        this._beforeAddLayerCallbacks = new _Callbacks__WEBPACK_IMPORTED_MODULE_0__.CallbackCaller();\n        const injector = new _Injector__WEBPACK_IMPORTED_MODULE_1__.Injector();\n        injector.inject(_tiledMap, _tiledMap.addLayer, () => this._beforeAddLayerHandler(), null);\n    }\n    get projectId() {\n        return this._projectId;\n    }\n    get tiledMap() {\n        return this._tiledMap;\n    }\n    addBeforeAddLayerCallback(callback) {\n        this._beforeAddLayerCallbacks.add(callback);\n    }\n    requestRenderAll() {\n        this._renderAllFunction.forEach(fn => fn());\n    }\n    registerRenderAllCallback(fn) {\n        this._renderAllFunction.push(fn);\n    }\n    _beforeAddLayerHandler() {\n        this._beforeAddLayerCallbacks.call();\n    }\n}\nclass Projects {\n    static setProjectAddCallbackFunction(fn) {\n        this._projectAddCallbackFunctions.push(fn);\n    }\n    static get items() {\n        return Projects._items;\n    }\n    static add(tiledMap, projectId = -1) {\n        const id = projectId > 0 ? projectId : Projects.createId();\n        const project = new Project(tiledMap, id);\n        Projects._items.push(project);\n        this._projectAddCallbackFunctions.forEach(fn => fn());\n        return project;\n    }\n    static clear() {\n        this._items.length = 0;\n    }\n    static fromProjectId(projectId) {\n        return this._items.find(item => item.projectId === projectId) || null;\n    }\n    static createId() {\n        return ++Projects._idCounter;\n    }\n}\nProjects._idCounter = 0;\nProjects._items = [];\nProjects._projectAddCallbackFunctions = [];\n\n\n/***/ }),\n/* 15 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_70885__) => {\n\n\"use strict\";\n__nested_webpack_require_70885__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_70885__.d(__webpack_exports__, {\n/* harmony export */   \"CallbackCaller\": () => (/* binding */ CallbackCaller),\n/* harmony export */   \"CallbackItem\": () => (/* binding */ CallbackItem)\n/* harmony export */ });\nclass CallbackCaller {\n    constructor() {\n        this._items = [];\n    }\n    add(proc) {\n        const callbackItem = new CallbackItem(proc);\n        this._items.push(callbackItem);\n    }\n    call() {\n        this._items.forEach(item => item.call());\n    }\n    remove(removedCallbackItem) {\n        const index = this._items.findIndex(item => item === removedCallbackItem);\n        if (index < 0)\n            throw Error('CallbackCaller is not found');\n        this._items.splice(index, 1);\n    }\n}\nclass CallbackItem {\n    constructor(_proc) {\n        this._proc = _proc;\n        this._caller = null;\n    }\n    call() {\n        var _a;\n        if (!this._proc)\n            new Error('Callback function is not set');\n        (_a = this._proc) === null || _a === void 0 ? void 0 : _a.call(this._caller);\n    }\n}\n\n\n/***/ }),\n/* 16 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_72102__) => {\n\n\"use strict\";\n__nested_webpack_require_72102__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_72102__.d(__webpack_exports__, {\n/* harmony export */   \"Injector\": () => (/* binding */ Injector)\n/* harmony export */ });\nclass Injector {\n    inject(calledObject, method, before, after) {\n        const original = calledObject[method.name];\n        calledObject[method.name] = () => {\n            if (before)\n                before();\n            const result = original.call(calledObject);\n            if (after)\n                after();\n            return result;\n        };\n    }\n}\n\n\n/***/ }),\n/* 17 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_72782__) => {\n\n\"use strict\";\n__nested_webpack_require_72782__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_72782__.d(__webpack_exports__, {\n/* harmony export */   \"ColiderCanvas\": () => (/* binding */ ColiderCanvas)\n/* harmony export */ });\n/* harmony import */ var _ColiderRenderer__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_72782__(18);\n/* harmony import */ var _Brushes_Pen__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_72782__(4);\n/* harmony import */ var _Brushes_Arrangements_Arrangement__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_72782__(13);\n/* harmony import */ var _Brushes_Arrangements_ColiderArrangement__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_72782__(19);\n\n\n\n\nclass ColiderCanvas {\n    constructor() {\n        this._coliderCtx = null;\n        this._secondaryCanvasCtx = null;\n        this._secondaryCanvas = null;\n        this._project = null;\n        this._coliderRenderer = null;\n        this._arrangement = new _Brushes_Arrangements_ColiderArrangement__WEBPACK_IMPORTED_MODULE_3__.ColiderArrangement();\n        this._isMouseDown = false;\n        this._lastMapChipPosition = { x: -1, y: -1 };\n        this._selectedColiderType = 'none';\n        this._brush = new _Brushes_Pen__WEBPACK_IMPORTED_MODULE_1__.Pen();\n        this._setupBrush();\n    }\n    get selectedColiderType() {\n        return this._selectedColiderType;\n    }\n    get project() {\n        if (!this._project)\n            throw new Error('The project is not set');\n        return this._project;\n    }\n    get coliderCtx() {\n        if (!this._coliderCtx)\n            throw new Error('A canvas is not set');\n        return this._coliderCtx;\n    }\n    get secondaryCanvasCtx() {\n        if (!this._secondaryCanvasCtx)\n            throw new Error('A canvas is not set');\n        return this._secondaryCanvasCtx;\n    }\n    get coliderRenderer() {\n        if (!this._coliderRenderer)\n            throw new Error('The project is not set');\n        return this._coliderRenderer;\n    }\n    get secondaryCanvas() {\n        if (!this._secondaryCanvas)\n            throw new Error('A canvas is not set');\n        return this._secondaryCanvas;\n    }\n    setProject(project) {\n        this._project = project;\n        this._coliderRenderer = new _ColiderRenderer__WEBPACK_IMPORTED_MODULE_0__.ColiderRenderer(this._project.tiledMap);\n        this._project.registerRenderAllCallback(() => {\n            if (!this._coliderCtx)\n                return;\n            this.coliderRenderer.renderAll(this._coliderCtx);\n        });\n    }\n    setCanvas(canvas, secondaryCanvas) {\n        this._coliderCtx = canvas.getContext('2d');\n        this._secondaryCanvasCtx = secondaryCanvas.getContext('2d');\n        this._secondaryCanvas = secondaryCanvas;\n    }\n    setBrush(brush) {\n        this._brush = brush;\n        this._setupBrush();\n    }\n    setColiderType(value) {\n        this._selectedColiderType = value;\n        this._setupBrush();\n    }\n    _setupBrush() {\n        this._brush.setArrangement(this._arrangement);\n        if ((0,_Brushes_Arrangements_Arrangement__WEBPACK_IMPORTED_MODULE_2__.isColiderTypesRequired)(this._arrangement)) {\n            this._arrangement.setColiderTypes(this._selectedColiderType);\n        }\n    }\n    mouseDown(x, y) {\n        this._isMouseDown = true;\n        const chipPosition = this.convertFromCursorPositionToChipPosition(x, y);\n        this._brush.mouseDown(chipPosition.x, chipPosition.y);\n        this._lastMapChipPosition = chipPosition;\n    }\n    mouseMove(x, y) {\n        const chipPosition = this.convertFromCursorPositionToChipPosition(x, y);\n        if (!this._isMouseDown)\n            return chipPosition;\n        if (chipPosition.x === this._lastMapChipPosition.x && chipPosition.y === this._lastMapChipPosition.y)\n            return chipPosition;\n        this.clearSecondaryCanvas();\n        this._brush.mouseMove(chipPosition.x, chipPosition.y).forEach(paint => {\n            const chip = paint.item;\n            this.coliderRenderer.putOrClearChipToCanvas(this.secondaryCanvasCtx, chip, paint.x, paint.y, true);\n        });\n        this._lastMapChipPosition = chipPosition;\n        return chipPosition;\n    }\n    mouseUp(x, y) {\n        this._isMouseDown = false;\n        const chipPosition = this.convertFromCursorPositionToChipPosition(x, y);\n        this._brush.mouseUp(chipPosition.x, chipPosition.y).forEach(paint => {\n            const chip = paint.item;\n            this.putChip(chip, paint.x, paint.y);\n        });\n        this.clearSecondaryCanvas();\n        this._brush.cleanUp();\n        this._lastMapChipPosition = { x: -1, y: -1 };\n    }\n    putChip(coliderType, chipX, chipY) {\n        this.project.tiledMap.coliders.put(coliderType, chipX, chipY);\n        this.coliderRenderer.putOrClearChipToCanvas(this.coliderCtx, coliderType, chipX, chipY);\n    }\n    clearSecondaryCanvas() {\n        this.secondaryCanvasCtx.clearRect(0, 0, this.secondaryCanvas.width, this.secondaryCanvas.height);\n    }\n    convertFromCursorPositionToChipPosition(x, y) {\n        return {\n            x: Math.max(0, Math.min(Math.floor(x / this.project.tiledMap.chipWidth), this.project.tiledMap.chipCountX - 1)),\n            y: Math.max(0, Math.min(Math.floor(y / this.project.tiledMap.chipHeight), this.project.tiledMap.chipCountY - 1))\n        };\n    }\n}\n\n\n/***/ }),\n/* 18 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_78125__) => {\n\n\"use strict\";\n__nested_webpack_require_78125__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_78125__.d(__webpack_exports__, {\n/* harmony export */   \"ColiderRenderer\": () => (/* binding */ ColiderRenderer)\n/* harmony export */ });\nclass ColiderRenderer {\n    constructor(_tiledMap) {\n        this._tiledMap = _tiledMap;\n        this._backgroundRgba = { r: 255, g: 255, b: 255, a: 1.0 };\n    }\n    renderAll(ctx) {\n        this._tiledMap.coliders.items.forEach((value, index) => {\n            const position = this._tiledMap.convertMapNumberToPosition(index);\n            this.putOrClearChipToCanvas(ctx, value, position.x, position.y);\n        });\n    }\n    putOrClearChipToCanvas(ctx, coliderType, chipX, chipY, isTemporaryRendering = false) {\n        if (coliderType === 'colider') {\n            this._putToCanvas(ctx, chipX, chipY);\n        }\n        else {\n            this._clearChipToCanvas(ctx, chipX, chipY, isTemporaryRendering);\n        }\n    }\n    _clearChipToCanvas(ctx, chipX, chipY, isTemporaryRendering) {\n        const position = this._tiledMap.convertChipPositionToPixel(chipX, chipY);\n        ctx.clearRect(position.x, position.y, this._tiledMap.chipWidth, this._tiledMap.chipHeight);\n        if (isTemporaryRendering) {\n            ctx.fillStyle = `rgba(${this._backgroundRgba.r},${this._backgroundRgba.g},${this._backgroundRgba.b},${this._backgroundRgba.a})`;\n            ctx.fillRect(position.x, position.y, this._tiledMap.chipWidth, this._tiledMap.chipHeight);\n        }\n    }\n    _putToCanvas(ctx, chipX, chipY) {\n        const position = this._tiledMap.convertChipPositionToPixel(chipX, chipY);\n        ctx.clearRect(position.x, position.y, this._tiledMap.chipWidth, this._tiledMap.chipHeight);\n        ctx.fillStyle = 'rgba(255, 0, 0, 0.5)';\n        ctx.fillRect(position.x, position.y, this._tiledMap.chipWidth, this._tiledMap.chipHeight);\n    }\n}\n\n\n/***/ }),\n/* 19 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_80099__) => {\n\n\"use strict\";\n__nested_webpack_require_80099__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_80099__.d(__webpack_exports__, {\n/* harmony export */   \"ColiderArrangementDescription\": () => (/* binding */ ColiderArrangementDescription),\n/* harmony export */   \"ColiderArrangement\": () => (/* binding */ ColiderArrangement)\n/* harmony export */ });\nconst ColiderArrangementDescription = {\n    name: 'ColiderArrangement',\n    create: () => new ColiderArrangement()\n};\nclass ColiderArrangement {\n    constructor() {\n        this._coliderType = 'none';\n    }\n    setColiderTypes(coliderType) {\n        this._coliderType = coliderType;\n    }\n    apply(paints) {\n        return paints.map(paint => ({ ...paint, item: this._coliderType }));\n    }\n}\n\n\n/***/ }),\n/* 20 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_80939__) => {\n\n\"use strict\";\n__nested_webpack_require_80939__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_80939__.d(__webpack_exports__, {\n/* harmony export */   \"AutoTileSelector\": () => (/* binding */ AutoTileSelector)\n/* harmony export */ });\nclass AutoTileSelector {\n    constructor(_canvasWidth, _chipWidth, _chipHeight, _autoTiles, _mapChipsCollection) {\n        this._canvasWidth = _canvasWidth;\n        this._chipWidth = _chipWidth;\n        this._chipHeight = _chipHeight;\n        this._autoTiles = _autoTiles;\n        this._mapChipsCollection = _mapChipsCollection;\n        this._indexImageWidth = 0;\n        this._indexImageHeight = 0;\n        this._autoTilesMap = new Map();\n    }\n    getAutoTileFragmentFromIndexImagePosition(cursorX, cursorY) {\n        const x = Math.floor(cursorX / this._chipWidth);\n        const y = Math.floor(cursorY / this._chipHeight);\n        return this._autoTilesMap.get(`${x},${y}`) || null;\n    }\n    convertFromIndexImageToChipPosition(cursorX, cursorY) {\n        const chipCount = {\n            width: this._indexImageWidth / this._chipWidth,\n            height: this._indexImageHeight / this._chipHeight\n        };\n        return {\n            x: Math.max(0, Math.min(Math.floor(cursorX / this._chipWidth), chipCount.width - 1)),\n            y: Math.max(0, Math.min(Math.floor(cursorY / this._chipHeight), chipCount.height - 1))\n        };\n    }\n    getSizeOfIndexImage() {\n        return {\n            width: this._canvasWidth,\n            height: Math.ceil(this._autoTiles.length / this._canvasWidth) * this._chipHeight\n        };\n    }\n    generateIndexImage(canvas) {\n        const indexImageContext = canvas.getContext('2d');\n        if (!indexImageContext)\n            return;\n        this._autoTilesMap.clear();\n        const xCount = Math.floor(this._canvasWidth / this._chipWidth);\n        const values = this._autoTiles.values();\n        let currentAutoTile = undefined;\n        let x = 0, y = 0;\n        while (currentAutoTile = values.next().value) {\n            const fragment = currentAutoTile.mapChipFragments[0];\n            const chipImage = this._mapChipsCollection.findById(fragment.chipId);\n            if (!chipImage)\n                continue;\n            indexImageContext.drawImage(chipImage.image, fragment.x * this._chipWidth, fragment.y * this._chipHeight, this._chipWidth, this._chipHeight, x * this._chipWidth, y * this._chipHeight, this._chipWidth, this._chipHeight);\n            this._autoTilesMap.set(`${x},${y}`, currentAutoTile);\n            x++;\n            if (x > xCount) {\n                x = 0;\n                y++;\n            }\n        }\n        this._indexImageWidth = xCount * this._chipWidth;\n        this._indexImageHeight = (y + 1) * this._chipHeight;\n    }\n}\n\n\n/***/ }),\n/* 21 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_83776__) => {\n\n\"use strict\";\n__nested_webpack_require_83776__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_83776__.d(__webpack_exports__, {\n/* harmony export */   \"MapChipSelector\": () => (/* binding */ MapChipSelector)\n/* harmony export */ });\n/* harmony import */ var _piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_83776__(3);\n/* harmony import */ var _piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_83776__.n(_piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_0__);\n\nclass MapChipSelector {\n    constructor(_tiledMap) {\n        this._tiledMap = _tiledMap;\n        this._selectedChips = [];\n    }\n    get selectedChips() {\n        return this._selectedChips;\n    }\n    select(item) {\n        this._selectedChips.push(item.clone());\n    }\n    clear() {\n        this._selectedChips.length = 0;\n    }\n    selectAtMouseCursor(chipImage, cursorX, cursorY, width = 1, height = 1) {\n        this.clear();\n        const chipPosition = this.convertFromImagePositionToChipPosition(chipImage, cursorX, cursorY);\n        const chipCount = chipImage.getChipCount(this._tiledMap.chipWidth, this._tiledMap.chipHeight);\n        if (chipPosition.x + width > chipCount.width) {\n            chipPosition.x = chipCount.width - width;\n        }\n        if (chipPosition.y + height > chipCount.height) {\n            chipPosition.y = chipCount.height - height;\n        }\n        if (chipPosition.x < 0 || chipPosition.y < 0) {\n            throw new Error('MapChipImage is not enough size.');\n        }\n        for (let x = 0; x < width; x++) {\n            for (let y = 0; y < height; y++) {\n                this._selectedChips.push(new _piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_0__.MapChipFragment(chipPosition.x + x, chipPosition.y + y, chipImage.id));\n            }\n        }\n    }\n    convertFromImagePositionToChipPosition(chipImage, x, y) {\n        const chipCount = chipImage.getChipCount(this._tiledMap.chipWidth, this._tiledMap.chipHeight);\n        return {\n            x: Math.max(0, Math.min(Math.floor(x / this._tiledMap.chipWidth), chipCount.width - 1)),\n            y: Math.max(0, Math.min(Math.floor(y / this._tiledMap.chipHeight), chipCount.height - 1))\n        };\n    }\n}\n\n\n/***/ })\n/******/ \t]);\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_86249__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __nested_webpack_require_86249__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t(() => {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__nested_webpack_require_86249__.n = (module) => {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\t() => (module['default']) :\n/******/ \t\t\t\t() => (module);\n/******/ \t\t\t__nested_webpack_require_86249__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__nested_webpack_require_86249__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__nested_webpack_require_86249__.o(definition, key) && !__nested_webpack_require_86249__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__nested_webpack_require_86249__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__nested_webpack_require_86249__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be in strict mode.\n(() => {\n\"use strict\";\n__nested_webpack_require_86249__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_86249__.d(__webpack_exports__, {\n/* harmony export */   \"GridImageGenerator\": () => (/* reexport safe */ _GridImageGenerator__WEBPACK_IMPORTED_MODULE_0__.GridImageGenerator),\n/* harmony export */   \"MapCanvas\": () => (/* reexport safe */ _MapCanvas__WEBPACK_IMPORTED_MODULE_1__.MapCanvas),\n/* harmony export */   \"Projects\": () => (/* reexport safe */ _Projects__WEBPACK_IMPORTED_MODULE_2__.Projects),\n/* harmony export */   \"Project\": () => (/* reexport safe */ _Projects__WEBPACK_IMPORTED_MODULE_2__.Project),\n/* harmony export */   \"ColiderCanvas\": () => (/* reexport safe */ _ColiderCanvas__WEBPACK_IMPORTED_MODULE_3__.ColiderCanvas),\n/* harmony export */   \"AutoTileSelector\": () => (/* reexport safe */ _AutoTileSelector__WEBPACK_IMPORTED_MODULE_4__.AutoTileSelector),\n/* harmony export */   \"MapChipSelector\": () => (/* reexport safe */ _MapChipSelector__WEBPACK_IMPORTED_MODULE_5__.MapChipSelector)\n/* harmony export */ });\n/* harmony import */ var _GridImageGenerator__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_86249__(1);\n/* harmony import */ var _MapCanvas__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_86249__(2);\n/* harmony import */ var _Projects__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_86249__(14);\n/* harmony import */ var _ColiderCanvas__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_86249__(17);\n/* harmony import */ var _AutoTileSelector__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_86249__(20);\n/* harmony import */ var _MapChipSelector__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_86249__(21);\n\n\n\n\n\n\n\n})();\n\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});\n\n/***/ }),\n/* 20 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_246464__) => {\n\n\"use strict\";\n__nested_webpack_require_246464__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_246464__.d(__webpack_exports__, {\n/* harmony export */   \"CursorPositionCalculator\": () => (/* binding */ CursorPositionCalculator)\n/* harmony export */ });\nclass CursorPositionCalculator {\n    constructor() {\n        this._element = null;\n    }\n    setElement(element) {\n        this._element = element;\n    }\n    getMouseCursorPosition(pageX, pageY) {\n        if (!this._element)\n            return { x: 0, y: 0 };\n        const rect = this._element.getBoundingClientRect();\n        return {\n            x: (pageX - window.scrollX - rect.x),\n            y: (pageY - window.scrollY - rect.y)\n        };\n    }\n}\n\n\n/***/ }),\n/* 21 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_247268__) => {\n\n\"use strict\";\n__nested_webpack_require_247268__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_247268__.d(__webpack_exports__, {\n/* harmony export */   \"MapCanvasComponent\": () => (/* binding */ MapCanvasComponent)\n/* harmony export */ });\n/* harmony import */ var lit_element__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_247268__(2);\n/* harmony import */ var _Helpers_CursorPositionCalculator__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_247268__(20);\n/* harmony import */ var _piyoppi_pico2map_editor__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_247268__(19);\n/* harmony import */ var _piyoppi_pico2map_editor__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__nested_webpack_require_247268__.n(_piyoppi_pico2map_editor__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_247268__(22);\n/* harmony import */ var _piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__nested_webpack_require_247268__.n(_piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_3__);\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\nclass MapCanvasComponent extends lit_element__WEBPACK_IMPORTED_MODULE_0__.LitElement {\n    constructor() {\n        super();\n        this.gridImageSrc = '';\n        this.gridImageGenerator = new _piyoppi_pico2map_editor__WEBPACK_IMPORTED_MODULE_2__.GridImageGenerator();\n        this.cursorPositionCalculator = new _Helpers_CursorPositionCalculator__WEBPACK_IMPORTED_MODULE_1__.CursorPositionCalculator();\n        this._mapCanvas = new _piyoppi_pico2map_editor__WEBPACK_IMPORTED_MODULE_2__.MapCanvas();\n        this._coliderCanvas = new _piyoppi_pico2map_editor__WEBPACK_IMPORTED_MODULE_2__.ColiderCanvas();\n        this._project = null;\n        this._secondaryCanvasElement = null;\n        this._coliderCanvasElement = null;\n        this._canvasesOuterElement = null;\n        this._mode = 'mapChip';\n        this._autoTileIdAttributeValue = -1;\n        this._inactiveLayerOpacity = 1.0;\n        this.cursorChipX = 0;\n        this.cursorChipY = 0;\n        this._projectId = -1;\n        this._brushName = '';\n        this._arrangementName = '';\n        _piyoppi_pico2map_editor__WEBPACK_IMPORTED_MODULE_2__.Projects.setProjectAddCallbackFunction(() => this.setupProject());\n    }\n    get inactiveLayerOpacity() {\n        return this._inactiveLayerOpacity;\n    }\n    set inactiveLayerOpacity(value) {\n        const oldValue = this._inactiveLayerOpacity;\n        this._inactiveLayerOpacity = value;\n        this.setInactiveCanvasStyle();\n        this.requestUpdate('inactiveLayerOpacity', oldValue);\n    }\n    get projectId() {\n        return this._projectId;\n    }\n    set projectId(value) {\n        const oldValue = this._projectId;\n        this._projectId = value;\n        this.setupProject(true);\n        this.requestUpdate('projectId', oldValue);\n    }\n    get brush() {\n        return this._brushName;\n    }\n    set brush(value) {\n        const oldValue = this._brushName;\n        this._brushName = value;\n        this.setupMapCanvas();\n        this.requestUpdate('brush', oldValue);\n    }\n    get arrangement() {\n        return this._arrangementName;\n    }\n    set arrangement(value) {\n        const oldValue = this._arrangementName;\n        this._arrangementName = value;\n        this.setupMapCanvas();\n        this.requestUpdate('arrangement', oldValue);\n    }\n    get mode() {\n        return this._mode;\n    }\n    set mode(value) {\n        const oldValue = this._mode;\n        this._mode = value;\n        this.requestUpdate('mode', oldValue);\n    }\n    get autoTileId() {\n        var _a;\n        return ((_a = this._mapCanvas.selectedAutoTile) === null || _a === void 0 ? void 0 : _a.id) || -1;\n    }\n    set autoTileId(value) {\n        var _a;\n        const oldValue = value;\n        const autoTile = (_a = this._project) === null || _a === void 0 ? void 0 : _a.tiledMap.autoTiles.fromId(value);\n        this._autoTileIdAttributeValue = value;\n        this.setActiveAutoTile(true);\n        this.requestUpdate('autoTileId', oldValue);\n    }\n    get mapChipFragmentProperties() {\n        var _a;\n        return ((_a = this._mapCanvas.selectedMapChipFragment) === null || _a === void 0 ? void 0 : _a.toObject()) || null;\n    }\n    set mapChipFragmentProperties(value) {\n        const oldValue = value;\n        this.requestUpdate('mapChipFragmentProperties', oldValue);\n        if (!value)\n            return;\n        const mapChipFragment = _piyoppi_pico2map_tiled__WEBPACK_IMPORTED_MODULE_3__.MapChipFragment.fromObject(value);\n        this._mapCanvas.setMapChipFragment(mapChipFragment);\n    }\n    get coliderType() {\n        return this._coliderCanvas.selectedColiderType || '';\n    }\n    set coliderType(value) {\n        const oldValue = value;\n        this.requestUpdate('mapChipFragmentProperties', oldValue);\n        if (!value)\n            return;\n        this._coliderCanvas.setColiderType(value);\n    }\n    get activeLayer() {\n        return this._mapCanvas.activeLayer;\n    }\n    set activeLayer(value) {\n        this._mapCanvas.setActiveLayer(value);\n        this.setInactiveCanvasStyle();\n    }\n    get width() {\n        return this.xCount * this.gridWidth;\n    }\n    get height() {\n        return this.yCount * this.gridHeight;\n    }\n    get xCount() {\n        var _a;\n        return ((_a = this._project) === null || _a === void 0 ? void 0 : _a.tiledMap.chipCountX) || 0;\n    }\n    get yCount() {\n        var _a;\n        return ((_a = this._project) === null || _a === void 0 ? void 0 : _a.tiledMap.chipCountY) || 0;\n    }\n    get gridWidth() {\n        var _a;\n        return ((_a = this._project) === null || _a === void 0 ? void 0 : _a.tiledMap.chipWidth) || 0;\n    }\n    get gridHeight() {\n        var _a;\n        return ((_a = this._project) === null || _a === void 0 ? void 0 : _a.tiledMap.chipHeight) || 0;\n    }\n    get cursorPosition() {\n        return {\n            x: this.cursorChipX * this.gridWidth,\n            y: this.cursorChipY * this.gridHeight\n        };\n    }\n    get currentEditorCanvas() {\n        switch (this._mode) {\n            case 'colider':\n                return this._coliderCanvas;\n            default:\n                return this._mapCanvas;\n        }\n    }\n    setupProject(forced = false) {\n        if (!this._project || forced) {\n            this._project = _piyoppi_pico2map_editor__WEBPACK_IMPORTED_MODULE_2__.Projects.fromProjectId(this._projectId);\n            if (!this._project)\n                return;\n            this.setupMapCanvas();\n            this.setActiveAutoTile();\n            this.requestUpdate();\n            this._project.addBeforeAddLayerCallback(() => this._mapCanvas.addCanvas(this.addCanvasToDOMTree()));\n        }\n    }\n    createCanvas() {\n        const canvas = document.createElement('canvas');\n        canvas.width = this.width;\n        canvas.height = this.height;\n        return canvas;\n    }\n    addCanvasToDOMTree() {\n        if (!this._canvasesOuterElement)\n            throw new Error();\n        const canvas = this.createCanvas();\n        this._canvasesOuterElement.appendChild(canvas);\n        return canvas;\n    }\n    _createCanvases() {\n        if (!this._project || !this._canvasesOuterElement)\n            throw new Error();\n        return this._project.tiledMap.datas.map(_ => this.addCanvasToDOMTree());\n    }\n    setActiveAutoTile(forced = false) {\n        if (!this._project || this._autoTileIdAttributeValue < 0)\n            return;\n        if (!this._mapCanvas.hasActiveAutoTile() || forced) {\n            const autoTile = this._project.tiledMap.autoTiles.fromId(this._autoTileIdAttributeValue);\n            if (!autoTile)\n                throw new Error(`AutoTile (id: ${this._autoTileIdAttributeValue}) is not found.`);\n            this._mapCanvas.setAutoTile(autoTile);\n        }\n    }\n    setupMapCanvas() {\n        if (!this._project || !this._secondaryCanvasElement || !this._coliderCanvasElement || !this._canvasesOuterElement)\n            return;\n        this._mapCanvas.setProject(this._project);\n        if (this._canvasesOuterElement.childNodes.length === 0) {\n            this._mapCanvas.setCanvases(this._createCanvases(), this._secondaryCanvasElement);\n        }\n        this._coliderCanvas.setProject(this._project);\n        this._coliderCanvas.setCanvas(this._coliderCanvasElement, this._secondaryCanvasElement);\n        this._mapCanvas.setBrushFromName(this._brushName);\n        this._mapCanvas.setArrangementFromName(this._arrangementName);\n    }\n    setInactiveCanvasStyle() {\n        if (!this._canvasesOuterElement)\n            return;\n        this._canvasesOuterElement.childNodes.forEach((node, index) => {\n            const element = node;\n            if (this.activeLayer === index) {\n                element.style.opacity = '1.0';\n            }\n            else {\n                element.style.opacity = this._inactiveLayerOpacity.toString();\n            }\n        });\n    }\n    firstUpdated() {\n        var _a, _b, _c, _d;\n        const element = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.getElementById('boundary');\n        if (element)\n            this.cursorPositionCalculator.setElement(element);\n        this._secondaryCanvasElement = (_b = this.shadowRoot) === null || _b === void 0 ? void 0 : _b.getElementById('secondary-canvas');\n        this._coliderCanvasElement = (_c = this.shadowRoot) === null || _c === void 0 ? void 0 : _c.getElementById('colider-canvas');\n        this._canvasesOuterElement = (_d = this.shadowRoot) === null || _d === void 0 ? void 0 : _d.getElementById('canvases');\n        this.setupMapCanvas();\n    }\n    mouseMove(e) {\n        const mouseCursorPosition = this.cursorPositionCalculator.getMouseCursorPosition(e.pageX, e.pageY);\n        const cursor = this.currentEditorCanvas.mouseMove(mouseCursorPosition.x, mouseCursorPosition.y);\n        this.cursorChipX = cursor.x;\n        this.cursorChipY = cursor.y;\n    }\n    mouseDown(e) {\n        const mouseCursorPosition = this.cursorPositionCalculator.getMouseCursorPosition(e.pageX, e.pageY);\n        this.currentEditorCanvas.mouseDown(mouseCursorPosition.x, mouseCursorPosition.y);\n    }\n    mouseUp(e) {\n        const mouseCursorPosition = this.cursorPositionCalculator.getMouseCursorPosition(e.pageX, e.pageY);\n        this.currentEditorCanvas.mouseUp(mouseCursorPosition.x, mouseCursorPosition.y);\n    }\n    render() {\n        this.gridImageGenerator.setGridSize(this.gridWidth, this.gridHeight);\n        this.gridImageSrc = this.gridImageGenerator.generateLinePart().toDataURL();\n        return lit_element__WEBPACK_IMPORTED_MODULE_0__.html `\n      <style>\n        .grid {\n          background-image: url(\"${this.gridImageSrc}\");\n        }\n\n        #boundary {\n          width: ${this.width + 1}px;\n          height: ${this.height + 1}px;\n        }\n\n        .cursor {\n          width: ${this.gridWidth}px;\n          height: ${this.gridHeight}px;\n          left: ${this.cursorPosition.x}px;\n          top: ${this.cursorPosition.y}px;\n        }\n\n        .grid-image {\n          background-position: 1px 1px\n        }\n      </style>\n\n      <div id=\"boundary\">\n        <canvas\n          id=\"colider-canvas\"\n          width=\"${this.width}\"\n          height=\"${this.height}\"\n        ></canvas>\n        <div id=\"canvases\"></div>\n        <canvas\n          id=\"secondary-canvas\"\n          width=\"${this.width}\"\n          height=\"${this.height}\"\n        ></canvas>\n        <div\n          class=\"grid-image grid\"\n          @mousemove=\"${(e) => this.mouseMove(e)}\"\n          @mousedown=\"${(e) => this.mouseDown(e)}\"\n          @mouseup =\"${(e) => this.mouseUp(e)}\"\n        ></div>\n        <div class=\"cursor\"></div>\n      </div>\n    `;\n    }\n    static get styles() {\n        return lit_element__WEBPACK_IMPORTED_MODULE_0__.css `\n      .grid-image {\n        position: absolute;\n        top: 0;\n        left: 0;\n        background-repeat: repeat;\n        width: 100%;\n        height: 100%;\n      }\n\n      .cursor {\n        position: absolute;\n        border-style: solid;\n        box-sizing: border-box;\n        border-color: red;\n        pointer-events: none;\n      }\n\n      #canvases {\n        position: relative;\n      }\n\n      #canvases > canvas {\n        position: absolute;\n        top: 0;\n        left: 0;\n      }\n\n      #boundary {\n        position: relative;\n      }\n\n      #secondary-canvas, #colider-canvas {\n        pointer-events: none;\n        position: absolute;\n        top: 0;\n        left: 0;\n      }\n    `;\n    }\n}\n__decorate([\n    (0,lit_element__WEBPACK_IMPORTED_MODULE_0__.property)({ type: Number })\n], MapCanvasComponent.prototype, \"cursorChipX\", void 0);\n__decorate([\n    (0,lit_element__WEBPACK_IMPORTED_MODULE_0__.property)({ type: Number })\n], MapCanvasComponent.prototype, \"cursorChipY\", void 0);\n__decorate([\n    (0,lit_element__WEBPACK_IMPORTED_MODULE_0__.property)({ type: Number })\n], MapCanvasComponent.prototype, \"inactiveLayerOpacity\", null);\n__decorate([\n    (0,lit_element__WEBPACK_IMPORTED_MODULE_0__.property)({ type: Number })\n], MapCanvasComponent.prototype, \"projectId\", null);\n__decorate([\n    (0,lit_element__WEBPACK_IMPORTED_MODULE_0__.property)({ type: String })\n], MapCanvasComponent.prototype, \"brush\", null);\n__decorate([\n    (0,lit_element__WEBPACK_IMPORTED_MODULE_0__.property)({ type: String })\n], MapCanvasComponent.prototype, \"arrangement\", null);\n__decorate([\n    (0,lit_element__WEBPACK_IMPORTED_MODULE_0__.property)({ type: String })\n], MapCanvasComponent.prototype, \"mode\", null);\n__decorate([\n    (0,lit_element__WEBPACK_IMPORTED_MODULE_0__.property)({ type: Number })\n], MapCanvasComponent.prototype, \"autoTileId\", null);\n__decorate([\n    (0,lit_element__WEBPACK_IMPORTED_MODULE_0__.property)({ type: Object })\n], MapCanvasComponent.prototype, \"mapChipFragmentProperties\", null);\n__decorate([\n    (0,lit_element__WEBPACK_IMPORTED_MODULE_0__.property)({ type: String })\n], MapCanvasComponent.prototype, \"coliderType\", null);\n__decorate([\n    (0,lit_element__WEBPACK_IMPORTED_MODULE_0__.property)({ type: Number })\n], MapCanvasComponent.prototype, \"activeLayer\", null);\n\n\n/***/ }),\n/* 22 */\n/***/ ((module) => {\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse {}\n})(self, function() {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ([\n/* 0 */,\n/* 1 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_541__) => {\n\n__nested_webpack_require_541__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_541__.d(__webpack_exports__, {\n/* harmony export */   \"TiledMap\": () => (/* binding */ TiledMap)\n/* harmony export */ });\n/* harmony import */ var _MapChips__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_541__(2);\n/* harmony import */ var _AutoTile_AutoTiles__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_541__(3);\n/* harmony import */ var _MapData_TiledMapData__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_541__(5);\n/* harmony import */ var _MapData_ColiderMap__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_541__(7);\n\n\n\n\nclass TiledMap {\n    constructor(_chipCountX, _chipCountY, _chipWidth, _chipHeight) {\n        this._chipCountX = _chipCountX;\n        this._chipCountY = _chipCountY;\n        this._chipWidth = _chipWidth;\n        this._chipHeight = _chipHeight;\n        this._mapChipImages = new _MapChips__WEBPACK_IMPORTED_MODULE_0__.MapChipsCollection();\n        this._autoTiles = new _AutoTile_AutoTiles__WEBPACK_IMPORTED_MODULE_1__.AutoTiles();\n        this._datas = [];\n        this._coliders = new _MapData_ColiderMap__WEBPACK_IMPORTED_MODULE_3__.ColiderMap(this._chipCountX, this._chipCountY);\n        this.addLayer();\n    }\n    get chipWidth() {\n        return this._chipWidth;\n    }\n    get chipHeight() {\n        return this._chipHeight;\n    }\n    get chipCountX() {\n        return this._chipCountX;\n    }\n    get chipCountY() {\n        return this._chipCountY;\n    }\n    get mapChipsCollection() {\n        return this._mapChipImages;\n    }\n    get autoTiles() {\n        return this._autoTiles;\n    }\n    get datas() {\n        return this._datas;\n    }\n    get coliders() {\n        return this._coliders;\n    }\n    convertChipPositionToPixel(chipX, chipY) {\n        return {\n            x: chipX * this.chipWidth,\n            y: chipY * this.chipHeight\n        };\n    }\n    put(mapChip, chipX, chipY, index) {\n        this._datas[index].put(mapChip, chipX, chipY);\n    }\n    toObject() {\n        return {\n            chipCountX: this._chipCountX,\n            chipCountY: this._chipCountY,\n            chipWidth: this._chipWidth,\n            chipHeight: this._chipHeight,\n            mapChipImages: this._mapChipImages.toObject(),\n            autoTiles: this._autoTiles.toObject(),\n            tiledMapDatas: this._datas.map(data => data.toObject()),\n            coliders: this._coliders.toObject()\n        };\n    }\n    addLayer() {\n        this._datas.push(new _MapData_TiledMapData__WEBPACK_IMPORTED_MODULE_2__.TiledMapData(this._chipCountX, this._chipCountY));\n    }\n    convertMapNumberToPosition(num) {\n        return {\n            x: num % this._chipCountX,\n            y: Math.floor(num / this._chipCountX)\n        };\n    }\n    setSerializedProperties(val) {\n        this._mapChipImages.fromObject(val.mapChipImages);\n        this._autoTiles.fromObject(val.autoTiles);\n        this._datas = val.tiledMapDatas.map(tiledMapData => _MapData_TiledMapData__WEBPACK_IMPORTED_MODULE_2__.TiledMapData.fromObject(tiledMapData));\n        this._coliders = _MapData_ColiderMap__WEBPACK_IMPORTED_MODULE_3__.ColiderMap.fromObject(val.coliders);\n    }\n    static fromObject(val) {\n        const tiledMap = new TiledMap(val.chipCountX, val.chipCountY, val.chipWidth, val.chipHeight);\n        tiledMap.setSerializedProperties({ mapChipImages: val.mapChipImages, autoTiles: val.autoTiles, tiledMapDatas: val.tiledMapDatas, coliders: val.coliders });\n        return tiledMap;\n    }\n}\n\n\n/***/ }),\n/* 2 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_4102__) => {\n\n__nested_webpack_require_4102__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_4102__.d(__webpack_exports__, {\n/* harmony export */   \"MapChipImage\": () => (/* binding */ MapChipImage),\n/* harmony export */   \"MapChipsCollection\": () => (/* binding */ MapChipsCollection)\n/* harmony export */ });\nclass MapChipImage {\n    constructor(_src, _id) {\n        this._src = _src;\n        this._id = _id;\n        this._image = new Image();\n        this._hasImage = false;\n        this.loadImage();\n    }\n    get id() {\n        return this._id;\n    }\n    get src() {\n        return this._src;\n    }\n    get hasImage() {\n        return this._hasImage;\n    }\n    get image() {\n        return this._image;\n    }\n    getChipCount(chipWidth, chipHeight) {\n        if (!this._image)\n            throw new Error('Image loading is not complete.');\n        return {\n            width: Math.floor(this._image.width / chipWidth),\n            height: Math.floor(this._image.height / chipHeight)\n        };\n    }\n    _loadImageHandler() {\n        this._hasImage = true;\n    }\n    loadImage() {\n        this._image.onload = () => this._loadImageHandler();\n        this._image.src = this._src;\n    }\n    waitWhileLoading() {\n        const loadingPromise = new Promise(resolve => {\n            this._image.onload = () => {\n                this._loadImageHandler();\n                resolve();\n            };\n        });\n        if (this._hasImage)\n            return Promise.resolve();\n        return loadingPromise;\n    }\n    toObject() {\n        return {\n            id: this._id,\n            src: this._src\n        };\n    }\n    static fromObject(val) {\n        return new MapChipImage(val.src, val.id);\n    }\n}\nclass MapChipsCollection {\n    constructor() {\n        this._items = new Map();\n    }\n    push(item) {\n        this._items.set(item.id, item);\n    }\n    findById(chipId) {\n        return this._items.get(chipId) || null;\n    }\n    async waitWhileLoading() {\n        await Promise.all(Array.from(this._items.values()).map(item => item.waitWhileLoading()));\n    }\n    toObject() {\n        const objectedMapChipImage = [];\n        const valuesItr = this._items.values();\n        for (const val of valuesItr) {\n            objectedMapChipImage.push(val.toObject());\n        }\n        return {\n            items: objectedMapChipImage\n        };\n    }\n    fromObject(val) {\n        this._items.clear();\n        val.items.forEach(objectedVal => {\n            this.push(MapChipImage.fromObject(objectedVal));\n        });\n    }\n}\n\n\n/***/ }),\n/* 3 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_6710__) => {\n\n__nested_webpack_require_6710__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_6710__.d(__webpack_exports__, {\n/* harmony export */   \"AutoTile\": () => (/* binding */ AutoTile),\n/* harmony export */   \"AutoTiles\": () => (/* binding */ AutoTiles)\n/* harmony export */ });\n/* harmony import */ var _MapChip__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_6710__(4);\n\nclass AutoTile {\n    constructor(_mapChipFragments, _id) {\n        this._mapChipFragments = _mapChipFragments;\n        this._id = _id;\n    }\n    get id() {\n        return this._id;\n    }\n    get mapChipFragments() {\n        return this._mapChipFragments;\n    }\n    toObject() {\n        return {\n            id: this._id,\n            mapChipFragments: this._mapChipFragments.map(fragment => fragment.toObject())\n        };\n    }\n    static fromObject(val) {\n        return new AutoTile(val.mapChipFragments.map(fragment => _MapChip__WEBPACK_IMPORTED_MODULE_0__.MapChipFragment.fromObject(fragment)), val.id);\n    }\n}\nclass AutoTiles {\n    constructor() {\n        this._autoTiles = new Map();\n        this._maxId = 0;\n    }\n    get length() {\n        return this._autoTiles.size;\n    }\n    push(item) {\n        this._autoTiles.set(item.id, item);\n    }\n    fromId(id) {\n        return this._autoTiles.get(id) || null;\n    }\n    values() {\n        return this._autoTiles.values();\n    }\n    import(strategy) {\n        const mapChipFragmentGroups = strategy.getMapChipFragments();\n        mapChipFragmentGroups.forEach(group => {\n            const autoTile = new AutoTile(group, ++this._maxId);\n            this.push(autoTile);\n        });\n    }\n    toObject() {\n        const objectedAutoTiles = [];\n        const valuesItr = this._autoTiles.values();\n        for (const val of valuesItr) {\n            objectedAutoTiles.push(val.toObject());\n        }\n        return {\n            autoTiles: objectedAutoTiles\n        };\n    }\n    fromObject(val) {\n        this._autoTiles.clear();\n        val.autoTiles.forEach(objectedAutoTile => {\n            this.push(AutoTile.fromObject(objectedAutoTile));\n        });\n    }\n}\n\n\n/***/ }),\n/* 4 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_8885__) => {\n\n__nested_webpack_require_8885__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_8885__.d(__webpack_exports__, {\n/* harmony export */   \"MapChipFragment\": () => (/* binding */ MapChipFragment),\n/* harmony export */   \"MapChip\": () => (/* binding */ MapChip),\n/* harmony export */   \"isAutoTileMapChipProperties\": () => (/* binding */ isAutoTileMapChipProperties),\n/* harmony export */   \"AutoTileMapChip\": () => (/* binding */ AutoTileMapChip),\n/* harmony export */   \"isAutoTileMapChip\": () => (/* binding */ isAutoTileMapChip)\n/* harmony export */ });\nclass MapChipFragment {\n    constructor(_x, _y, _chipId, \n    /**\n     *  _renderingArea indicates the area where this map-chip is to be drawn.\n     *  It is represented by a OR of the following area-numbers.\n     *\n     * |<- 1chip ->|\n     * *-----*-----* ---\n     * |  1  |  2  |  ↑\n     * *-----*-----* 1chip\n     * |  4  |  8  |  ↓\n     * *-----*-----* ---\n     */\n    _renderingArea = 15) {\n        this._x = _x;\n        this._y = _y;\n        this._chipId = _chipId;\n        this._renderingArea = _renderingArea;\n        this._identifyKey = '';\n        this._identifyKey = `${_x},${_y},${_chipId}`;\n    }\n    get x() {\n        return this._x;\n    }\n    get y() {\n        return this._y;\n    }\n    get chipId() {\n        return this._chipId;\n    }\n    get identifyKey() {\n        return this._identifyKey;\n    }\n    get renderingArea() {\n        return this._renderingArea;\n    }\n    withParameter(parameters) {\n        if (parameters.x)\n            this._x = parameters.x;\n        if (parameters.y)\n            this._y = parameters.y;\n        if (parameters.renderingArea)\n            this._renderingArea = parameters.renderingArea;\n        return this;\n    }\n    clone() {\n        return new MapChipFragment(this._x, this._y, this._chipId);\n    }\n    compare(others) {\n        return this.identifyKey === others.identifyKey;\n    }\n    toObject() {\n        return {\n            x: this._x,\n            y: this._y,\n            chipId: this._chipId,\n            renderingArea: this._renderingArea\n        };\n    }\n    static fromObject(val) {\n        return new MapChipFragment(val.x, val.y, val.chipId, val.renderingArea);\n    }\n}\nclass MapChip {\n    constructor(_items = [], _arrangementName = '') {\n        this._items = _items;\n        this._arrangementName = _arrangementName;\n        this._identifyKey = '';\n        this._buildIdentifyKey();\n    }\n    get items() {\n        return this._items;\n    }\n    get identifyKey() {\n        return this._identifyKey;\n    }\n    get length() {\n        return this._items.length;\n    }\n    get arrangementName() {\n        return this._arrangementName;\n    }\n    _buildIdentifyKey() {\n        this._identifyKey = this._items.map(item => item.identifyKey).join('|');\n    }\n    setArrangementName(name) {\n        this._arrangementName = name;\n    }\n    push(mapChip) {\n        this._items.push(mapChip);\n        this._buildIdentifyKey();\n    }\n    clear() {\n        this._items.length = 0;\n        this._buildIdentifyKey();\n    }\n    clone() {\n        const cloned = new MapChip();\n        cloned._items = this._items.map(mapChip => mapChip.clone());\n        return cloned;\n    }\n    compare(others) {\n        return this.identifyKey === others.identifyKey;\n    }\n    toObject() {\n        return {\n            items: this._items.map(item => item.toObject()),\n            arrangementName: this._arrangementName\n        };\n    }\n    static fromObject(val) {\n        return new MapChip(val.items.map(item => MapChipFragment.fromObject(item)), val.arrangementName);\n    }\n}\nfunction isAutoTileMapChipProperties(obj) {\n    return obj &&\n        typeof obj.autoTileId === 'number' &&\n        obj.boundary !== undefined &&\n        obj.cross !== undefined;\n}\nclass AutoTileMapChip extends MapChip {\n    constructor(_autoTileId, items = [], _arrangementName = '', _boundary = {\n        top: false,\n        bottom: false,\n        left: false,\n        right: false\n    }, _cross = {\n        topLeft: false,\n        topRight: false,\n        bottomLeft: false,\n        bottomRight: false\n    }) {\n        super(items, _arrangementName);\n        this._autoTileId = _autoTileId;\n        this._boundary = _boundary;\n        this._cross = _cross;\n    }\n    get boundary() {\n        return this._boundary;\n    }\n    get cross() {\n        return this._cross;\n    }\n    get autoTileId() {\n        return this._autoTileId;\n    }\n    setBoundary(boundary) {\n        this._boundary = boundary;\n    }\n    setCross(cross) {\n        this._cross = cross;\n    }\n    toObject() {\n        return {\n            ...super.toObject(),\n            boundary: this._boundary,\n            cross: this._cross,\n            autoTileId: this._autoTileId\n        };\n    }\n    static fromObject(val) {\n        return new AutoTileMapChip(val.autoTileId, val.items.map(item => MapChipFragment.fromObject(item)), val.arrangementName, val.boundary, val.cross);\n    }\n}\nfunction isAutoTileMapChip(obj) {\n    return obj &&\n        typeof obj.boundary === 'object' &&\n        typeof obj.cross === 'object';\n}\n\n\n/***/ }),\n/* 5 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_14040__) => {\n\n__nested_webpack_require_14040__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_14040__.d(__webpack_exports__, {\n/* harmony export */   \"TiledMapData\": () => (/* binding */ TiledMapData)\n/* harmony export */ });\n/* harmony import */ var _MapChip__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_14040__(4);\n/* harmony import */ var _MapMatrix__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_14040__(6);\n\n\nclass TiledMapData extends _MapMatrix__WEBPACK_IMPORTED_MODULE_1__.MapMatrix {\n    filter(needles) {\n        const filtered = this._items.map(chip => needles.some(needle => !!chip && needle.compare(chip)) ? chip : null);\n        return new TiledMapData(this.width, this.height, filtered);\n    }\n    toObject() {\n        return {\n            chipCountX: this._chipCountX,\n            chipCountY: this._chipCountY,\n            mapData: this._items.map(data => (data === null || data === void 0 ? void 0 : data.toObject()) || null)\n        };\n    }\n    static fromObject(val) {\n        const mapData = val.mapData.map(data => {\n            if (!data)\n                return null;\n            if ((0,_MapChip__WEBPACK_IMPORTED_MODULE_0__.isAutoTileMapChipProperties)(data)) {\n                return _MapChip__WEBPACK_IMPORTED_MODULE_0__.AutoTileMapChip.fromObject(data);\n            }\n            return _MapChip__WEBPACK_IMPORTED_MODULE_0__.MapChip.fromObject(data);\n        });\n        return new TiledMapData(val.chipCountX, val.chipCountY, mapData);\n    }\n}\n\n\n/***/ }),\n/* 6 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_15590__) => {\n\n__nested_webpack_require_15590__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_15590__.d(__webpack_exports__, {\n/* harmony export */   \"MapMatrix\": () => (/* binding */ MapMatrix)\n/* harmony export */ });\nclass MapMatrix {\n    constructor(_chipCountX, _chipCountY, _items = []) {\n        this._chipCountX = _chipCountX;\n        this._chipCountY = _chipCountY;\n        this._items = _items;\n        if (this._items.length > 0 && this.size !== this._items.length) {\n            throw new Error();\n        }\n        if (this._items.length === 0)\n            this.allocate();\n    }\n    get size() {\n        return this._chipCountX * this._chipCountY;\n    }\n    get width() {\n        return this._chipCountX;\n    }\n    get height() {\n        return this._chipCountY;\n    }\n    get items() {\n        return this._items;\n    }\n    set(items) {\n        if (items.length !== this._items.length)\n            throw new Error();\n        this._items = items;\n    }\n    transferFromTiledMapData(src, srcX, srcY, width, height, destX, destY) {\n        for (let x = 0; x < width; x++) {\n            const putX = destX + x;\n            const pickupX = srcX + x;\n            if (putX < 0 || putX >= this.width)\n                continue;\n            if (pickupX < 0 || pickupX >= src.width)\n                continue;\n            for (let y = 0; y < height; y++) {\n                const putY = destY + y;\n                const pickupY = srcY + y;\n                if (putY < 0 || putY >= this.height)\n                    continue;\n                if (pickupY < 0 || pickupY >= src.height)\n                    continue;\n                const item = src.getFromChipPosition(pickupX, pickupY);\n                this.put(item, putX, putY);\n            }\n        }\n    }\n    getFromChipPosition(x, y) {\n        if ((x < 0) || (y < 0) || (x >= this._chipCountX) || (y >= this._chipCountY))\n            throw new Error('The position is out of range.');\n        const mapNumber = this.convertPositionToMapNumber(x, y);\n        return this._items[mapNumber];\n    }\n    put(item, x, y) {\n        const mapNumber = this.convertPositionToMapNumber(x, y);\n        this._items[mapNumber] = item;\n    }\n    convertPositionToMapNumber(x, y) {\n        return y * this._chipCountX + x;\n    }\n    allocate(defaultValue = null) {\n        this._items = new Array(this._chipCountY * this._chipCountX).fill(null);\n    }\n}\n\n\n/***/ }),\n/* 7 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_18066__) => {\n\n__nested_webpack_require_18066__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_18066__.d(__webpack_exports__, {\n/* harmony export */   \"ColiderMap\": () => (/* binding */ ColiderMap)\n/* harmony export */ });\n/* harmony import */ var _MapMatrix__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_18066__(6);\n\nclass ColiderMap extends _MapMatrix__WEBPACK_IMPORTED_MODULE_0__.MapMatrix {\n    toObject() {\n        return {\n            chipCountX: this._chipCountX,\n            chipCountY: this._chipCountY,\n            coliders: this._items\n        };\n    }\n    static fromObject(val) {\n        return new ColiderMap(val.chipCountX, val.chipCountY, val.coliders);\n    }\n    allocate() {\n        super.allocate('none');\n    }\n}\n\n\n/***/ }),\n/* 8 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_18879__) => {\n\n__nested_webpack_require_18879__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_18879__.d(__webpack_exports__, {\n/* harmony export */   \"DefaultAutoTileImportStrategy\": () => (/* binding */ DefaultAutoTileImportStrategy)\n/* harmony export */ });\n/* harmony import */ var _MapChip__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_18879__(4);\n\nclass DefaultAutoTileImportStrategy {\n    constructor(_mapChipImage, _chipWidth, _chipHeight) {\n        this._mapChipImage = _mapChipImage;\n        this._chipWidth = _chipWidth;\n        this._chipHeight = _chipHeight;\n    }\n    getMapChipFragments() {\n        const countX = Math.floor(this._mapChipImage.image.width / this._chipWidth);\n        const countY = Math.floor(this._mapChipImage.image.height / this._chipHeight);\n        const mapChipFragmentGroups = [];\n        for (let y = 0; y < countY; y += 5) {\n            for (let x = 0; x < countX; x++) {\n                const mapChipFragments = [];\n                mapChipFragments.push(new _MapChip__WEBPACK_IMPORTED_MODULE_0__.MapChipFragment(x, y, this._mapChipImage.id));\n                mapChipFragments.push(new _MapChip__WEBPACK_IMPORTED_MODULE_0__.MapChipFragment(x, y + 1, this._mapChipImage.id));\n                mapChipFragments.push(new _MapChip__WEBPACK_IMPORTED_MODULE_0__.MapChipFragment(x, y + 2, this._mapChipImage.id));\n                mapChipFragments.push(new _MapChip__WEBPACK_IMPORTED_MODULE_0__.MapChipFragment(x, y + 3, this._mapChipImage.id));\n                mapChipFragments.push(new _MapChip__WEBPACK_IMPORTED_MODULE_0__.MapChipFragment(x, y + 4, this._mapChipImage.id));\n                mapChipFragmentGroups.push(mapChipFragments);\n            }\n        }\n        return mapChipFragmentGroups;\n    }\n}\n\n\n/***/ }),\n/* 9 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_20700__) => {\n\n__nested_webpack_require_20700__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_20700__.d(__webpack_exports__, {\n/* harmony export */   \"MapRenderer\": () => (/* binding */ MapRenderer)\n/* harmony export */ });\nclass MapRenderer {\n    constructor(_tiledMap) {\n        this._tiledMap = _tiledMap;\n        this._backgroundRgba = { r: 255, g: 255, b: 255, a: 1.0 };\n    }\n    setTiledMap(tiledMap) {\n        this._tiledMap = tiledMap;\n    }\n    renderAll(ctx) {\n        this._tiledMap.datas.forEach(data => this.render(data, ctx));\n    }\n    renderLayer(index, ctx) {\n        this.render(this._tiledMap.datas[index], ctx);\n    }\n    render(data, ctx) {\n        data.items.forEach((value, index) => {\n            const position = this._tiledMap.convertMapNumberToPosition(index);\n            this.putOrClearChipToCanvas(ctx, value, position.x, position.y);\n        });\n    }\n    putOrClearChipToCanvas(ctx, mapChip, chipX, chipY, isTemporaryRendering = false) {\n        if (!mapChip) {\n            this._clearChipToCanvas(ctx, chipX, chipY, isTemporaryRendering);\n        }\n        else {\n            mapChip.items.forEach(item => {\n                this._putChipToCanvas(ctx, item, chipX, chipY);\n            });\n        }\n    }\n    _clearChipToCanvas(ctx, chipX, chipY, isTemporaryRendering) {\n        const position = this._tiledMap.convertChipPositionToPixel(chipX, chipY);\n        ctx.clearRect(position.x, position.y, this._tiledMap.chipWidth, this._tiledMap.chipHeight);\n        if (isTemporaryRendering) {\n            ctx.fillStyle = `rgba(${this._backgroundRgba.r},${this._backgroundRgba.g},${this._backgroundRgba.b},${this._backgroundRgba.a})`;\n            ctx.fillRect(position.x, position.y, this._tiledMap.chipWidth, this._tiledMap.chipHeight);\n        }\n    }\n    _putChipToCanvas(ctx, mapChip, chipX, chipY) {\n        const mapChips = this._tiledMap.mapChipsCollection.findById(mapChip.chipId);\n        const image = mapChips === null || mapChips === void 0 ? void 0 : mapChips.image;\n        if (!image)\n            return;\n        const renderingArea = this._getRenderingArea(mapChip);\n        const position = this._tiledMap.convertChipPositionToPixel(chipX, chipY);\n        position.x += renderingArea.destOffsetX;\n        position.y += renderingArea.destOffsetY;\n        ctx.clearRect(position.x, position.y, renderingArea.width, renderingArea.height);\n        ctx.drawImage(image, renderingArea.x, renderingArea.y, renderingArea.width, renderingArea.height, position.x, position.y, renderingArea.width, renderingArea.height);\n    }\n    _getRenderingArea(mapChip) {\n        const width = this._tiledMap.chipWidth;\n        const height = this._tiledMap.chipHeight;\n        const x = mapChip.x * width;\n        const y = mapChip.y * height;\n        if (mapChip.renderingArea === 15) {\n            return { x, y, width, height, destOffsetX: 0, destOffsetY: 0 };\n        }\n        const halfWidth = Math.round(width / 2);\n        const halfHeight = Math.round(height / 2);\n        switch (mapChip.renderingArea) {\n            case 1:\n                return { x, y, width: halfWidth, height: halfHeight, destOffsetX: 0, destOffsetY: 0 };\n            case 2:\n                return { x: x + halfWidth, y, width: halfWidth, height: halfHeight, destOffsetX: halfWidth, destOffsetY: 0 };\n            case 3:\n                return { x, y, width, height: halfHeight, destOffsetX: 0, destOffsetY: 0 };\n            case 4:\n                return { x, y: y + halfHeight, width: halfWidth, height: halfHeight, destOffsetX: 0, destOffsetY: halfHeight };\n            case 5:\n                return { x, y, width: halfWidth, height, destOffsetX: 0, destOffsetY: 0 };\n            case 8:\n                return { x: x + halfWidth, y: y + halfHeight, width: halfWidth, height: halfHeight, destOffsetX: halfWidth, destOffsetY: halfHeight };\n            case 10:\n                return { x: x + halfWidth, y, width: halfWidth, height, destOffsetX: halfWidth, destOffsetY: 0 };\n            case 12:\n                return { x, y: y + halfHeight, width, height: halfHeight, destOffsetX: 0, destOffsetY: halfHeight };\n        }\n    }\n}\n\n\n/***/ })\n/******/ \t]);\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_25080__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __nested_webpack_require_25080__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__nested_webpack_require_25080__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__nested_webpack_require_25080__.o(definition, key) && !__nested_webpack_require_25080__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__nested_webpack_require_25080__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__nested_webpack_require_25080__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n(() => {\n__nested_webpack_require_25080__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_25080__.d(__webpack_exports__, {\n/* harmony export */   \"TiledMap\": () => (/* reexport safe */ _TiledMap__WEBPACK_IMPORTED_MODULE_0__.TiledMap),\n/* harmony export */   \"TiledMapData\": () => (/* reexport safe */ _MapData_TiledMapData__WEBPACK_IMPORTED_MODULE_1__.TiledMapData),\n/* harmony export */   \"MapChipImage\": () => (/* reexport safe */ _MapChips__WEBPACK_IMPORTED_MODULE_2__.MapChipImage),\n/* harmony export */   \"MapChipsCollection\": () => (/* reexport safe */ _MapChips__WEBPACK_IMPORTED_MODULE_2__.MapChipsCollection),\n/* harmony export */   \"MapChipFragment\": () => (/* reexport safe */ _MapChip__WEBPACK_IMPORTED_MODULE_3__.MapChipFragment),\n/* harmony export */   \"MapChip\": () => (/* reexport safe */ _MapChip__WEBPACK_IMPORTED_MODULE_3__.MapChip),\n/* harmony export */   \"AutoTileMapChip\": () => (/* reexport safe */ _MapChip__WEBPACK_IMPORTED_MODULE_3__.AutoTileMapChip),\n/* harmony export */   \"isAutoTileMapChip\": () => (/* reexport safe */ _MapChip__WEBPACK_IMPORTED_MODULE_3__.isAutoTileMapChip),\n/* harmony export */   \"AutoTiles\": () => (/* reexport safe */ _AutoTile_AutoTiles__WEBPACK_IMPORTED_MODULE_4__.AutoTiles),\n/* harmony export */   \"AutoTile\": () => (/* reexport safe */ _AutoTile_AutoTiles__WEBPACK_IMPORTED_MODULE_4__.AutoTile),\n/* harmony export */   \"DefaultAutoTileImportStrategy\": () => (/* reexport safe */ _AutoTile_DefaultAutoTileImportStrategy__WEBPACK_IMPORTED_MODULE_5__.DefaultAutoTileImportStrategy),\n/* harmony export */   \"ColiderMap\": () => (/* reexport safe */ _MapData_ColiderMap__WEBPACK_IMPORTED_MODULE_6__.ColiderMap),\n/* harmony export */   \"MapRenderer\": () => (/* reexport safe */ _MapRenderer__WEBPACK_IMPORTED_MODULE_7__.MapRenderer)\n/* harmony export */ });\n/* harmony import */ var _TiledMap__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_25080__(1);\n/* harmony import */ var _MapData_TiledMapData__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_25080__(5);\n/* harmony import */ var _MapChips__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_25080__(2);\n/* harmony import */ var _MapChip__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_25080__(4);\n/* harmony import */ var _AutoTile_AutoTiles__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_25080__(3);\n/* harmony import */ var _AutoTile_DefaultAutoTileImportStrategy__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_25080__(8);\n/* harmony import */ var _MapData_ColiderMap__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_25080__(7);\n/* harmony import */ var _MapRenderer__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_25080__(9);\n\n\n\n\n\n\n\n\n\n})();\n\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});\n//# sourceMappingURL=main.js.map\n\n/***/ }),\n/* 23 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_292357__) => {\n\n\"use strict\";\n__nested_webpack_require_292357__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_292357__.d(__webpack_exports__, {\n/* harmony export */   \"AutoTileSelectorComponent\": () => (/* binding */ AutoTileSelectorComponent)\n/* harmony export */ });\n/* harmony import */ var lit_element__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_292357__(2);\n/* harmony import */ var _Helpers_CursorPositionCalculator__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_292357__(20);\n/* harmony import */ var _piyoppi_pico2map_editor__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_292357__(19);\n/* harmony import */ var _piyoppi_pico2map_editor__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__nested_webpack_require_292357__.n(_piyoppi_pico2map_editor__WEBPACK_IMPORTED_MODULE_2__);\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\nclass AutoTileSelectorComponent extends lit_element__WEBPACK_IMPORTED_MODULE_0__.LitElement {\n    constructor() {\n        super(...arguments);\n        this._gridImageSrc = '';\n        this.gridImageGenerator = new _piyoppi_pico2map_editor__WEBPACK_IMPORTED_MODULE_2__.GridImageGenerator();\n        this.cursorPositionCalculator = new _Helpers_CursorPositionCalculator__WEBPACK_IMPORTED_MODULE_1__.CursorPositionCalculator();\n        this._project = null;\n        this._indexImage = document.createElement('canvas');\n        this._autoTileSelector = null;\n        this._projectId = -1;\n        this.cursorChipX = 0;\n        this.cursorChipY = 0;\n        this.selectedChipY = 0;\n        this.selectedChipX = 0;\n        this.width = 192;\n        this.indexImageSrc = '';\n    }\n    get projectId() {\n        return this._projectId;\n    }\n    set projectId(value) {\n        const oldValue = this._projectId;\n        this._projectId = value;\n        this._project = _piyoppi_pico2map_editor__WEBPACK_IMPORTED_MODULE_2__.Projects.fromProjectId(value);\n        this.setupMapChipSelector();\n        this.requestUpdate('projectId', oldValue);\n    }\n    get gridWidth() {\n        var _a;\n        return ((_a = this._project) === null || _a === void 0 ? void 0 : _a.tiledMap.chipWidth) || 0;\n    }\n    get gridHeight() {\n        var _a;\n        return ((_a = this._project) === null || _a === void 0 ? void 0 : _a.tiledMap.chipHeight) || 0;\n    }\n    get cursorPosition() {\n        return {\n            x: this.cursorChipX * this.gridWidth,\n            y: this.cursorChipY * this.gridHeight\n        };\n    }\n    get selectedPosition() {\n        return {\n            x: this.selectedChipX * this.gridWidth,\n            y: this.selectedChipY * this.gridHeight\n        };\n    }\n    setupMapChipSelector() {\n        if (!this._project)\n            return;\n        this._autoTileSelector = new _piyoppi_pico2map_editor__WEBPACK_IMPORTED_MODULE_2__.AutoTileSelector(this.width, this._project.tiledMap.chipWidth, this._project.tiledMap.chipHeight, this._project.tiledMap.autoTiles, this._project.tiledMap.mapChipsCollection);\n        const imageSize = this._autoTileSelector.getSizeOfIndexImage();\n        this._indexImage.width = imageSize.width;\n        this._indexImage.height = imageSize.height;\n        this._autoTileSelector.generateIndexImage(this._indexImage);\n        this.indexImageSrc = this._indexImage.toDataURL();\n    }\n    mouseMove(e) {\n        if (!this._autoTileSelector)\n            return;\n        const mouseCursorPosition = this.cursorPositionCalculator.getMouseCursorPosition(e.pageX, e.pageY);\n        const position = this._autoTileSelector.convertFromIndexImageToChipPosition(mouseCursorPosition.x, mouseCursorPosition.y);\n        this.cursorChipX = position.x;\n        this.cursorChipY = position.y;\n    }\n    mouseDown(e) {\n        if (!this._project || !this._autoTileSelector)\n            return;\n        const mouseCursorPosition = this.cursorPositionCalculator.getMouseCursorPosition(e.pageX, e.pageY);\n        const selectedAutoTile = this._autoTileSelector.getAutoTileFragmentFromIndexImagePosition(mouseCursorPosition.x, mouseCursorPosition.y);\n        if (!selectedAutoTile)\n            return;\n        this.selectedChipX = Math.floor(mouseCursorPosition.x / this._project.tiledMap.chipWidth);\n        this.selectedChipY = Math.floor(mouseCursorPosition.y / this._project.tiledMap.chipHeight);\n        this.dispatchEvent(new CustomEvent('autotile-selected', {\n            detail: { id: selectedAutoTile.id },\n            bubbles: true,\n            composed: true\n        }));\n    }\n    firstUpdated() {\n        var _a;\n        const element = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.getElementById('boundary');\n        if (element)\n            this.cursorPositionCalculator.setElement(element);\n    }\n    render() {\n        this.gridImageGenerator.setGridSize(this.gridWidth, this.gridHeight);\n        if (this.gridImageGenerator.changed) {\n            this._gridImageSrc = this.gridImageGenerator.generateLinePart().toDataURL();\n        }\n        const cursorWidth = this.gridWidth;\n        const cursorHeight = this.gridHeight;\n        return lit_element__WEBPACK_IMPORTED_MODULE_0__.html `\n      <style>\n        .grid {\n          background-image: url(\"${this._gridImageSrc}\");\n          width: ${this._indexImage.width}px;\n          height: ${this._indexImage.height}px;\n        }\n\n        .cursor {\n          width: ${cursorWidth}px;\n          height: ${cursorHeight}px;\n          left: ${this.cursorPosition.x}px;\n          top: ${this.cursorPosition.y}px;\n        }\n\n        .selected {\n          width: ${cursorWidth}px;\n          height: ${cursorHeight}px;\n          left: ${this.selectedPosition.x}px;\n          top: ${this.selectedPosition.y}px;\n        }\n      </style>\n\n      <div id=\"boundary\">\n        <img id=\"chip-image\" src=\"${this.indexImageSrc}\">\n        <div\n          class=\"grid-image grid\"\n          @mousemove=\"${(e) => this.mouseMove(e)}\"\n          @mousedown=\"${(e) => this.mouseDown(e)}\"\n        ></div>\n        <div class=\"cursor\"></div>\n        <div class=\"selected\"></div>\n      </div>\n    `;\n    }\n    static get styles() {\n        return lit_element__WEBPACK_IMPORTED_MODULE_0__.css `\n      .grid-image {\n        position: absolute;\n        top: 0;\n        left: 0;\n        background-repeat: repeat;\n      }\n\n      .cursor, .selected {\n        position: absolute;\n        border-style: solid;\n        box-sizing: border-box;\n      }\n\n      .cursor {\n        border-color: red;\n        pointer-events: none;\n      }\n\n      .selected {\n        border-color: blue;\n        pointer-events: none;\n      }\n\n      #boundary {\n        position: relative;\n      }\n\n      #chip-image {\n        display: block;\n      }\n    `;\n    }\n}\nAutoTileSelectorComponent.Format = {\n    width: 1,\n    height: 5\n};\n__decorate([\n    (0,lit_element__WEBPACK_IMPORTED_MODULE_0__.property)({ type: Number })\n], AutoTileSelectorComponent.prototype, \"projectId\", null);\n__decorate([\n    (0,lit_element__WEBPACK_IMPORTED_MODULE_0__.property)({ type: Number })\n], AutoTileSelectorComponent.prototype, \"cursorChipX\", void 0);\n__decorate([\n    (0,lit_element__WEBPACK_IMPORTED_MODULE_0__.property)({ type: Number })\n], AutoTileSelectorComponent.prototype, \"cursorChipY\", void 0);\n__decorate([\n    (0,lit_element__WEBPACK_IMPORTED_MODULE_0__.property)({ type: Number })\n], AutoTileSelectorComponent.prototype, \"selectedChipY\", void 0);\n__decorate([\n    (0,lit_element__WEBPACK_IMPORTED_MODULE_0__.property)({ type: Number })\n], AutoTileSelectorComponent.prototype, \"selectedChipX\", void 0);\n__decorate([\n    (0,lit_element__WEBPACK_IMPORTED_MODULE_0__.property)({ type: Number })\n], AutoTileSelectorComponent.prototype, \"width\", void 0);\n__decorate([\n    (0,lit_element__WEBPACK_IMPORTED_MODULE_0__.property)({ type: String })\n], AutoTileSelectorComponent.prototype, \"indexImageSrc\", void 0);\n\n\n/***/ }),\n/* 24 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_300718__) => {\n\n\"use strict\";\n__nested_webpack_require_300718__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_300718__.d(__webpack_exports__, {\n/* harmony export */   \"MapChipSelectedEvent\": () => (/* binding */ MapChipSelectedEvent),\n/* harmony export */   \"AutoTileSelectedEvent\": () => (/* binding */ AutoTileSelectedEvent)\n/* harmony export */ });\nclass MapChipSelectedEvent extends CustomEvent {\n    constructor(detail) {\n        super('mapchip-selected', { detail });\n    }\n}\nclass AutoTileSelectedEvent extends CustomEvent {\n    constructor(detail) {\n        super('autotile-selected', { detail });\n    }\n}\n\n\n/***/ })\n/******/ \t]);\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_301569__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __nested_webpack_require_301569__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t(() => {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__nested_webpack_require_301569__.n = (module) => {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\t() => (module['default']) :\n/******/ \t\t\t\t() => (module);\n/******/ \t\t\t__nested_webpack_require_301569__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__nested_webpack_require_301569__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__nested_webpack_require_301569__.o(definition, key) && !__nested_webpack_require_301569__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__nested_webpack_require_301569__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__nested_webpack_require_301569__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be in strict mode.\n(() => {\n\"use strict\";\n__nested_webpack_require_301569__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_301569__.d(__webpack_exports__, {\n/* harmony export */   \"defineComponent\": () => (/* binding */ defineComponent),\n/* harmony export */   \"Projects\": () => (/* reexport safe */ _piyoppi_pico2map_editor__WEBPACK_IMPORTED_MODULE_3__.Projects),\n/* harmony export */   \"MapChipSelectedEvent\": () => (/* reexport safe */ _Events__WEBPACK_IMPORTED_MODULE_4__.MapChipSelectedEvent),\n/* harmony export */   \"AutoTileSelectedEvent\": () => (/* reexport safe */ _Events__WEBPACK_IMPORTED_MODULE_4__.AutoTileSelectedEvent)\n/* harmony export */ });\n/* harmony import */ var _MapChipSelectorComponent__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_301569__(1);\n/* harmony import */ var _MapCanvasComponent__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_301569__(21);\n/* harmony import */ var _AutoTileSelectorComponent__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_301569__(23);\n/* harmony import */ var _piyoppi_pico2map_editor__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_301569__(19);\n/* harmony import */ var _piyoppi_pico2map_editor__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__nested_webpack_require_301569__.n(_piyoppi_pico2map_editor__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _Events__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_301569__(24);\n\n\n\nfunction defineComponent() {\n    customElements.define('map-canvas-component', _MapCanvasComponent__WEBPACK_IMPORTED_MODULE_1__.MapCanvasComponent);\n    customElements.define('auto-tile-selector-component', _AutoTileSelectorComponent__WEBPACK_IMPORTED_MODULE_2__.AutoTileSelectorComponent);\n    customElements.define('map-chip-selector-component', _MapChipSelectorComponent__WEBPACK_IMPORTED_MODULE_0__.MapChipSelectorComponent);\n}\n\n\n\n})();\n\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});\n\n//# sourceURL=webpack://@piyoppi/pico2map-samples/../map-editor-components/dist/main.js?");

/***/ }),

/***/ "../tiled-map/dist/main.js":
/*!*********************************!*\
  !*** ../tiled-map/dist/main.js ***!
  \*********************************/
/***/ ((module) => {

eval("(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse {}\n})(self, function() {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ([\n/* 0 */,\n/* 1 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_541__) => {\n\n__nested_webpack_require_541__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_541__.d(__webpack_exports__, {\n/* harmony export */   \"TiledMap\": () => (/* binding */ TiledMap)\n/* harmony export */ });\n/* harmony import */ var _MapChips__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_541__(2);\n/* harmony import */ var _AutoTile_AutoTiles__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_541__(3);\n/* harmony import */ var _MapData_TiledMapData__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_541__(5);\n/* harmony import */ var _MapData_ColiderMap__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_541__(7);\n\n\n\n\nclass TiledMap {\n    constructor(_chipCountX, _chipCountY, _chipWidth, _chipHeight) {\n        this._chipCountX = _chipCountX;\n        this._chipCountY = _chipCountY;\n        this._chipWidth = _chipWidth;\n        this._chipHeight = _chipHeight;\n        this._mapChipImages = new _MapChips__WEBPACK_IMPORTED_MODULE_0__.MapChipsCollection();\n        this._autoTiles = new _AutoTile_AutoTiles__WEBPACK_IMPORTED_MODULE_1__.AutoTiles();\n        this._datas = [];\n        this._coliders = new _MapData_ColiderMap__WEBPACK_IMPORTED_MODULE_3__.ColiderMap(this._chipCountX, this._chipCountY);\n        this.addLayer();\n    }\n    get chipWidth() {\n        return this._chipWidth;\n    }\n    get chipHeight() {\n        return this._chipHeight;\n    }\n    get chipCountX() {\n        return this._chipCountX;\n    }\n    get chipCountY() {\n        return this._chipCountY;\n    }\n    get mapChipsCollection() {\n        return this._mapChipImages;\n    }\n    get autoTiles() {\n        return this._autoTiles;\n    }\n    get datas() {\n        return this._datas;\n    }\n    get coliders() {\n        return this._coliders;\n    }\n    convertChipPositionToPixel(chipX, chipY) {\n        return {\n            x: chipX * this.chipWidth,\n            y: chipY * this.chipHeight\n        };\n    }\n    put(mapChip, chipX, chipY, index) {\n        this._datas[index].put(mapChip, chipX, chipY);\n    }\n    toObject() {\n        return {\n            chipCountX: this._chipCountX,\n            chipCountY: this._chipCountY,\n            chipWidth: this._chipWidth,\n            chipHeight: this._chipHeight,\n            mapChipImages: this._mapChipImages.toObject(),\n            autoTiles: this._autoTiles.toObject(),\n            tiledMapDatas: this._datas.map(data => data.toObject()),\n            coliders: this._coliders.toObject()\n        };\n    }\n    addLayer() {\n        this._datas.push(new _MapData_TiledMapData__WEBPACK_IMPORTED_MODULE_2__.TiledMapData(this._chipCountX, this._chipCountY));\n    }\n    convertMapNumberToPosition(num) {\n        return {\n            x: num % this._chipCountX,\n            y: Math.floor(num / this._chipCountX)\n        };\n    }\n    setSerializedProperties(val) {\n        this._mapChipImages.fromObject(val.mapChipImages);\n        this._autoTiles.fromObject(val.autoTiles);\n        this._datas = val.tiledMapDatas.map(tiledMapData => _MapData_TiledMapData__WEBPACK_IMPORTED_MODULE_2__.TiledMapData.fromObject(tiledMapData));\n        this._coliders = _MapData_ColiderMap__WEBPACK_IMPORTED_MODULE_3__.ColiderMap.fromObject(val.coliders);\n    }\n    static fromObject(val) {\n        const tiledMap = new TiledMap(val.chipCountX, val.chipCountY, val.chipWidth, val.chipHeight);\n        tiledMap.setSerializedProperties({ mapChipImages: val.mapChipImages, autoTiles: val.autoTiles, tiledMapDatas: val.tiledMapDatas, coliders: val.coliders });\n        return tiledMap;\n    }\n}\n\n\n/***/ }),\n/* 2 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_4102__) => {\n\n__nested_webpack_require_4102__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_4102__.d(__webpack_exports__, {\n/* harmony export */   \"MapChipImage\": () => (/* binding */ MapChipImage),\n/* harmony export */   \"MapChipsCollection\": () => (/* binding */ MapChipsCollection)\n/* harmony export */ });\nclass MapChipImage {\n    constructor(_src, _id) {\n        this._src = _src;\n        this._id = _id;\n        this._image = new Image();\n        this._hasImage = false;\n        this.loadImage();\n    }\n    get id() {\n        return this._id;\n    }\n    get src() {\n        return this._src;\n    }\n    get hasImage() {\n        return this._hasImage;\n    }\n    get image() {\n        return this._image;\n    }\n    getChipCount(chipWidth, chipHeight) {\n        if (!this._image)\n            throw new Error('Image loading is not complete.');\n        return {\n            width: Math.floor(this._image.width / chipWidth),\n            height: Math.floor(this._image.height / chipHeight)\n        };\n    }\n    _loadImageHandler() {\n        this._hasImage = true;\n    }\n    loadImage() {\n        this._image.onload = () => this._loadImageHandler();\n        this._image.src = this._src;\n    }\n    waitWhileLoading() {\n        const loadingPromise = new Promise(resolve => {\n            this._image.onload = () => {\n                this._loadImageHandler();\n                resolve();\n            };\n        });\n        if (this._hasImage)\n            return Promise.resolve();\n        return loadingPromise;\n    }\n    toObject() {\n        return {\n            id: this._id,\n            src: this._src\n        };\n    }\n    static fromObject(val) {\n        return new MapChipImage(val.src, val.id);\n    }\n}\nclass MapChipsCollection {\n    constructor() {\n        this._items = new Map();\n    }\n    push(item) {\n        this._items.set(item.id, item);\n    }\n    findById(chipId) {\n        return this._items.get(chipId) || null;\n    }\n    async waitWhileLoading() {\n        await Promise.all(Array.from(this._items.values()).map(item => item.waitWhileLoading()));\n    }\n    toObject() {\n        const objectedMapChipImage = [];\n        const valuesItr = this._items.values();\n        for (const val of valuesItr) {\n            objectedMapChipImage.push(val.toObject());\n        }\n        return {\n            items: objectedMapChipImage\n        };\n    }\n    fromObject(val) {\n        this._items.clear();\n        val.items.forEach(objectedVal => {\n            this.push(MapChipImage.fromObject(objectedVal));\n        });\n    }\n}\n\n\n/***/ }),\n/* 3 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_6710__) => {\n\n__nested_webpack_require_6710__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_6710__.d(__webpack_exports__, {\n/* harmony export */   \"AutoTile\": () => (/* binding */ AutoTile),\n/* harmony export */   \"AutoTiles\": () => (/* binding */ AutoTiles)\n/* harmony export */ });\n/* harmony import */ var _MapChip__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_6710__(4);\n\nclass AutoTile {\n    constructor(_mapChipFragments, _id) {\n        this._mapChipFragments = _mapChipFragments;\n        this._id = _id;\n    }\n    get id() {\n        return this._id;\n    }\n    get mapChipFragments() {\n        return this._mapChipFragments;\n    }\n    toObject() {\n        return {\n            id: this._id,\n            mapChipFragments: this._mapChipFragments.map(fragment => fragment.toObject())\n        };\n    }\n    static fromObject(val) {\n        return new AutoTile(val.mapChipFragments.map(fragment => _MapChip__WEBPACK_IMPORTED_MODULE_0__.MapChipFragment.fromObject(fragment)), val.id);\n    }\n}\nclass AutoTiles {\n    constructor() {\n        this._autoTiles = new Map();\n        this._maxId = 0;\n    }\n    get length() {\n        return this._autoTiles.size;\n    }\n    push(item) {\n        this._autoTiles.set(item.id, item);\n    }\n    fromId(id) {\n        return this._autoTiles.get(id) || null;\n    }\n    values() {\n        return this._autoTiles.values();\n    }\n    import(strategy) {\n        const mapChipFragmentGroups = strategy.getMapChipFragments();\n        mapChipFragmentGroups.forEach(group => {\n            const autoTile = new AutoTile(group, ++this._maxId);\n            this.push(autoTile);\n        });\n    }\n    toObject() {\n        const objectedAutoTiles = [];\n        const valuesItr = this._autoTiles.values();\n        for (const val of valuesItr) {\n            objectedAutoTiles.push(val.toObject());\n        }\n        return {\n            autoTiles: objectedAutoTiles\n        };\n    }\n    fromObject(val) {\n        this._autoTiles.clear();\n        val.autoTiles.forEach(objectedAutoTile => {\n            this.push(AutoTile.fromObject(objectedAutoTile));\n        });\n    }\n}\n\n\n/***/ }),\n/* 4 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_8885__) => {\n\n__nested_webpack_require_8885__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_8885__.d(__webpack_exports__, {\n/* harmony export */   \"MapChipFragment\": () => (/* binding */ MapChipFragment),\n/* harmony export */   \"MapChip\": () => (/* binding */ MapChip),\n/* harmony export */   \"isAutoTileMapChipProperties\": () => (/* binding */ isAutoTileMapChipProperties),\n/* harmony export */   \"AutoTileMapChip\": () => (/* binding */ AutoTileMapChip),\n/* harmony export */   \"isAutoTileMapChip\": () => (/* binding */ isAutoTileMapChip)\n/* harmony export */ });\nclass MapChipFragment {\n    constructor(_x, _y, _chipId, \n    /**\n     *  _renderingArea indicates the area where this map-chip is to be drawn.\n     *  It is represented by a OR of the following area-numbers.\n     *\n     * |<- 1chip ->|\n     * *-----*-----* ---\n     * |  1  |  2  |  ↑\n     * *-----*-----* 1chip\n     * |  4  |  8  |  ↓\n     * *-----*-----* ---\n     */\n    _renderingArea = 15) {\n        this._x = _x;\n        this._y = _y;\n        this._chipId = _chipId;\n        this._renderingArea = _renderingArea;\n        this._identifyKey = '';\n        this._identifyKey = `${_x},${_y},${_chipId}`;\n    }\n    get x() {\n        return this._x;\n    }\n    get y() {\n        return this._y;\n    }\n    get chipId() {\n        return this._chipId;\n    }\n    get identifyKey() {\n        return this._identifyKey;\n    }\n    get renderingArea() {\n        return this._renderingArea;\n    }\n    withParameter(parameters) {\n        if (parameters.x)\n            this._x = parameters.x;\n        if (parameters.y)\n            this._y = parameters.y;\n        if (parameters.renderingArea)\n            this._renderingArea = parameters.renderingArea;\n        return this;\n    }\n    clone() {\n        return new MapChipFragment(this._x, this._y, this._chipId);\n    }\n    compare(others) {\n        return this.identifyKey === others.identifyKey;\n    }\n    toObject() {\n        return {\n            x: this._x,\n            y: this._y,\n            chipId: this._chipId,\n            renderingArea: this._renderingArea\n        };\n    }\n    static fromObject(val) {\n        return new MapChipFragment(val.x, val.y, val.chipId, val.renderingArea);\n    }\n}\nclass MapChip {\n    constructor(_items = [], _arrangementName = '') {\n        this._items = _items;\n        this._arrangementName = _arrangementName;\n        this._identifyKey = '';\n        this._buildIdentifyKey();\n    }\n    get items() {\n        return this._items;\n    }\n    get identifyKey() {\n        return this._identifyKey;\n    }\n    get length() {\n        return this._items.length;\n    }\n    get arrangementName() {\n        return this._arrangementName;\n    }\n    _buildIdentifyKey() {\n        this._identifyKey = this._items.map(item => item.identifyKey).join('|');\n    }\n    setArrangementName(name) {\n        this._arrangementName = name;\n    }\n    push(mapChip) {\n        this._items.push(mapChip);\n        this._buildIdentifyKey();\n    }\n    clear() {\n        this._items.length = 0;\n        this._buildIdentifyKey();\n    }\n    clone() {\n        const cloned = new MapChip();\n        cloned._items = this._items.map(mapChip => mapChip.clone());\n        return cloned;\n    }\n    compare(others) {\n        return this.identifyKey === others.identifyKey;\n    }\n    toObject() {\n        return {\n            items: this._items.map(item => item.toObject()),\n            arrangementName: this._arrangementName\n        };\n    }\n    static fromObject(val) {\n        return new MapChip(val.items.map(item => MapChipFragment.fromObject(item)), val.arrangementName);\n    }\n}\nfunction isAutoTileMapChipProperties(obj) {\n    return obj &&\n        typeof obj.autoTileId === 'number' &&\n        obj.boundary !== undefined &&\n        obj.cross !== undefined;\n}\nclass AutoTileMapChip extends MapChip {\n    constructor(_autoTileId, items = [], _arrangementName = '', _boundary = {\n        top: false,\n        bottom: false,\n        left: false,\n        right: false\n    }, _cross = {\n        topLeft: false,\n        topRight: false,\n        bottomLeft: false,\n        bottomRight: false\n    }) {\n        super(items, _arrangementName);\n        this._autoTileId = _autoTileId;\n        this._boundary = _boundary;\n        this._cross = _cross;\n    }\n    get boundary() {\n        return this._boundary;\n    }\n    get cross() {\n        return this._cross;\n    }\n    get autoTileId() {\n        return this._autoTileId;\n    }\n    setBoundary(boundary) {\n        this._boundary = boundary;\n    }\n    setCross(cross) {\n        this._cross = cross;\n    }\n    toObject() {\n        return {\n            ...super.toObject(),\n            boundary: this._boundary,\n            cross: this._cross,\n            autoTileId: this._autoTileId\n        };\n    }\n    static fromObject(val) {\n        return new AutoTileMapChip(val.autoTileId, val.items.map(item => MapChipFragment.fromObject(item)), val.arrangementName, val.boundary, val.cross);\n    }\n}\nfunction isAutoTileMapChip(obj) {\n    return obj &&\n        typeof obj.boundary === 'object' &&\n        typeof obj.cross === 'object';\n}\n\n\n/***/ }),\n/* 5 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_14040__) => {\n\n__nested_webpack_require_14040__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_14040__.d(__webpack_exports__, {\n/* harmony export */   \"TiledMapData\": () => (/* binding */ TiledMapData)\n/* harmony export */ });\n/* harmony import */ var _MapChip__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_14040__(4);\n/* harmony import */ var _MapMatrix__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_14040__(6);\n\n\nclass TiledMapData extends _MapMatrix__WEBPACK_IMPORTED_MODULE_1__.MapMatrix {\n    filter(needles) {\n        const filtered = this._items.map(chip => needles.some(needle => !!chip && needle.compare(chip)) ? chip : null);\n        return new TiledMapData(this.width, this.height, filtered);\n    }\n    toObject() {\n        return {\n            chipCountX: this._chipCountX,\n            chipCountY: this._chipCountY,\n            mapData: this._items.map(data => (data === null || data === void 0 ? void 0 : data.toObject()) || null)\n        };\n    }\n    static fromObject(val) {\n        const mapData = val.mapData.map(data => {\n            if (!data)\n                return null;\n            if ((0,_MapChip__WEBPACK_IMPORTED_MODULE_0__.isAutoTileMapChipProperties)(data)) {\n                return _MapChip__WEBPACK_IMPORTED_MODULE_0__.AutoTileMapChip.fromObject(data);\n            }\n            return _MapChip__WEBPACK_IMPORTED_MODULE_0__.MapChip.fromObject(data);\n        });\n        return new TiledMapData(val.chipCountX, val.chipCountY, mapData);\n    }\n}\n\n\n/***/ }),\n/* 6 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_15590__) => {\n\n__nested_webpack_require_15590__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_15590__.d(__webpack_exports__, {\n/* harmony export */   \"MapMatrix\": () => (/* binding */ MapMatrix)\n/* harmony export */ });\nclass MapMatrix {\n    constructor(_chipCountX, _chipCountY, _items = []) {\n        this._chipCountX = _chipCountX;\n        this._chipCountY = _chipCountY;\n        this._items = _items;\n        if (this._items.length > 0 && this.size !== this._items.length) {\n            throw new Error();\n        }\n        if (this._items.length === 0)\n            this.allocate();\n    }\n    get size() {\n        return this._chipCountX * this._chipCountY;\n    }\n    get width() {\n        return this._chipCountX;\n    }\n    get height() {\n        return this._chipCountY;\n    }\n    get items() {\n        return this._items;\n    }\n    set(items) {\n        if (items.length !== this._items.length)\n            throw new Error();\n        this._items = items;\n    }\n    transferFromTiledMapData(src, srcX, srcY, width, height, destX, destY) {\n        for (let x = 0; x < width; x++) {\n            const putX = destX + x;\n            const pickupX = srcX + x;\n            if (putX < 0 || putX >= this.width)\n                continue;\n            if (pickupX < 0 || pickupX >= src.width)\n                continue;\n            for (let y = 0; y < height; y++) {\n                const putY = destY + y;\n                const pickupY = srcY + y;\n                if (putY < 0 || putY >= this.height)\n                    continue;\n                if (pickupY < 0 || pickupY >= src.height)\n                    continue;\n                const item = src.getFromChipPosition(pickupX, pickupY);\n                this.put(item, putX, putY);\n            }\n        }\n    }\n    getFromChipPosition(x, y) {\n        if ((x < 0) || (y < 0) || (x >= this._chipCountX) || (y >= this._chipCountY))\n            throw new Error('The position is out of range.');\n        const mapNumber = this.convertPositionToMapNumber(x, y);\n        return this._items[mapNumber];\n    }\n    put(item, x, y) {\n        const mapNumber = this.convertPositionToMapNumber(x, y);\n        this._items[mapNumber] = item;\n    }\n    convertPositionToMapNumber(x, y) {\n        return y * this._chipCountX + x;\n    }\n    allocate(defaultValue = null) {\n        this._items = new Array(this._chipCountY * this._chipCountX).fill(null);\n    }\n}\n\n\n/***/ }),\n/* 7 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_18066__) => {\n\n__nested_webpack_require_18066__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_18066__.d(__webpack_exports__, {\n/* harmony export */   \"ColiderMap\": () => (/* binding */ ColiderMap)\n/* harmony export */ });\n/* harmony import */ var _MapMatrix__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_18066__(6);\n\nclass ColiderMap extends _MapMatrix__WEBPACK_IMPORTED_MODULE_0__.MapMatrix {\n    toObject() {\n        return {\n            chipCountX: this._chipCountX,\n            chipCountY: this._chipCountY,\n            coliders: this._items\n        };\n    }\n    static fromObject(val) {\n        return new ColiderMap(val.chipCountX, val.chipCountY, val.coliders);\n    }\n    allocate() {\n        super.allocate('none');\n    }\n}\n\n\n/***/ }),\n/* 8 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_18879__) => {\n\n__nested_webpack_require_18879__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_18879__.d(__webpack_exports__, {\n/* harmony export */   \"DefaultAutoTileImportStrategy\": () => (/* binding */ DefaultAutoTileImportStrategy)\n/* harmony export */ });\n/* harmony import */ var _MapChip__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_18879__(4);\n\nclass DefaultAutoTileImportStrategy {\n    constructor(_mapChipImage, _chipWidth, _chipHeight) {\n        this._mapChipImage = _mapChipImage;\n        this._chipWidth = _chipWidth;\n        this._chipHeight = _chipHeight;\n    }\n    getMapChipFragments() {\n        const countX = Math.floor(this._mapChipImage.image.width / this._chipWidth);\n        const countY = Math.floor(this._mapChipImage.image.height / this._chipHeight);\n        const mapChipFragmentGroups = [];\n        for (let y = 0; y < countY; y += 5) {\n            for (let x = 0; x < countX; x++) {\n                const mapChipFragments = [];\n                mapChipFragments.push(new _MapChip__WEBPACK_IMPORTED_MODULE_0__.MapChipFragment(x, y, this._mapChipImage.id));\n                mapChipFragments.push(new _MapChip__WEBPACK_IMPORTED_MODULE_0__.MapChipFragment(x, y + 1, this._mapChipImage.id));\n                mapChipFragments.push(new _MapChip__WEBPACK_IMPORTED_MODULE_0__.MapChipFragment(x, y + 2, this._mapChipImage.id));\n                mapChipFragments.push(new _MapChip__WEBPACK_IMPORTED_MODULE_0__.MapChipFragment(x, y + 3, this._mapChipImage.id));\n                mapChipFragments.push(new _MapChip__WEBPACK_IMPORTED_MODULE_0__.MapChipFragment(x, y + 4, this._mapChipImage.id));\n                mapChipFragmentGroups.push(mapChipFragments);\n            }\n        }\n        return mapChipFragmentGroups;\n    }\n}\n\n\n/***/ }),\n/* 9 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_20700__) => {\n\n__nested_webpack_require_20700__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_20700__.d(__webpack_exports__, {\n/* harmony export */   \"MapRenderer\": () => (/* binding */ MapRenderer)\n/* harmony export */ });\nclass MapRenderer {\n    constructor(_tiledMap) {\n        this._tiledMap = _tiledMap;\n        this._backgroundRgba = { r: 255, g: 255, b: 255, a: 1.0 };\n    }\n    setTiledMap(tiledMap) {\n        this._tiledMap = tiledMap;\n    }\n    renderAll(ctx) {\n        this._tiledMap.datas.forEach(data => this.render(data, ctx));\n    }\n    renderLayer(index, ctx) {\n        this.render(this._tiledMap.datas[index], ctx);\n    }\n    render(data, ctx) {\n        data.items.forEach((value, index) => {\n            const position = this._tiledMap.convertMapNumberToPosition(index);\n            this.putOrClearChipToCanvas(ctx, value, position.x, position.y);\n        });\n    }\n    putOrClearChipToCanvas(ctx, mapChip, chipX, chipY, isTemporaryRendering = false) {\n        if (!mapChip) {\n            this._clearChipToCanvas(ctx, chipX, chipY, isTemporaryRendering);\n        }\n        else {\n            mapChip.items.forEach(item => {\n                this._putChipToCanvas(ctx, item, chipX, chipY);\n            });\n        }\n    }\n    _clearChipToCanvas(ctx, chipX, chipY, isTemporaryRendering) {\n        const position = this._tiledMap.convertChipPositionToPixel(chipX, chipY);\n        ctx.clearRect(position.x, position.y, this._tiledMap.chipWidth, this._tiledMap.chipHeight);\n        if (isTemporaryRendering) {\n            ctx.fillStyle = `rgba(${this._backgroundRgba.r},${this._backgroundRgba.g},${this._backgroundRgba.b},${this._backgroundRgba.a})`;\n            ctx.fillRect(position.x, position.y, this._tiledMap.chipWidth, this._tiledMap.chipHeight);\n        }\n    }\n    _putChipToCanvas(ctx, mapChip, chipX, chipY) {\n        const mapChips = this._tiledMap.mapChipsCollection.findById(mapChip.chipId);\n        const image = mapChips === null || mapChips === void 0 ? void 0 : mapChips.image;\n        if (!image)\n            return;\n        const renderingArea = this._getRenderingArea(mapChip);\n        const position = this._tiledMap.convertChipPositionToPixel(chipX, chipY);\n        position.x += renderingArea.destOffsetX;\n        position.y += renderingArea.destOffsetY;\n        ctx.clearRect(position.x, position.y, renderingArea.width, renderingArea.height);\n        ctx.drawImage(image, renderingArea.x, renderingArea.y, renderingArea.width, renderingArea.height, position.x, position.y, renderingArea.width, renderingArea.height);\n    }\n    _getRenderingArea(mapChip) {\n        const width = this._tiledMap.chipWidth;\n        const height = this._tiledMap.chipHeight;\n        const x = mapChip.x * width;\n        const y = mapChip.y * height;\n        if (mapChip.renderingArea === 15) {\n            return { x, y, width, height, destOffsetX: 0, destOffsetY: 0 };\n        }\n        const halfWidth = Math.round(width / 2);\n        const halfHeight = Math.round(height / 2);\n        switch (mapChip.renderingArea) {\n            case 1:\n                return { x, y, width: halfWidth, height: halfHeight, destOffsetX: 0, destOffsetY: 0 };\n            case 2:\n                return { x: x + halfWidth, y, width: halfWidth, height: halfHeight, destOffsetX: halfWidth, destOffsetY: 0 };\n            case 3:\n                return { x, y, width, height: halfHeight, destOffsetX: 0, destOffsetY: 0 };\n            case 4:\n                return { x, y: y + halfHeight, width: halfWidth, height: halfHeight, destOffsetX: 0, destOffsetY: halfHeight };\n            case 5:\n                return { x, y, width: halfWidth, height, destOffsetX: 0, destOffsetY: 0 };\n            case 8:\n                return { x: x + halfWidth, y: y + halfHeight, width: halfWidth, height: halfHeight, destOffsetX: halfWidth, destOffsetY: halfHeight };\n            case 10:\n                return { x: x + halfWidth, y, width: halfWidth, height, destOffsetX: halfWidth, destOffsetY: 0 };\n            case 12:\n                return { x, y: y + halfHeight, width, height: halfHeight, destOffsetX: 0, destOffsetY: halfHeight };\n        }\n    }\n}\n\n\n/***/ })\n/******/ \t]);\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_25080__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __nested_webpack_require_25080__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__nested_webpack_require_25080__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__nested_webpack_require_25080__.o(definition, key) && !__nested_webpack_require_25080__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__nested_webpack_require_25080__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__nested_webpack_require_25080__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n(() => {\n__nested_webpack_require_25080__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_25080__.d(__webpack_exports__, {\n/* harmony export */   \"TiledMap\": () => (/* reexport safe */ _TiledMap__WEBPACK_IMPORTED_MODULE_0__.TiledMap),\n/* harmony export */   \"TiledMapData\": () => (/* reexport safe */ _MapData_TiledMapData__WEBPACK_IMPORTED_MODULE_1__.TiledMapData),\n/* harmony export */   \"MapChipImage\": () => (/* reexport safe */ _MapChips__WEBPACK_IMPORTED_MODULE_2__.MapChipImage),\n/* harmony export */   \"MapChipsCollection\": () => (/* reexport safe */ _MapChips__WEBPACK_IMPORTED_MODULE_2__.MapChipsCollection),\n/* harmony export */   \"MapChipFragment\": () => (/* reexport safe */ _MapChip__WEBPACK_IMPORTED_MODULE_3__.MapChipFragment),\n/* harmony export */   \"MapChip\": () => (/* reexport safe */ _MapChip__WEBPACK_IMPORTED_MODULE_3__.MapChip),\n/* harmony export */   \"AutoTileMapChip\": () => (/* reexport safe */ _MapChip__WEBPACK_IMPORTED_MODULE_3__.AutoTileMapChip),\n/* harmony export */   \"isAutoTileMapChip\": () => (/* reexport safe */ _MapChip__WEBPACK_IMPORTED_MODULE_3__.isAutoTileMapChip),\n/* harmony export */   \"AutoTiles\": () => (/* reexport safe */ _AutoTile_AutoTiles__WEBPACK_IMPORTED_MODULE_4__.AutoTiles),\n/* harmony export */   \"AutoTile\": () => (/* reexport safe */ _AutoTile_AutoTiles__WEBPACK_IMPORTED_MODULE_4__.AutoTile),\n/* harmony export */   \"DefaultAutoTileImportStrategy\": () => (/* reexport safe */ _AutoTile_DefaultAutoTileImportStrategy__WEBPACK_IMPORTED_MODULE_5__.DefaultAutoTileImportStrategy),\n/* harmony export */   \"ColiderMap\": () => (/* reexport safe */ _MapData_ColiderMap__WEBPACK_IMPORTED_MODULE_6__.ColiderMap),\n/* harmony export */   \"MapRenderer\": () => (/* reexport safe */ _MapRenderer__WEBPACK_IMPORTED_MODULE_7__.MapRenderer)\n/* harmony export */ });\n/* harmony import */ var _TiledMap__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_25080__(1);\n/* harmony import */ var _MapData_TiledMapData__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_25080__(5);\n/* harmony import */ var _MapChips__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_25080__(2);\n/* harmony import */ var _MapChip__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_25080__(4);\n/* harmony import */ var _AutoTile_AutoTiles__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_25080__(3);\n/* harmony import */ var _AutoTile_DefaultAutoTileImportStrategy__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_25080__(8);\n/* harmony import */ var _MapData_ColiderMap__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_25080__(7);\n/* harmony import */ var _MapRenderer__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_25080__(9);\n\n\n\n\n\n\n\n\n\n})();\n\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});\n//# sourceMappingURL=main.js.map\n\n//# sourceURL=webpack://@piyoppi/pico2map-samples/../tiled-map/dist/main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./autotile/src/autotile.ts");
/******/ 	
/******/ })()
;